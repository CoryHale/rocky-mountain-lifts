{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Task.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Card, CardHeader, CardBody, Form, FormGroup, FormFeedback, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Table } from \"reactstrap\";\nimport { getTasks } from \"../../actions/getTasks\";\nimport { getWorkOrders } from \"../../actions/getWorkOrders\";\nimport Select from \"react-select\";\nimport \"../../styles/task.scss\";\n\nconst Task = () => {\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector(state => state.getTasksReducer.tasks);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n  const [employees, setEmployees] = useState();\n  const fetchEmployees = useSelector(state => state.getEmployeesReducer.employees);\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState();\n  const [errors, setErrors] = useState({\n    taskDescription: '',\n    taskDate: '',\n    taskTime: '',\n    employeeId: ''\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTasks());\n    dispatch(getWorkOrders());\n  }, []);\n  useEffect(() => {\n    setTasks(fetchTasks.tasks);\n  }, [fetchTasks]);\n  useEffect(() => {\n    setWorkOrders(fetchWorkOrders.workOrders);\n  }, [fetchWorkOrders]);\n  useEffect(() => {\n    const array = [];\n    fetchEmployees.forEach(employee => {\n      if (employee.active === true) {\n        array.push(employee);\n      }\n\n      ;\n    });\n    setEmployees(array);\n  }, [fetchEmployees]);\n\n  const dateConverter = date => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = time => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = (e, task) => {\n    console.log(task);\n    setCurrentTask(task);\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = () => {};\n\n  const handleSelectChange = () => {};\n\n  const handleSubmit = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Tasks\"), tasks ? tasks.map(task => /*#__PURE__*/React.createElement(Card, {\n    onClick: e => toggle(e, task),\n    className: \"tasks-page-task-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, task.taskDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, dateConverter(task.taskDate)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, timeConverter(task.taskTime))))))) : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"taskDescription\",\n    value: currentTask ? currentTask.taskDescription : null,\n    onChange: handleChange,\n    invalid: errors.taskDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, errors.taskDescription)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    placeholder: \"date placeholder\",\n    name: \"taskDate\",\n    value: currentTask ? currentTask.taskDate : null,\n    onChange: handleChange,\n    invalid: errors.taskDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, errors.taskDate)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    placeholder: \"time placeholder\",\n    name: \"taskTime\",\n    value: currentTask ? currentTask.taskTime : null,\n    onChange: handleChange,\n    invalid: errors.taskTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, errors.taskTime))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(Select, {\n    options: employees,\n    value: currentTask ? currentTask.employeeId : null,\n    onChange: handleSelectChange,\n    className: errors.employeeId ? \"invalid\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.employeeId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, errors.employeeId)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, \"Complete\"))));\n};\n\nexport default Task;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Task.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Button","Card","CardHeader","CardBody","Form","FormGroup","FormFeedback","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","Table","getTasks","getWorkOrders","Select","Task","tasks","setTasks","fetchTasks","state","getTasksReducer","workOrders","setWorkOrders","fetchWorkOrders","getWorkOrdersReducer","employees","setEmployees","fetchEmployees","getEmployeesReducer","isOpen","setIsOpen","currentTask","setCurrentTask","errors","setErrors","taskDescription","taskDate","taskTime","employeeId","dispatch","array","forEach","employee","active","push","dateConverter","date","dateArray","split","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","toggle","e","task","console","log","handleChange","handleSelectChange","handleSubmit","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,YAPF,EAQEC,KARF,EASEC,KATF,EAUEC,KAVF,EAWEC,WAXF,EAYEC,SAZF,EAaEC,WAbF,EAcEC,KAdF,QAeO,YAfP;AAgBA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,wBAAP;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMwB,UAAU,GAAGtB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBJ,KAAlC,CAA9B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8B5B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM6B,eAAe,GAAG3B,WAAW,CAChCuB,KAAD,IAAWA,KAAK,CAACK,oBAAN,CAA2BH,UADL,CAAnC;AAGA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,EAA1C;AACA,QAAMiC,cAAc,GAAG/B,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACS,mBAAN,CAA0BH,SAApC,CAAlC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBpC,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACqC,WAAD,EAAcC,cAAd,IAAgCtC,QAAQ,EAA9C;AACA,QAAM,CAACuC,MAAD,EAASC,SAAT,IAAsBxC,QAAQ,CAAC;AACnCyC,IAAAA,eAAe,EAAE,EADkB;AAEnCC,IAAAA,QAAQ,EAAE,EAFyB;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,UAAU,EAAE;AAJuB,GAAD,CAApC;AAMA,QAAMC,QAAQ,GAAG1C,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd4C,IAAAA,QAAQ,CAAC3B,QAAQ,EAAT,CAAR;AACA2B,IAAAA,QAAQ,CAAC1B,aAAa,EAAd,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACC,UAAU,CAACF,KAAZ,CAAR;AACD,GAFQ,EAEN,CAACE,UAAD,CAFM,CAAT;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,aAAa,CAACC,eAAe,CAACF,UAAjB,CAAb;AACD,GAFQ,EAEN,CAACE,eAAD,CAFM,CAAT;AAIA5B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6C,KAAK,GAAG,EAAd;AAEAb,IAAAA,cAAc,CAACc,OAAf,CAAuBC,QAAQ,IAAI;AACjC,UAAGA,QAAQ,CAACC,MAAT,KAAoB,IAAvB,EAA6B;AAC3BH,QAAAA,KAAK,CAACI,IAAN,CAAWF,QAAX;AACD;;AAAA;AACF,KAJD;AAMAhB,IAAAA,YAAY,CAACc,KAAD,CAAZ;AACD,GAVQ,EAUN,CAACb,cAAD,CAVM,CAAT;;AAYA,QAAMkB,aAAa,GAAIC,IAAD,IAAU;AAC9B,UAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAlB;AACA,WAAQ,GAAED,SAAS,CAAC,CAAD,CAAI,IAAGA,SAAS,CAAC,CAAD,CAAI,IAAGA,SAAS,CAAC,CAAD,CAAI,EAAvD;AACD,GAHD;;AAKA,QAAME,aAAa,GAAIC,IAAD,IAAU;AAC9B,UAAMC,SAAS,GAAGD,IAAI,CAACF,KAAL,CAAW,GAAX,CAAlB;AACA,UAAMI,IAAI,GAAGC,QAAQ,CAACF,SAAS,CAAC,CAAD,CAAV,CAArB;AACA,QAAIG,CAAJ;;AAEA,QAAIF,IAAI,IAAI,EAAZ,EAAgB;AACdE,MAAAA,CAAC,GAAG,IAAJ;AACD,KAFD,MAEO;AACLA,MAAAA,CAAC,GAAG,IAAJ;AACD;;AAED,QAAIF,IAAI,KAAK,CAAb,EAAgB;AACd,YAAMG,OAAO,GAAG,IAAhB;AACAJ,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeI,OAAf;AACD,KAHD,MAGO,IAAIH,IAAI,IAAI,EAAZ,EAAgB;AACrB,YAAMG,OAAO,GAAGH,IAAI,CAACI,QAAL,EAAhB;AACAL,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeI,OAAf;AACD,KAHM,MAGA;AACL,YAAMA,OAAO,GAAG,CAACH,IAAI,GAAG,EAAR,EAAYI,QAAZ,EAAhB;AACAL,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeI,OAAf;AACD;;AAED,WAAQ,GAAEJ,SAAS,CAAC,CAAD,CAAI,IAAGA,SAAS,CAAC,CAAD,CAAI,IAAGG,CAAE,EAA5C;AACD,GAvBD;;AAyBA,QAAMG,MAAM,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA3B,IAAAA,cAAc,CAAC2B,IAAD,CAAd;AACA7B,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAJD;;AAMA,QAAMiC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,QAAMC,kBAAkB,GAAG,MAAM,CAEhC,CAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM,CAAE,CAA7B;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGhD,KAAK,GACFA,KAAK,CAACiD,GAAN,CAAWN,IAAD,iBACR,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAGD,CAAD,IAAOD,MAAM,CAACC,CAAD,EAAIC,IAAJ,CAA5B;AAAuC,IAAA,SAAS,EAAC,sBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACxB,eAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKU,aAAa,CAACc,IAAI,CAACvB,QAAN,CAAlB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKa,aAAa,CAACU,IAAI,CAACtB,QAAN,CAAlB,CAHF,CADF,CARF,CADF,CADF,CADE,GAqBF,IAvBN,eAwBE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAER,MAAf;AAAuB,IAAA,MAAM,EAAE4B,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,iBAFP;AAGE,IAAA,KAAK,EAAEjC,WAAW,GAAGA,WAAW,CAACI,eAAf,GAAiC,IAHrD;AAIE,IAAA,QAAQ,EAAE2B,YAJZ;AAKE,IAAA,OAAO,EAAE7B,MAAM,CAACE,eAAP,GAAyB,IAAzB,GAAgC,KAL3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeF,MAAM,CAACE,eAAtB,CATF,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEJ,WAAW,GAAGA,WAAW,CAACK,QAAf,GAA0B,IAJ9C;AAKE,IAAA,QAAQ,EAAE0B,YALZ;AAME,IAAA,OAAO,EAAE7B,MAAM,CAACG,QAAP,GAAkB,IAAlB,GAAyB,KANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeH,MAAM,CAACG,QAAtB,CAVF,CADF,eAaE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEL,WAAW,GAAGA,WAAW,CAACM,QAAf,GAA0B,IAJ9C;AAKE,IAAA,QAAQ,EAAEyB,YALZ;AAME,IAAA,OAAO,EAAE7B,MAAM,CAACI,QAAP,GAAkB,IAAlB,GAAyB,KANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeJ,MAAM,CAACI,QAAtB,CAVF,CAbF,CAZF,eAsCE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEZ,SADX;AAEE,IAAA,KAAK,EAAEM,WAAW,GAAGA,WAAW,CAACO,UAAf,GAA4B,IAFhD;AAGE,IAAA,QAAQ,EAAEyB,kBAHZ;AAIE,IAAA,SAAS,EAAE9B,MAAM,CAACK,UAAP,GAAoB,SAApB,GAAgC,EAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,OAAO,EAAEL,MAAM,CAACK,UAAP,GAAoB,IAApB,GAA2B,KAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAaE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeL,MAAM,CAACK,UAAtB,CAbF,CAtCF,CADF,CAFF,eA0DE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CA1DF,CAxBF,CADF;AA0FD,CApLD;;AAsLA,eAAevB,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table,\n} from \"reactstrap\";\nimport { getTasks } from \"../../actions/getTasks\";\nimport { getWorkOrders } from \"../../actions/getWorkOrders\";\nimport Select from \"react-select\";\n\nimport \"../../styles/task.scss\";\n\nconst Task = () => {\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector((state) => state.getTasksReducer.tasks);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const [employees, setEmployees] = useState();\n  const fetchEmployees = useSelector(state => state.getEmployeesReducer.employees);\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState();\n  const [errors, setErrors] = useState({\n    taskDescription: '',\n    taskDate: '',\n    taskTime: '',\n    employeeId: ''\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTasks());\n    dispatch(getWorkOrders());\n  }, []);\n\n  useEffect(() => {\n    setTasks(fetchTasks.tasks);\n  }, [fetchTasks]);\n\n  useEffect(() => {\n    setWorkOrders(fetchWorkOrders.workOrders);\n  }, [fetchWorkOrders]);\n\n  useEffect(() => {\n    const array = [];\n\n    fetchEmployees.forEach(employee => {\n      if(employee.active === true) {\n        array.push(employee);\n      };\n    });\n\n    setEmployees(array);\n  }, [fetchEmployees]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = (e, task) => {\n    console.log(task)\n    setCurrentTask(task)\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = () => {\n\n  };\n\n  const handleSelectChange = () => {\n\n  };\n\n  const handleSubmit = () => {};\n\n  return (\n    <div className=\"tasks-page\">\n      <h1>Tasks</h1>\n      {tasks\n        ? tasks.map((task) => (\n            <Card onClick={(e) => toggle(e, task)} className=\"tasks-page-task-card\">\n              <Table borderless>\n                <thead>\n                  <tr>\n                    <th>Task</th>\n                    <th>Date</th>\n                    <th>Time</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{task.taskDescription}</td>\n                    <td>{dateConverter(task.taskDate)}</td>\n                    <td>{timeConverter(task.taskTime)}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          ))\n        : null}\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label>Task</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                value={currentTask ? currentTask.taskDescription : null}\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <div>\n              <FormGroup>\n                <Label>Date</Label>\n                <Input\n                  type=\"date\"\n                  placeholder=\"date placeholder\"\n                  name=\"taskDate\"\n                  value={currentTask ? currentTask.taskDate : null}\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>Time</Label>\n                <Input\n                  type=\"time\"\n                  placeholder=\"time placeholder\"\n                  name=\"taskTime\"\n                  value={currentTask ? currentTask.taskTime : null}\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label>Assigned To</Label>\n              <Select\n                options={employees}\n                value={currentTask ? currentTask.employeeId : null}\n                onChange={handleSelectChange}\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\">Edit</Button>\n          <Button color=\"success\">Complete</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}