{"ast":null,"code":"import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\nexport const GET_EMPLOYEES_START = \"GET_EMPLOYEES_START\";\nexport const GET_EMPLOYEES_SUCCESS = \"GET_EMPLOYEES_SUCCESS\";\nexport const GET_EMPLOYEES_FAILURE = \"GET_EMPLOYEES_FAILURE\";\nexport const getEmployees = () => async dispatch => {\n  dispatch({\n    type: GET_EMPLOYEES_START\n  });\n  return await axiosWithAuth().get(`${dbUrl}/employees`).then(res => {\n    dispatch({\n      type: GET_EMPLOYEES_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_EMPLOYEES_FAILURE,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/actions/getEmployees.js"],"names":["dbUrl","axiosWithAuth","GET_EMPLOYEES_START","GET_EMPLOYEES_SUCCESS","GET_EMPLOYEES_FAILURE","getEmployees","dispatch","type","get","then","res","payload","data","catch","err"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AAEA,SAAO,MAAMD,aAAa,GACvBO,GADU,CACL,GAAER,KAAM,YADH,EAEVS,IAFU,CAEJC,GAAD,IAAS;AACbJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,qBADC;AAEPQ,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,KAAD,CAAR;AAID,GAPU,EAQVC,KARU,CAQHC,GAAD,IAAS;AACdR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,qBADC;AAEPO,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GAbU,CAAb;AAcD,CAjBM","sourcesContent":["import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_EMPLOYEES_START = \"GET_EMPLOYEES_START\";\nexport const GET_EMPLOYEES_SUCCESS = \"GET_EMPLOYEES_SUCCESS\";\nexport const GET_EMPLOYEES_FAILURE = \"GET_EMPLOYEES_FAILURE\";\n\nexport const getEmployees = () => async (dispatch) => {\n  dispatch({ type: GET_EMPLOYEES_START });\n\n  return await axiosWithAuth()\n    .get(`${dbUrl}/employees`)\n    .then((res) => {\n      dispatch({\n        type: GET_EMPLOYEES_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_EMPLOYEES_FAILURE,\n        payload: err,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}