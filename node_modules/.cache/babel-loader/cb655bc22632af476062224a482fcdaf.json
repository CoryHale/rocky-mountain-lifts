{"ast":null,"code":"import _toConsumableArray from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import FullCalendar from'@fullcalendar/react';import dayGridPlugin from'@fullcalendar/daygrid';import timeGridPlugin from'@fullcalendar/timegrid';import interactionPlugin from'@fullcalendar/interaction';import bootstrapPlugin from'@fullcalendar/bootstrap';import'../../styles/employee-dashboard.scss';import'@fullcalendar/daygrid/main.css';import'@fullcalendar/timegrid/main.css';import'../../styles/calendar.scss';var TaskCalendar=function TaskCalendar(){var flag=useSelector(function(state){return state.taskToggleReducer.calendarView;});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),events=_useState2[0],setEvents=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),workOrders=_useState4[0],setWorkOrders=_useState4[1];var fetchWorkOrders=useSelector(function(state){return state.getWorkOrdersReducer.workOrders;});var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),tasks=_useState6[0],setTasks=_useState6[1];var fetchTasks=useSelector(function(state){return state.getTasksReducer.tasks;});var dispatch=useDispatch();useEffect(function(){if(fetchWorkOrders){fetchWorkOrders.workOrders.map(function(workOrder){setEvents(function(events){return[].concat(_toConsumableArray(events),[{title:workOrder.serviceDescription,date:workOrder.serviceDate}]);});});};},[fetchWorkOrders]);useEffect(function(){if(fetchTasks){fetchTasks.tasks.map(function(task){setEvents(function(events){return[].concat(_toConsumableArray(events),[{title:task.taskDescription,date:task.taskDate}]);});});};},[fetchTasks]);return/*#__PURE__*/React.createElement(\"div\",{className:\"calendar-page\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Calendar\"),/*#__PURE__*/React.createElement(FullCalendar,{plugins:[dayGridPlugin,timeGridPlugin,interactionPlugin,bootstrapPlugin],initialView:\"dayGridMonth\",headerToolbar:{left:'prev,next today',center:'title',right:'dayGridMonth,timeGridWeek,timeGridDay'},events:events,themeSystem:\"bootstrap\",height:\"auto\"}));};export default TaskCalendar;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/TaskCalendar.js"],"names":["React","useState","useEffect","useDispatch","useSelector","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","bootstrapPlugin","TaskCalendar","flag","state","taskToggleReducer","calendarView","events","setEvents","workOrders","setWorkOrders","fetchWorkOrders","getWorkOrdersReducer","tasks","setTasks","fetchTasks","getTasksReducer","dispatch","map","workOrder","title","serviceDescription","date","serviceDate","task","taskDescription","taskDate","left","center","right"],"mappings":"oZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,uBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,2BAA9B,CACA,MAAOC,CAAAA,eAAP,KAA4B,yBAA5B,CAEA,MAAO,sCAAP,CACA,MAAO,gCAAP,CACA,MAAO,iCAAP,CACA,MAAO,4BAAP,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAMC,CAAAA,IAAI,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACC,iBAAN,CAAwBC,YAA5B,EAAN,CAAxB,CADuB,cAEKb,QAAQ,CAAC,EAAD,CAFb,wCAEhBc,MAFgB,eAERC,SAFQ,8BAGaf,QAAQ,CAAC,EAAD,CAHrB,yCAGhBgB,UAHgB,eAGJC,aAHI,eAIvB,GAAMC,CAAAA,eAAe,CAAGf,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACQ,oBAAN,CAA2BH,UAA/B,EAAN,CAAnC,CAJuB,eAKGhB,QAAQ,CAAC,EAAD,CALX,yCAKhBoB,KALgB,eAKTC,QALS,eAMvB,GAAMC,CAAAA,UAAU,CAAGnB,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACY,eAAN,CAAsBH,KAA1B,EAAN,CAA9B,CACA,GAAMI,CAAAA,QAAQ,CAAGtB,WAAW,EAA5B,CAEAD,SAAS,CAAC,UAAM,CACZ,GAAGiB,eAAH,CAAoB,CAChBA,eAAe,CAACF,UAAhB,CAA2BS,GAA3B,CAA+B,SAAAC,SAAS,CAAI,CACxCX,SAAS,CAAC,SAAAD,MAAM,qCACTA,MADS,GAEZ,CACIa,KAAK,CAAED,SAAS,CAACE,kBADrB,CAEIC,IAAI,CAAEH,SAAS,CAACI,WAFpB,CAFY,IAAP,CAAT,CAOH,CARD,EASH,EACJ,CAZQ,CAYN,CAACZ,eAAD,CAZM,CAAT,CAcAjB,SAAS,CAAC,UAAM,CACZ,GAAGqB,UAAH,CAAe,CACXA,UAAU,CAACF,KAAX,CAAiBK,GAAjB,CAAqB,SAAAM,IAAI,CAAI,CACzBhB,SAAS,CAAC,SAAAD,MAAM,qCACTA,MADS,GAEZ,CACIa,KAAK,CAAEI,IAAI,CAACC,eADhB,CAEIH,IAAI,CAAEE,IAAI,CAACE,QAFf,CAFY,IAAP,CAAT,CAOH,CARD,EASH,EACJ,CAZQ,CAYN,CAACX,UAAD,CAZM,CAAT,CAcA,mBACI,2BAAK,SAAS,CAAC,eAAf,eACI,yCADJ,cAEI,oBAAC,YAAD,EACI,OAAO,CAAE,CAACjB,aAAD,CAAgBC,cAAhB,CAAgCC,iBAAhC,CAAmDC,eAAnD,CADb,CAEI,WAAW,CAAC,cAFhB,CAGI,aAAa,CAAE,CACX0B,IAAI,CAAE,iBADK,CAEXC,MAAM,CAAE,OAFG,CAGXC,KAAK,CAAE,uCAHI,CAHnB,CAQI,MAAM,CAAEtB,MARZ,CASI,WAAW,CAAC,WAThB,CAUI,MAAM,CAAC,MAVX,EAFJ,CADJ,CAkBH,CAvDD,CAyDA,cAAeL,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\n\nimport '../../styles/employee-dashboard.scss';\nimport '@fullcalendar/daygrid/main.css';\nimport '@fullcalendar/timegrid/main.css';\nimport '../../styles/calendar.scss';\n\nconst TaskCalendar = () => {\n    const flag = useSelector(state => state.taskToggleReducer.calendarView);\n    const [events, setEvents] = useState([]);\n    const [workOrders, setWorkOrders] = useState([]);\n    const fetchWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n    const [tasks, setTasks] = useState([]);\n    const fetchTasks = useSelector(state => state.getTasksReducer.tasks);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(fetchWorkOrders) {\n            fetchWorkOrders.workOrders.map(workOrder => {\n                setEvents(events => [\n                    ...events,\n                    {\n                        title: workOrder.serviceDescription,\n                        date: workOrder.serviceDate\n                    }\n                ]);\n            });\n        };\n    }, [fetchWorkOrders]);\n\n    useEffect(() => {\n        if(fetchTasks) {\n            fetchTasks.tasks.map(task => {\n                setEvents(events => [\n                    ...events,\n                    {\n                        title: task.taskDescription,\n                        date: task.taskDate\n                    }\n                ]);\n            });\n        };\n    }, [fetchTasks]);\n\n    return (\n        <div className=\"calendar-page\">\n            <h1>Calendar</h1>\n            <FullCalendar\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, bootstrapPlugin]}\n                initialView=\"dayGridMonth\"\n                headerToolbar={{\n                    left: 'prev,next today',\n                    center: 'title',\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                }}\n                events={events}\n                themeSystem=\"bootstrap\"\n                height=\"auto\"\n            />\n        </div>\n        \n    );\n};\n\nexport default TaskCalendar;"]},"metadata":{},"sourceType":"module"}