{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Form, FormGroup, Label, Input, FormFeedback, Button, Modal, ModalHeader, ModalBody, ModalFooter, Table, Card } from 'reactstrap';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport CustomerPageInfoTab from './CustomerPageInfoTab';\nimport CustomerPageTasksTab from './CustomerPageTasksTab';\nimport CustomerPageAppointmentsTab from './CustomerPageAppointmentsTab';\nimport { getCustomer } from '../../actions/getCustomer';\nimport { addEmployeeToCustomer } from '../../actions/addEmployeeToCustomer';\nimport { getUsers } from '../../actions/getUsers';\nimport { getCustomerNotes } from '../../actions/getCustomerNotes';\nimport '../../styles/employee-dashboard.scss';\nimport classnames from 'classnames';\n\nconst CustomerPage = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n  const [activeTab, setActiveTab] = useState('1');\n  const [addEmployeeModalOpen, setAddEmployeeModalOpen] = useState(false);\n  const [employee, setEmployee] = useState({\n    firstName: '',\n    lastName: '',\n    jobTitle: '',\n    officeNumber: '',\n    cellNumber: '',\n    email: ''\n  });\n  const [addEmployeeErrors, setAddEmployeeErrors] = useState({});\n  const [flag, setFlag] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const employeeArray = [];\n  const getUsersFromState = useSelector(state => state.getUsersReducer.users);\n  const [notes, setNotes] = useState([]);\n  const getNotesFromState = useSelector(state => state.getCustomerNotesReducer.notes);\n  const [addNoteModalOpen, setAddNoteModalOpen] = useState(false);\n  const [note, setNote] = useState({\n    note: '',\n    createdAt: '',\n    createdBy: ''\n  });\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split('/');\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomer(customerId));\n    dispatch(getCustomerNotes(customerId));\n  }, []);\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n    }\n\n    ;\n  }, [getCustomerFromState]);\n  useEffect(() => {\n    if (getNotesFromState) {\n      console.log(getNotesFromState);\n      setNotes(getNotesFromState);\n    }\n\n    ;\n  }, [getNotesFromState]);\n  useEffect(() => {\n    if (flag) {\n      setFlag(false);\n      dispatch(addEmployeeToCustomer(customer));\n      toggleAddEmployeeModal();\n    }\n\n    ;\n  }, [flag]);\n  useEffect(() => {\n    if (getUsersFromState.users) {\n      getUsersFromState.users.map(user => {\n        if (user.userType === 'employee' && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: 'employeeId',\n            jobTitle: user.jobTitle\n          });\n        }\n\n        ;\n      });\n      setEmployees(employeeArray);\n    }\n\n    ;\n  }, [getUsersFromState]);\n\n  const employeeFinder = employeeId => {\n    employees.forEach(employee => {\n      if (employee.value === employeeId) {\n        return employee.label;\n      }\n\n      ;\n    });\n  };\n\n  const toggleTab = tab => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n\n    ;\n  };\n\n  const toggleAddEmployeeModal = () => {\n    if (addEmployeeModalOpen) {\n      setEmployee({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        officeNumber: '',\n        cellNumber: '',\n        email: ''\n      });\n      setAddEmployeeErrors({});\n    }\n\n    ;\n    setAddEmployeeModalOpen(!addEmployeeModalOpen);\n  };\n\n  const toggleAddNoteModal = () => {\n    if (addNoteModalOpen) {\n      setNote({\n        note: '',\n        createdAt: '',\n        createdBy: ''\n      });\n    }\n\n    ;\n    setAddNoteModalOpen(!addNoteModalOpen);\n  };\n\n  const handleAddEmployeeChange = e => {\n    setEmployee({ ...employee,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleAddNoteChange = e => {\n    setNote({ ...note,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleAddEmployeeSubmit = e => {\n    e.preventDefault();\n    let errors = {};\n\n    if (employee.firstName === '') {\n      errors.firstName = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.lastName === '') {\n      errors.lastName = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.jobTitle === '') {\n      errors.jobTitle = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.officeNumber === '' && employee.cellNumber === '') {\n      errors.officeNumber = 'Must not be empty';\n      errors.cellNumber = 'Must not be empty';\n    } else if (employee.officeNumber !== '' && !employee.officeNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n      errors.officeNumber = 'Must be a valid phone number';\n    } else if (employee.cellNumber !== '' && !employee.cellNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n      errors.cellNumber = 'Must be a valid phone number';\n    }\n\n    ;\n\n    if (employee.email === '') {\n      errors.email = 'Must not be empty';\n    } else if (!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n      errors.email = 'Must be a valid email address';\n    }\n\n    ;\n    setAddEmployeeErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      if (customer.employees.length === 0) {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [employee]\n        });\n      } else {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [...customer.employees, employee]\n        });\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const handleAddNoteSubmit = e => {\n    e.preventDefault();\n    console.log(\"Note Submitted\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, customer.businessName), /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggleTab('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, \"Info\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: () => {\n      toggleTab('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }, \"Tasks\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '3'\n    }),\n    onClick: () => {\n      toggleTab('3');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }, \"Appointments\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '4'\n    }),\n    onClick: () => {\n      toggleTab('4');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 29\n    }\n  }, \"Notes\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '5'\n    }),\n    onClick: () => {\n      toggleTab('5');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }, \"Employees\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '6'\n    }),\n    onClick: () => {\n      toggleTab('6');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, \"Lifts\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '7'\n    }),\n    onClick: () => {\n      toggleTab('7');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }, \"Documents\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomerPageInfoTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomerPageTasksTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomerPageAppointmentsTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-note-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  }, notes ? notes.notes ? notes.notes.map(note => /*#__PURE__*/React.createElement(Card, {\n    className: \"note-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 41\n    }\n  }, note.note), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 45\n    }\n  }, \"Created By: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 60\n    }\n  }, note => {\n    const name = employeeFinder(note.createdBy);\n    console.log(name);\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 45\n    }\n  }, \"Created At: \", note.createdAt)))) : null : null, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleAddNoteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }, \"Add Note\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"sm\",\n    hover: true,\n    className: \"customer-page-employees-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 41\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 41\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 41\n    }\n  }, \"Office Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 41\n    }\n  }, \"Cell Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 41\n    }\n  }, \"Email\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 41\n    }\n  }, customer.primaryContact ? customer.primaryContact.firstName : null, \" \", customer.primaryContact ? customer.primaryContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 41\n    }\n  }, customer.primaryJobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 45\n    }\n  }, customer.primaryOfficeNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 45\n    }\n  }, customer.primaryCellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.primaryEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 45\n    }\n  }, customer.primaryEmail))), customer.billingJobTitle !== '' ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 45\n    }\n  }, customer.billingContact ? customer.billingContact.firstName : null, \" \", customer.billingContact ? customer.billingContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 45\n    }\n  }, customer.billingJobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 49\n    }\n  }, customer.billingOfficeNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 49\n    }\n  }, customer.billingCellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.billingEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 49\n    }\n  }, customer.billingEmail))) : null, customer.employees ? customer.employees.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 45\n    }\n  }, employee.firstName, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 45\n    }\n  }, employee.jobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.officeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 49\n    }\n  }, employee.officeNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.cellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 49\n    }\n  }, employee.cellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${employee.email}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 49\n    }\n  }, employee.email)))) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 33\n    }\n  }, \"Add Employee\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 29\n    }\n  }, \"Lifts\")), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }, \"Coming Soon!!!\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: addEmployeeModalOpen,\n    toggle: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, \"Add Employee\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddEmployeeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-name-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeFirstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 37\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.firstName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 37\n    }\n  }, addEmployeeErrors.firstName)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeLastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 37\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.lastName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 37\n    }\n  }, addEmployeeErrors.lastName))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeJobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 33\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"jobTitle\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.jobTitle ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.jobTitle)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeOfficeNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 33\n    }\n  }, \"Office Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"officeNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.officeNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.officeNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeCellNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 33\n    }\n  }, \"Cell Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"cellNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.cellNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.cellNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"example@example.com\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.email ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.email)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleAddEmployeeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: addNoteModalOpen,\n    toggle: toggleAddNoteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleAddNoteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }, \"Add Note\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddNoteSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 33\n    }\n  }, \"Note\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"note\",\n    onChange: handleAddNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleAddNoteSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 25\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CustomerPage;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLocation","TabContent","TabPane","Nav","NavItem","NavLink","Form","FormGroup","Label","Input","FormFeedback","Button","Modal","ModalHeader","ModalBody","ModalFooter","Table","Card","EmployeeNavbar","EmployeeSidebar","Footer","CustomerPageInfoTab","CustomerPageTasksTab","CustomerPageAppointmentsTab","getCustomer","addEmployeeToCustomer","getUsers","getCustomerNotes","classnames","CustomerPage","customer","setCustomer","getCustomerFromState","state","getCustomerReducer","activeTab","setActiveTab","addEmployeeModalOpen","setAddEmployeeModalOpen","employee","setEmployee","firstName","lastName","jobTitle","officeNumber","cellNumber","email","addEmployeeErrors","setAddEmployeeErrors","flag","setFlag","employees","setEmployees","employeeArray","getUsersFromState","getUsersReducer","users","notes","setNotes","getNotesFromState","getCustomerNotesReducer","addNoteModalOpen","setAddNoteModalOpen","note","setNote","createdAt","createdBy","dispatch","location","pathArray","pathname","split","customerId","length","console","log","toggleAddEmployeeModal","map","user","userType","active","push","label","value","userId","name","employeeFinder","employeeId","forEach","toggleTab","tab","toggleAddNoteModal","handleAddEmployeeChange","e","target","handleAddNoteChange","handleAddEmployeeSubmit","preventDefault","errors","match","Object","keys","handleAddNoteSubmit","businessName","primaryContact","primaryJobTitle","primaryOfficeNumber","primaryCellNumber","primaryEmail","billingJobTitle","billingContact","billingOfficeNumber","billingCellNumber","billingEmail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SACIC,UADJ,EAEIC,OAFJ,EAGIC,GAHJ,EAIIC,OAJJ,EAKIC,OALJ,EAMIC,IANJ,EAOIC,SAPJ,EAQIC,KARJ,EASIC,KATJ,EAUIC,YAVJ,EAWIC,MAXJ,EAYIC,KAZJ,EAaIC,WAbJ,EAcIC,SAdJ,EAeIC,WAfJ,EAgBIC,KAhBJ,EAiBIC,IAjBJ,QAkBO,YAlBP;AAmBA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,2BAAP,MAAwC,+BAAxC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,qBAAT,QAAsC,qCAAtC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAO,sCAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMoC,oBAAoB,GAAGlC,WAAW,CAACmC,KAAK,IAAIA,KAAK,CAACC,kBAAN,CAAyBJ,QAAnC,CAAxC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BxC,QAAQ,CAAC,GAAD,CAA1C;AACA,QAAM,CAACyC,oBAAD,EAAuBC,uBAAvB,IAAkD1C,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAAC2C,QAAD,EAAWC,WAAX,IAA0B5C,QAAQ,CAAC;AACrC6C,IAAAA,SAAS,EAAE,EAD0B;AAErCC,IAAAA,QAAQ,EAAE,EAF2B;AAGrCC,IAAAA,QAAQ,EAAE,EAH2B;AAIrCC,IAAAA,YAAY,EAAE,EAJuB;AAKrCC,IAAAA,UAAU,EAAE,EALyB;AAMrCC,IAAAA,KAAK,EAAE;AAN8B,GAAD,CAAxC;AAQA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CpD,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACqD,IAAD,EAAOC,OAAP,IAAkBtD,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACuD,SAAD,EAAYC,YAAZ,IAA4BxD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMyD,aAAa,GAAG,EAAtB;AACA,QAAMC,iBAAiB,GAAGxD,WAAW,CAACmC,KAAK,IAAIA,KAAK,CAACsB,eAAN,CAAsBC,KAAhC,CAArC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9D,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM+D,iBAAiB,GAAG7D,WAAW,CAACmC,KAAK,IAAIA,KAAK,CAAC2B,uBAAN,CAA8BH,KAAxC,CAArC;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0ClE,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACmE,IAAD,EAAOC,OAAP,IAAkBpE,QAAQ,CAAC;AAC7BmE,IAAAA,IAAI,EAAE,EADuB;AAE7BE,IAAAA,SAAS,EAAE,EAFkB;AAG7BC,IAAAA,SAAS,EAAE;AAHkB,GAAD,CAAhC;AAKA,QAAMC,QAAQ,GAAGpE,WAAW,EAA5B;AACA,QAAMqE,QAAQ,GAAGpE,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwE,SAAS,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAlB;AACA,UAAMC,UAAU,GAAGH,SAAS,CAACA,SAAS,CAACI,MAAV,GAAmB,CAApB,CAA5B;AACAN,IAAAA,QAAQ,CAAC3C,WAAW,CAACgD,UAAD,CAAZ,CAAR;AACAL,IAAAA,QAAQ,CAACxC,gBAAgB,CAAC6C,UAAD,CAAjB,CAAR;AACH,GALQ,EAKN,EALM,CAAT;AAOA3E,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGmC,oBAAH,EAAyB;AACrBD,MAAAA,WAAW,CAACC,oBAAD,CAAX;AACH;;AAAA;AACJ,GAJQ,EAIN,CAACA,oBAAD,CAJM,CAAT;AAOAnC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG8D,iBAAH,EAAsB;AAClBe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,iBAAZ;AACAD,MAAAA,QAAQ,CAACC,iBAAD,CAAR;AACH;;AAAA;AACJ,GALQ,EAKN,CAACA,iBAAD,CALM,CAAT;AAOA9D,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGoD,IAAH,EAAS;AACLC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAiB,MAAAA,QAAQ,CAAC1C,qBAAqB,CAACK,QAAD,CAAtB,CAAR;AACA8C,MAAAA,sBAAsB;AACzB;;AAAA;AACJ,GANQ,EAMN,CAAC3B,IAAD,CANM,CAAT;AAQApD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGyD,iBAAiB,CAACE,KAArB,EAA4B;AACxBF,MAAAA,iBAAiB,CAACE,KAAlB,CAAwBqB,GAAxB,CAA4BC,IAAI,IAAI;AAChC,YAAGA,IAAI,CAACC,QAAL,KAAkB,UAAlB,IAAgCD,IAAI,CAACE,MAAL,KAAgB,IAAnD,EAAyD;AACrD3B,UAAAA,aAAa,CAAC4B,IAAd,CAAmB;AACfC,YAAAA,KAAK,EAAG,GAAEJ,IAAI,CAACrC,SAAU,IAAGqC,IAAI,CAACpC,QAAS,EAD3B;AAEfyC,YAAAA,KAAK,EAAEL,IAAI,CAACM,MAFG;AAGfC,YAAAA,IAAI,EAAE,YAHS;AAIf1C,YAAAA,QAAQ,EAAEmC,IAAI,CAACnC;AAJA,WAAnB;AAMH;;AAAA;AACJ,OATD;AAWAS,MAAAA,YAAY,CAACC,aAAD,CAAZ;AACH;;AAAA;AACJ,GAfQ,EAeN,CAACC,iBAAD,CAfM,CAAT;;AAiBA,QAAMgC,cAAc,GAAGC,UAAU,IAAI;AACjCpC,IAAAA,SAAS,CAACqC,OAAV,CAAkBjD,QAAQ,IAAI;AAC1B,UAAGA,QAAQ,CAAC4C,KAAT,KAAmBI,UAAtB,EAAkC;AAC9B,eAAOhD,QAAQ,CAAC2C,KAAhB;AACH;;AAAA;AACJ,KAJD;AAKH,GAND;;AAQA,QAAMO,SAAS,GAAGC,GAAG,IAAI;AACrB,QAAGvD,SAAS,KAAKuD,GAAjB,EAAsB;AAClBtD,MAAAA,YAAY,CAACsD,GAAD,CAAZ;AACH;;AAAA;AACJ,GAJD;;AAMA,QAAMd,sBAAsB,GAAG,MAAM;AACjC,QAAGvC,oBAAH,EAAyB;AACrBG,MAAAA,WAAW,CAAC;AACRC,QAAAA,SAAS,EAAE,EADH;AAERC,QAAAA,QAAQ,EAAE,EAFF;AAGRC,QAAAA,QAAQ,EAAE,EAHF;AAIRC,QAAAA,YAAY,EAAE,EAJN;AAKRC,QAAAA,UAAU,EAAE,EALJ;AAMRC,QAAAA,KAAK,EAAE;AANC,OAAD,CAAX;AAQAE,MAAAA,oBAAoB,CAAC,EAAD,CAApB;AACH;;AAAA;AACDV,IAAAA,uBAAuB,CAAC,CAACD,oBAAF,CAAvB;AACH,GAbD;;AAeA,QAAMsD,kBAAkB,GAAG,MAAM;AAC7B,QAAG9B,gBAAH,EAAqB;AACjBG,MAAAA,OAAO,CAAC;AACJD,QAAAA,IAAI,EAAE,EADF;AAEJE,QAAAA,SAAS,EAAE,EAFP;AAGJC,QAAAA,SAAS,EAAE;AAHP,OAAD,CAAP;AAKH;;AAAA;AACDJ,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACH,GATD;;AAWA,QAAM+B,uBAAuB,GAAGC,CAAC,IAAI;AACjCrD,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAER,OAACsD,CAAC,CAACC,MAAF,CAAST,IAAV,GAAiBQ,CAAC,CAACC,MAAF,CAASX;AAFlB,KAAD,CAAX;AAIH,GALD;;AAOA,QAAMY,mBAAmB,GAAGF,CAAC,IAAI;AAC7B7B,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAAC8B,CAAC,CAACC,MAAF,CAAST,IAAV,GAAiBQ,CAAC,CAACC,MAAF,CAASX;AAFtB,KAAD,CAAP;AAIH,GALD;;AAOA,QAAMa,uBAAuB,GAAGH,CAAC,IAAI;AACjCA,IAAAA,CAAC,CAACI,cAAF;AAEA,QAAIC,MAAM,GAAG,EAAb;;AAEA,QAAG3D,QAAQ,CAACE,SAAT,KAAuB,EAA1B,EAA8B;AAC1ByD,MAAAA,MAAM,CAACzD,SAAP,GAAmB,mBAAnB;AACH;;AAAA;;AACD,QAAGF,QAAQ,CAACG,QAAT,KAAsB,EAAzB,EAA6B;AACzBwD,MAAAA,MAAM,CAACxD,QAAP,GAAkB,mBAAlB;AACH;;AAAA;;AACD,QAAGH,QAAQ,CAACI,QAAT,KAAsB,EAAzB,EAA6B;AACzBuD,MAAAA,MAAM,CAACvD,QAAP,GAAkB,mBAAlB;AACH;;AAAA;;AACD,QAAGJ,QAAQ,CAACK,YAAT,KAA0B,EAA1B,IAAgCL,QAAQ,CAACM,UAAT,KAAwB,EAA3D,EAA+D;AAC3DqD,MAAAA,MAAM,CAACtD,YAAP,GAAsB,mBAAtB;AACAsD,MAAAA,MAAM,CAACrD,UAAP,GAAoB,mBAApB;AACH,KAHD,MAGO,IAAGN,QAAQ,CAACK,YAAT,KAA0B,EAA1B,IAAgC,CAACL,QAAQ,CAACK,YAAT,CAAsBuD,KAAtB,CAA4B,wCAA5B,CAApC,EAA2G;AAC9GD,MAAAA,MAAM,CAACtD,YAAP,GAAsB,8BAAtB;AACH,KAFM,MAEA,IAAGL,QAAQ,CAACM,UAAT,KAAwB,EAAxB,IAA8B,CAACN,QAAQ,CAACM,UAAT,CAAoBsD,KAApB,CAA0B,wCAA1B,CAAlC,EAAuG;AAC1GD,MAAAA,MAAM,CAACrD,UAAP,GAAoB,8BAApB;AACH;;AAAA;;AACD,QAAGN,QAAQ,CAACO,KAAT,KAAmB,EAAtB,EAA0B;AACtBoD,MAAAA,MAAM,CAACpD,KAAP,GAAe,mBAAf;AACH,KAFD,MAEO,IAAG,CAACP,QAAQ,CAACO,KAAT,CAAeqD,KAAf,CAAqB,yJAArB,CAAJ,EAAqL;AACxLD,MAAAA,MAAM,CAACpD,KAAP,GAAe,+BAAf;AACH;;AAAA;AAEDE,IAAAA,oBAAoB,CAACkD,MAAD,CAApB;;AAEA,QAAGE,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBzB,MAApB,KAA+B,CAAlC,EAAqC;AACjC,UAAG3C,QAAQ,CAACqB,SAAT,CAAmBsB,MAAnB,KAA8B,CAAjC,EAAoC;AAChCvB,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAnB,QAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERqB,UAAAA,SAAS,EAAE,CAACZ,QAAD;AAFH,SAAD,CAAX;AAIH,OAND,MAMO;AACHW,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAnB,QAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERqB,UAAAA,SAAS,EAAE,CAAC,GAAGrB,QAAQ,CAACqB,SAAb,EAAwBZ,QAAxB;AAFH,SAAD,CAAX;AAIH;;AAAA;AACJ;;AAAA;AACJ,GA7CD;;AA+CA,QAAM+D,mBAAmB,GAAGT,CAAC,IAAI;AAC7BA,IAAAA,CAAC,CAACI,cAAF;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GAHD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK7C,QAAQ,CAACyE,YAAd,CADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE3E,UAAU,CAAC;AAAEoD,MAAAA,MAAM,EAAE7C,SAAS,KAAK;AAAxB,KAAD,CAA9B;AAA+D,IAAA,OAAO,EAAE,MAAM;AAAEsD,MAAAA,SAAS,CAAC,GAAD,CAAT;AAAiB,KAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,eAMI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE7D,UAAU,CAAC;AAAEoD,MAAAA,MAAM,EAAE7C,SAAS,KAAK;AAAxB,KAAD,CAA9B;AAA+D,IAAA,OAAO,EAAE,MAAM;AAAEsD,MAAAA,SAAS,CAAC,GAAD,CAAT;AAAgB,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CANJ,eAWI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE7D,UAAU,CAAC;AAAEoD,MAAAA,MAAM,EAAE7C,SAAS,KAAK;AAAxB,KAAD,CAA9B;AAA+D,IAAA,OAAO,EAAE,MAAM;AAAEsD,MAAAA,SAAS,CAAC,GAAD,CAAT;AAAgB,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAXJ,eAgBI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE7D,UAAU,CAAC;AAAEoD,MAAAA,MAAM,EAAE7C,SAAS,KAAK;AAAxB,KAAD,CAA9B;AAA+D,IAAA,OAAO,EAAE,MAAM;AAAEsD,MAAAA,SAAS,CAAC,GAAD,CAAT;AAAgB,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAhBJ,eAqBI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE7D,UAAU,CAAC;AAAEoD,MAAAA,MAAM,EAAE7C,SAAS,KAAK;AAAxB,KAAD,CAA9B;AAA+D,IAAA,OAAO,EAAE,MAAM;AAAEsD,MAAAA,SAAS,CAAC,GAAD,CAAT;AAAgB,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CArBJ,eA0BI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE7D,UAAU,CAAC;AAAEoD,MAAAA,MAAM,EAAE7C,SAAS,KAAK;AAAxB,KAAD,CAA9B;AAA+D,IAAA,OAAO,EAAE,MAAM;AAAEsD,MAAAA,SAAS,CAAC,GAAD,CAAT;AAAgB,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CA1BJ,eA+BI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE7D,UAAU,CAAC;AAAEoD,MAAAA,MAAM,EAAE7C,SAAS,KAAK;AAAxB,KAAD,CAA9B;AAA+D,IAAA,OAAO,EAAE,MAAM;AAAEsD,MAAAA,SAAS,CAAC,GAAD,CAAT;AAAgB,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CA/BJ,CAFJ,eAuCI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEtD,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,eAOI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,eAUI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKsB,KAAK,GAAGA,KAAK,CAACA,KAAN,GAAcA,KAAK,CAACA,KAAN,CAAYoB,GAAZ,CAAgBd,IAAI,iBACvC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACA,IAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,IAAD,IAAU;AAC5B,UAAMsB,IAAI,GAAGC,cAAc,CAACvB,IAAI,CAACG,SAAN,CAA3B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACH,GAHc,CAAf,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBtB,IAAI,CAACE,SAArB,CALJ,CAFJ,CADmB,CAAd,GAWJ,IAXC,GAWM,IAZhB,eAaI,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE0B,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,CADJ,CAVJ,eA2BI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,KAAK,MAAtB;AAAuB,IAAA,SAAS,EAAC,+BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,CADJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK7D,QAAQ,CAAC0E,cAAT,GAA0B1E,QAAQ,CAAC0E,cAAT,CAAwB/D,SAAlD,GAA8D,IAAnE,OAA0EX,QAAQ,CAAC0E,cAAT,GAA0B1E,QAAQ,CAAC0E,cAAT,CAAwB9D,QAAlD,GAA6D,IAAvI,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,QAAQ,CAAC2E,eAAd,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAG,UAAS3E,QAAQ,CAAC4E,mBAAoB,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoD5E,QAAQ,CAAC4E,mBAA7D,CAAJ,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAG,UAAS5E,QAAQ,CAAC6E,iBAAkB,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkD7E,QAAQ,CAAC6E,iBAA3D,CAAJ,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAG,UAAS7E,QAAQ,CAAC8E,YAAa,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C9E,QAAQ,CAAC8E,YAAtD,CAAJ,CALJ,CADJ,EAQK9E,QAAQ,CAAC+E,eAAT,KAA6B,EAA7B,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK/E,QAAQ,CAACgF,cAAT,GAA0BhF,QAAQ,CAACgF,cAAT,CAAwBrE,SAAlD,GAA8D,IAAnE,OAA0EX,QAAQ,CAACgF,cAAT,GAA0BhF,QAAQ,CAACgF,cAAT,CAAwBpE,QAAlD,GAA6D,IAAvI,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,QAAQ,CAAC+E,eAAd,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAG,UAAS/E,QAAQ,CAACiF,mBAAoB,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDjF,QAAQ,CAACiF,mBAA7D,CAAJ,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAG,UAASjF,QAAQ,CAACkF,iBAAkB,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDlF,QAAQ,CAACkF,iBAA3D,CAAJ,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAG,UAASlF,QAAQ,CAACmF,YAAa,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CnF,QAAQ,CAACmF,YAAtD,CAAJ,CALJ,CADH,GAQC,IAhBN,EAiBKnF,QAAQ,CAACqB,SAAT,GAAqBrB,QAAQ,CAACqB,SAAT,CAAmB0B,GAAnB,CAAuBtC,QAAQ,iBACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,QAAQ,CAACE,SAAd,OAA0BF,QAAQ,CAACG,QAAnC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,QAAQ,CAACI,QAAd,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAG,UAASJ,QAAQ,CAACK,YAAa,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CL,QAAQ,CAACK,YAAtD,CAAJ,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAG,UAASL,QAAQ,CAACM,UAAW,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CN,QAAQ,CAACM,UAApD,CAAJ,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAG,UAASN,QAAQ,CAACO,KAAM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCP,QAAQ,CAACO,KAA/C,CAAJ,CALJ,CADkB,CAArB,GAQI,IAzBT,CAVJ,CADJ,eAuCI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE8B,sBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAvCJ,CA3BJ,eAsEI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAtEJ,eAyEI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAzEJ,CAvCJ,CAFJ,eAuHI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEvC,oBAAf;AAAqC,IAAA,MAAM,EAAEuC,sBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEoB,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAoC,IAAA,QAAQ,EAAEJ,uBAA9C;AAAuE,IAAA,OAAO,EAAE7C,iBAAiB,CAACN,SAAlB,GAA8B,IAA9B,GAAqC,KAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeM,iBAAiB,CAACN,SAAjC,CAHJ,CADJ,eAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,QAAQ,EAAEmD,uBAA7C;AAAsE,IAAA,OAAO,EAAE7C,iBAAiB,CAACL,QAAlB,GAA6B,IAA7B,GAAoC,KAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeK,iBAAiB,CAACL,QAAjC,CAHJ,CANJ,CADJ,eAaI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,QAAQ,EAAEkD,uBAA7C;AAAsE,IAAA,OAAO,EAAE7C,iBAAiB,CAACJ,QAAlB,GAA6B,IAA7B,GAAoC,KAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeI,iBAAiB,CAACJ,QAAjC,CAHJ,CAbJ,eAkBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,cAAxB;AAAuC,IAAA,WAAW,EAAC,cAAnD;AAAkE,IAAA,QAAQ,EAAEiD,uBAA5E;AAAqG,IAAA,OAAO,EAAE7C,iBAAiB,CAACH,YAAlB,GAAiC,IAAjC,GAAwC,KAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeG,iBAAiB,CAACH,YAAjC,CAHJ,CAlBJ,eAuBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,YAAxB;AAAqC,IAAA,WAAW,EAAC,cAAjD;AAAgE,IAAA,QAAQ,EAAEgD,uBAA1E;AAAmG,IAAA,OAAO,EAAE7C,iBAAiB,CAACF,UAAlB,GAA+B,IAA/B,GAAsC,KAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeE,iBAAiB,CAACF,UAAjC,CAHJ,CAvBJ,eA4BI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,WAAW,EAAC,qBAA5C;AAAkE,IAAA,QAAQ,EAAE+C,uBAA5E;AAAqG,IAAA,OAAO,EAAE7C,iBAAiB,CAACD,KAAlB,GAA0B,IAA1B,GAAiC,KAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeC,iBAAiB,CAACD,KAAjC,CAHJ,CA5BJ,CADJ,CAFJ,eAsCI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEkD,uBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAtCJ,CAvHJ,eAiKI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEnC,gBAAf;AAAiC,IAAA,MAAM,EAAE8B,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEW,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,QAAQ,EAAEP,mBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,CAFJ,eAUI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEO,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAVJ,CAjKJ,CAFJ,eAkLI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlLJ,CADJ;AAsLH,CA3WD;;AA6WA,eAAezE,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    TabContent,\n    TabPane,\n    Nav,\n    NavItem,\n    NavLink,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Table,\n    Card\n} from 'reactstrap';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport CustomerPageInfoTab from './CustomerPageInfoTab';\nimport CustomerPageTasksTab from './CustomerPageTasksTab';\nimport CustomerPageAppointmentsTab from './CustomerPageAppointmentsTab';\nimport { getCustomer } from '../../actions/getCustomer';\nimport { addEmployeeToCustomer } from '../../actions/addEmployeeToCustomer';\nimport { getUsers } from '../../actions/getUsers';\nimport { getCustomerNotes } from '../../actions/getCustomerNotes';\n\nimport '../../styles/employee-dashboard.scss'\nimport classnames from 'classnames';\n\nconst CustomerPage = () => {\n    const [customer, setCustomer] = useState({});\n    const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n    const [activeTab, setActiveTab] = useState('1');\n    const [addEmployeeModalOpen, setAddEmployeeModalOpen] = useState(false);\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        officeNumber: '',\n        cellNumber: '',\n        email: ''\n    });\n    const [addEmployeeErrors, setAddEmployeeErrors] = useState({});\n    const [flag, setFlag] = useState(false);\n    const [employees, setEmployees] = useState([]);\n    const employeeArray = [];\n    const getUsersFromState = useSelector(state => state.getUsersReducer.users);\n    const [notes, setNotes] = useState([]);\n    const getNotesFromState = useSelector(state => state.getCustomerNotesReducer.notes);\n    const [addNoteModalOpen, setAddNoteModalOpen] = useState(false);\n    const [note, setNote] = useState({\n        note: '',\n        createdAt: '',\n        createdBy: ''\n    });\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const customerId = pathArray[pathArray.length - 1];\n        dispatch(getCustomer(customerId));\n        dispatch(getCustomerNotes(customerId));\n    }, []);\n\n    useEffect(() => {\n        if(getCustomerFromState) {\n            setCustomer(getCustomerFromState);\n        };\n    }, [getCustomerFromState]);\n\n\n    useEffect(() => {\n        if(getNotesFromState) {\n            console.log(getNotesFromState)\n            setNotes(getNotesFromState);\n        };\n    }, [getNotesFromState]);\n\n    useEffect(() => {\n        if(flag) {\n            setFlag(false);\n            dispatch(addEmployeeToCustomer(customer));\n            toggleAddEmployeeModal();\n        };\n    }, [flag]);\n\n    useEffect(() => {\n        if(getUsersFromState.users) {\n            getUsersFromState.users.map(user => {\n                if(user.userType === 'employee' && user.active === true) {\n                    employeeArray.push({\n                        label: `${user.firstName} ${user.lastName}`,\n                        value: user.userId,\n                        name: 'employeeId',\n                        jobTitle: user.jobTitle\n                    });\n                };\n            });\n\n            setEmployees(employeeArray);\n        };\n    }, [getUsersFromState]);\n\n    const employeeFinder = employeeId => {\n        employees.forEach(employee => {\n            if(employee.value === employeeId) {\n                return employee.label;\n            };\n        });\n    };\n\n    const toggleTab = tab => {\n        if(activeTab !== tab) {\n            setActiveTab(tab);\n        };\n    };\n\n    const toggleAddEmployeeModal = () => {\n        if(addEmployeeModalOpen) {\n            setEmployee({\n                firstName: '',\n                lastName: '',\n                jobTitle: '',\n                officeNumber: '',\n                cellNumber: '',\n                email: ''\n            });\n            setAddEmployeeErrors({});\n        };\n        setAddEmployeeModalOpen(!addEmployeeModalOpen);\n    };\n\n    const toggleAddNoteModal = () => {\n        if(addNoteModalOpen) {\n            setNote({\n                note: '',\n                createdAt: '',\n                createdBy: ''\n            });\n        };\n        setAddNoteModalOpen(!addNoteModalOpen);\n    };\n\n    const handleAddEmployeeChange = e => {\n        setEmployee({\n            ...employee,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleAddNoteChange = e => {\n        setNote({\n            ...note,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleAddEmployeeSubmit = e => {\n        e.preventDefault();\n        \n        let errors = {};\n\n        if(employee.firstName === '') {\n            errors.firstName = 'Must not be empty';\n        };\n        if(employee.lastName === '') {\n            errors.lastName = 'Must not be empty';\n        };\n        if(employee.jobTitle === '') {\n            errors.jobTitle = 'Must not be empty';\n        };\n        if(employee.officeNumber === '' && employee.cellNumber === '') {\n            errors.officeNumber = 'Must not be empty';\n            errors.cellNumber = 'Must not be empty'\n        } else if(employee.officeNumber !== '' && !employee.officeNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n            errors.officeNumber = 'Must be a valid phone number';\n        } else if(employee.cellNumber !== '' && !employee.cellNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n            errors.cellNumber = 'Must be a valid phone number';\n        };\n        if(employee.email === '') {\n            errors.email = 'Must not be empty';\n        } else if(!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n            errors.email = 'Must be a valid email address';\n        };\n\n        setAddEmployeeErrors(errors);\n\n        if(Object.keys(errors).length === 0) {\n            if(customer.employees.length === 0) {\n                setFlag(true);\n                setCustomer({\n                    ...customer,\n                    employees: [employee]\n                });\n            } else {\n                setFlag(true);\n                setCustomer({\n                    ...customer,\n                    employees: [...customer.employees, employee]\n                });\n            };\n        };\n    };\n\n    const handleAddNoteSubmit = e => {\n        e.preventDefault();\n        console.log(\"Note Submitted\");\n    };\n    \n    return (\n        <div>\n            <EmployeeNavbar />\n            <div className=\"customer-page\">\n                <EmployeeSidebar />\n                <div className=\"customer-page-content\">\n                    <h1>{customer.businessName}</h1>\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { toggleTab('1'); }}>\n                                Info\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { toggleTab('2') }}>\n                                Tasks\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '3' })} onClick={() => { toggleTab('3') }}>\n                                Appointments\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '4' })} onClick={() => { toggleTab('4') }}>\n                                Notes\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '5' })} onClick={() => { toggleTab('5') }}>\n                                Employees\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '6' })} onClick={() => { toggleTab('6') }}>\n                                Lifts\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '7' })} onClick={() => { toggleTab('7') }}>\n                                Documents\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                            <CustomerPageInfoTab />\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            <CustomerPageTasksTab />\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                            <CustomerPageAppointmentsTab />\n                        </TabPane>\n                        <TabPane tabId=\"4\">\n                            <div className=\"customer-page-note-tab\">\n                                {notes ? notes.notes ? notes.notes.map(note => (\n                                    <Card className=\"note-card\">\n                                        <p>{note.note}</p>\n                                        <div>\n                                            <p>Created By: <span>{(note) => {\n                                                const name = employeeFinder(note.createdBy);\n                                                console.log(name)\n                                            }}</span></p>\n                                            <p>Created At: {note.createdAt}</p>\n                                        </div>\n                                    </Card>\n                                )) : null : null}\n                                <Button outline color=\"success\" onClick={toggleAddNoteModal}>Add Note</Button> \n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"5\">\n                            <Table size=\"sm\" hover className=\"customer-page-employees-table\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Job Title</th>\n                                        <th>Office Number</th>\n                                        <th>Cell Number</th>\n                                        <th>Email</th> \n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>{customer.primaryContact ? customer.primaryContact.firstName : null} {customer.primaryContact ? customer.primaryContact.lastName : null}</td>\n                                        <td>{customer.primaryJobTitle}</td>\n                                        <td><a href={`tel:+1-${customer.primaryOfficeNumber}`}>{customer.primaryOfficeNumber}</a></td>\n                                        <td><a href={`tel:+1-${customer.primaryCellNumber}`}>{customer.primaryCellNumber}</a></td>\n                                        <td><a href={`mailto:${customer.primaryEmail}`}>{customer.primaryEmail}</a></td>\n                                    </tr>\n                                    {customer.billingJobTitle !== '' ?\n                                        <tr>\n                                            <td>{customer.billingContact ? customer.billingContact.firstName : null} {customer.billingContact ? customer.billingContact.lastName : null}</td>\n                                            <td>{customer.billingJobTitle}</td>\n                                            <td><a href={`tel:+1-${customer.billingOfficeNumber}`}>{customer.billingOfficeNumber}</a></td>\n                                            <td><a href={`tel:+1-${customer.billingCellNumber}`}>{customer.billingCellNumber}</a></td>\n                                            <td><a href={`mailto:${customer.billingEmail}`}>{customer.billingEmail}</a></td>\n                                        </tr>\n                                    : null }\n                                    {customer.employees ? customer.employees.map(employee => (\n                                        <tr>\n                                            <td>{employee.firstName} {employee.lastName}</td>\n                                            <td>{employee.jobTitle}</td>\n                                            <td><a href={`tel:+1-${employee.officeNumber}`}>{employee.officeNumber}</a></td>\n                                            <td><a href={`tel:+1-${employee.cellNumber}`}>{employee.cellNumber}</a></td>\n                                            <td><a href={`mailto:${employee.email}`}>{employee.email}</a></td>\n                                        </tr>\n                                    )) : null}\n                                </tbody>\n                            </Table>\n                            <div className=\"add-employee-div\">\n                                <Button outline color=\"success\" onClick={toggleAddEmployeeModal}>Add Employee</Button>\n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"6\">\n                            <span>Lifts</span>\n                        </TabPane>\n                        <TabPane tabId=\"7\">\n                            <span>Coming Soon!!!</span>\n                        </TabPane>\n                    </TabContent>\n                </div>\n                <Modal isOpen={addEmployeeModalOpen} toggle={toggleAddEmployeeModal}>\n                    <ModalHeader toggle={toggleAddEmployeeModal}>Add Employee</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleAddEmployeeSubmit}>\n                            <div className=\"add-employee-name-div\">\n                                <FormGroup>\n                                    <Label for=\"employeeFirstName\">First Name</Label>\n                                    <Input type=\"text\" name=\"firstName\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.firstName ? true : false} />\n                                    <FormFeedback>{addEmployeeErrors.firstName}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"employeeLastName\">Last Name</Label>\n                                    <Input type=\"text\" name=\"lastName\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.lastName ? true : false} />\n                                    <FormFeedback>{addEmployeeErrors.lastName}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"employeeJobTitle\">Job Title</Label>\n                                <Input type=\"text\" name=\"jobTitle\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.jobTitle ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.jobTitle}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeOfficeNumber\">Office Phone Number</Label>\n                                <Input type=\"text\" name=\"officeNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.officeNumber ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.officeNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeCellNumber\">Cell Phone Number</Label>\n                                <Input type=\"text\" name=\"cellNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.cellNumber ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.cellNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeEmail\">Email</Label>\n                                <Input type=\"text\" name=\"email\" placeholder=\"example@example.com\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.email ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.email}</FormFeedback>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleAddEmployeeSubmit}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={addNoteModalOpen} toggle={toggleAddNoteModal}>\n                    <ModalHeader toggle={toggleAddNoteModal}>Add Note</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleAddNoteSubmit}>\n                            <FormGroup>\n                                <Label for=\"note\">Note</Label>\n                                <Input type=\"textarea\" name=\"note\" onChange={handleAddNoteChange} />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleAddNoteSubmit}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default CustomerPage;"]},"metadata":{},"sourceType":"module"}