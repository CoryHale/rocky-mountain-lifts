{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/sidebar-components/JobToggle.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { openJobs, closeJobs } from \"../../actions/jobToggle\";\nimport { useLocation } from \"react-router-dom\";\nimport { Button, ButtonGroup } from \"reactstrap\";\nimport \"../../styles/sidebar.scss\";\n\nconst JobToggle = () => {\n  const [hidden, setHidden] = useState(true);\n  const open = useSelector(state => state.jobToggleReducer.open);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    changeHidden(location);\n  }, [location]);\n\n  const changeHidden = location => {\n    if (location.pathname === \"/dashboard/jobs\" || location.pathname === \"/dashboard/jobs/\") {\n      setHidden(false);\n    } else {\n      setHidden(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: hidden ? \"\" : \"task-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, hidden ? null : /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(openJobs()),\n    active: open === true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Open\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(closeJobs()),\n    active: open === false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Closed\")));\n};\n\nexport default JobToggle;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/sidebar-components/JobToggle.js"],"names":["React","useState","useEffect","useSelector","useDispatch","openJobs","closeJobs","useLocation","Button","ButtonGroup","JobToggle","hidden","setHidden","open","state","jobToggleReducer","dispatch","location","changeHidden","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,yBAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,YAApC;AAEA,OAAO,2BAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMY,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,gBAAN,CAAuBF,IAAnC,CAAxB;AACA,QAAMG,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,QAAQ,GAAGV,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY,CAACD,QAAD,CAAZ;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,QAAMC,YAAY,GAAID,QAAD,IAAc;AACjC,QACEA,QAAQ,CAACE,QAAT,KAAsB,iBAAtB,IACAF,QAAQ,CAACE,QAAT,KAAsB,kBAFxB,EAGE;AACAP,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KALD,MAKO;AACLA,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAED,MAAM,GAAG,EAAH,GAAQ,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,GAAG,IAAH,gBACL,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMK,QAAQ,CAACX,QAAQ,EAAT,CADzB;AAEE,IAAA,MAAM,EAAEQ,IAAI,KAAK,IAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAACV,SAAS,EAAV,CADzB;AAEE,IAAA,MAAM,EAAEO,IAAI,KAAK,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAFJ,CADF;AAoBD,CAzCD;;AA2CA,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { openJobs, closeJobs } from \"../../actions/jobToggle\";\nimport { useLocation } from \"react-router-dom\";\nimport { Button, ButtonGroup } from \"reactstrap\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst JobToggle = () => {\n  const [hidden, setHidden] = useState(true);\n  const open = useSelector((state) => state.jobToggleReducer.open);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    changeHidden(location);\n  }, [location]);\n\n  const changeHidden = (location) => {\n    if (\n      location.pathname === \"/dashboard/jobs\" ||\n      location.pathname === \"/dashboard/jobs/\"\n    ) {\n      setHidden(false);\n    } else {\n      setHidden(true);\n    }\n  };\n\n  return (\n    <div className={hidden ? \"\" : \"task-btns\"}>\n      {hidden ? null : (\n        <ButtonGroup>\n          <Button\n            onClick={() => dispatch(openJobs())}\n            active={open === true}\n          >\n            Open\n          </Button>\n          <Button\n            onClick={() => dispatch(closeJobs())}\n            active={open === false}\n          >\n            Closed\n          </Button>\n        </ButtonGroup>\n      )}\n    </div>\n  );\n};\n\nexport default JobToggle;"]},"metadata":{},"sourceType":"module"}