{"ast":null,"code":"import _defineProperty from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{Button,Modal,ModalHeader,ModalBody,ModalFooter,Form,FormGroup,Label,Input,FormFeedback}from\"reactstrap\";import Select from\"react-select\";import{addTask}from\"../../actions/addTask\";import{getUsers}from\"../../actions/getUsers\";import\"../../styles/sidebar.scss\";var AddTaskBtn=function AddTaskBtn(){var _useState=useState({taskDescription:\"\",taskDate:\"\",taskTime:\"\",employeeId:\"\"}),_useState2=_slicedToArray(_useState,2),task=_useState2[0],setTask=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOpen=_useState4[0],setIsOpen=_useState4[1];var employeeArray=[];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),employees=_useState6[0],setEmployees=_useState6[1];var getEmployees=useSelector(function(state){return state.getUsersReducer.users;});var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),errors=_useState8[0],setErrors=_useState8[1];var getErrors=useSelector(function(state){return state.addTaskReducer.errors;});var success=useSelector(function(state){return state.addTaskReducer.success;});var dispatch=useDispatch();useEffect(function(){dispatch(getUsers());},[]);useEffect(function(){if(getEmployees.users){getEmployees.users.map(function(user){if(user.userType===\"employee\"&&user.active===true){employeeArray.push({label:\"\".concat(user.firstName,\" \").concat(user.lastName),value:user.userId,name:\"employeeId\",jobTitle:user.jobTitle});}});setEmployees(employeeArray);}},[getEmployees]);useEffect(function(){if(getErrors){setErrors(getErrors);}},[getErrors]);useEffect(function(){if(success){toggle();}},[success]);var toggle=function toggle(){if(isOpen){setTask({taskDescription:\"\",taskDate:\"\",taskTime:\"\",employeeId:\"\"});}setIsOpen(!isOpen);};var handleChange=function handleChange(e){setTask(_objectSpread(_objectSpread({},task),{},_defineProperty({},e.target.name,e.target.value)));};var handleSelectChange=function handleSelectChange(e){setTask(_objectSpread(_objectSpread({},task),{},_defineProperty({},e.name,e.value)));};var handleSubmit=function handleSubmit(e){e.preventDefault();dispatch(addTask(task));};return/*#__PURE__*/React.createElement(\"div\",{className:\"add-task-div\"},/*#__PURE__*/React.createElement(Button,{color:\"success\",onClick:toggle},\"Add Task\"),/*#__PURE__*/React.createElement(Modal,{isOpen:isOpen,toggle:toggle},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggle},\"Add Task\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Task\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",name:\"taskDescription\",onChange:handleChange,invalid:errors.taskDescription?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskDescription)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Date\"),/*#__PURE__*/React.createElement(Input,{type:\"date\",placeholder:\"date placeholder\",name:\"taskDate\",onChange:handleChange,invalid:errors.taskDate?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskDate)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Time\"),/*#__PURE__*/React.createElement(Input,{type:\"time\",placeholder:\"time placeholder\",name:\"taskTime\",onChange:handleChange,invalid:errors.taskTime?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskTime))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Assigned To\"),/*#__PURE__*/React.createElement(Select,{options:employees,onChange:handleSelectChange,className:errors.employeeId?\"invalid\":\"\"}),/*#__PURE__*/React.createElement(Input,{type:\"hidden\",disabled:true,invalid:errors.employeeId?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.employeeId)))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"success\",onClick:handleSubmit},\"Submit\"))));};export default AddTaskBtn;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/sidebar-components/AddTaskBtn.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","Select","addTask","getUsers","AddTaskBtn","taskDescription","taskDate","taskTime","employeeId","task","setTask","isOpen","setIsOpen","employeeArray","employees","setEmployees","getEmployees","state","getUsersReducer","users","errors","setErrors","getErrors","addTaskReducer","success","dispatch","map","user","userType","active","push","label","firstName","lastName","value","userId","name","jobTitle","toggle","handleChange","e","target","handleSelectChange","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { addTask } from \"../../actions/addTask\";\nimport { getUsers } from \"../../actions/getUsers\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst AddTaskBtn = () => {\n  const [task, setTask] = useState({\n    taskDescription: \"\",\n    taskDate: \"\",\n    taskTime: \"\",\n    employeeId: \"\",\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  const employeeArray = [];\n  const [employees, setEmployees] = useState([]);\n  const getEmployees = useSelector((state) => state.getUsersReducer.users);\n  const [errors, setErrors] = useState({});\n  const getErrors = useSelector((state) => state.addTaskReducer.errors);\n  const success = useSelector((state) => state.addTaskReducer.success);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n\n  useEffect(() => {\n    if (getEmployees.users) {\n      getEmployees.users.map((user) => {\n        if (user.userType === \"employee\" && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: \"employeeId\",\n            jobTitle: user.jobTitle,\n          });\n        }\n      });\n\n      setEmployees(employeeArray);\n    }\n  }, [getEmployees]);\n\n  useEffect(() => {\n    if (getErrors) {\n      setErrors(getErrors);\n    }\n  }, [getErrors]);\n\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n  }, [success]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setTask({\n        taskDescription: \"\",\n        taskDate: \"\",\n        taskTime: \"\",\n        employeeId: \"\",\n      });\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = (e) => {\n    setTask({\n      ...task,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setTask({\n      ...task,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTask(task));\n  };\n\n  return (\n    <div className=\"add-task-div\">\n      <Button color=\"success\" onClick={toggle}>\n        Add Task\n      </Button>\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label>Task</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <div>\n              <FormGroup>\n                <Label>Date</Label>\n                <Input\n                  type=\"date\"\n                  placeholder=\"date placeholder\"\n                  name=\"taskDate\"\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>Time</Label>\n                <Input\n                  type=\"time\"\n                  placeholder=\"time placeholder\"\n                  name=\"taskTime\"\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label>Assigned To</Label>\n              <Select\n                options={employees}\n                onChange={handleSelectChange}\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddTaskBtn;\n"]},"metadata":{},"sourceType":"module"}