{"ast":null,"code":"import axios from 'axios';\nimport { dbUrl } from './index';\nexport const GET_TASKS_START = 'GET_TASKS_START';\nexport const GET_TASKS_SUCCESS = 'GET_TASKS_SUCCESS';\nexport const GET_TASKS_FAILURE = 'GET_TASKS_FAILURE';\nexport const getTasks = () => async dispatch => {\n  dispatch({\n    type: GET_TASKS_START\n  });\n  return await axios.get(`/tasks`).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: GET_TASKS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_TASKS_FAILURE,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/actions/getTasks.js"],"names":["axios","dbUrl","GET_TASKS_START","GET_TASKS_SUCCESS","GET_TASKS_FAILURE","getTasks","dispatch","type","get","then","res","console","log","data","payload","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC5CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AAEA,SAAO,MAAMF,KAAK,CACbQ,GADQ,CACH,QADG,EAERC,IAFQ,CAEHC,GAAG,IAAI;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,iBADD;AAELW,MAAAA,OAAO,EAAEJ,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GARQ,EASRE,KATQ,CASFC,GAAG,IAAI;AACVV,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,iBADD;AAELU,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GAdQ,CAAb;AAeH,CAlBM","sourcesContent":["import axios from 'axios';\nimport { dbUrl } from './index';\n\nexport const GET_TASKS_START = 'GET_TASKS_START';\nexport const GET_TASKS_SUCCESS = 'GET_TASKS_SUCCESS';\nexport const GET_TASKS_FAILURE = 'GET_TASKS_FAILURE';\n\nexport const getTasks = () => async dispatch => {\n    dispatch({ type: GET_TASKS_START });\n\n    return await axios\n        .get(`/tasks`)\n        .then(res => {\n            console.log(res.data)\n            dispatch({\n                type: GET_TASKS_SUCCESS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_TASKS_FAILURE,\n                payload: err\n            });\n        });\n};"]},"metadata":{},"sourceType":"module"}