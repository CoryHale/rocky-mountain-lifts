{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Calendar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormFeedback } from \"reactstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"../../styles/task.scss\";\n\nconst TaskCalendar = () => {\n  const flag = useSelector(state => state.taskToggleReducer.calendarView);\n  const [events, setEvents] = useState([]);\n  const [curEvent, setCurEvent] = useState({\n    title: \"\",\n    extendedProps: {\n      location: \"\",\n      description: \"\",\n      invitees: [],\n      eventId: \"\"\n    }\n  });\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector(state => state.getTasksReducer.tasks);\n  const [otherEvents, setOtherEvents] = useState([]);\n  const fetchEvents = useSelector(state => state.getEventsReducer.events);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n  const [employees, setEmployees] = useState();\n  const fetchUsers = useSelector(state => state.getUsersReducer.users);\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (fetchTasks) {\n      fetchTasks.tasks.map(task => {\n        setEvents(events => [...events, {\n          title: task.taskDescription,\n          date: task.taskDate\n        }]);\n      });\n    }\n  }, [fetchTasks]);\n  useEffect(() => {\n    let start = \"\";\n    let end = \"\";\n\n    if (fetchEvents) {\n      const array = [];\n      fetchEvents.events.map(event => {\n        // if (event.startTime === \"\") {\n        //   let allDay = true;\n        // }\n        if (event.startDate !== \"\" && event.startTime !== \"\") {\n          start = `${event.startDate}T${event.startTime}`;\n        } else {\n          start = event.startDate;\n        }\n\n        if (event.endDate === \"\" && event.endTime === \"\") {\n          end = event.startDate;\n        } else if (event.endDate === \"\" && event.endTime !== \"\") {\n          end = `${event.startDate}T${event.endTime}`;\n        } else if (event.endDate !== \"\" && event.endTime !== \"\") {\n          end = `${event.endDate}T${event.endTime}`;\n        } else {\n          end = event.endDate;\n        }\n\n        if (event.recurring) {\n          array.push({\n            title: event.title,\n            // allDay: allDay,\n            startTime: event.startTime,\n            endTime: event.endTime,\n            startRecur: event.startDate,\n            daysOfWeek: event.daysOfWeek,\n            color: \"red\",\n            extendedProps: {\n              location: event.extendedProps.location,\n              invitees: event.extendedProps.invitees,\n              description: event.extendedProps.description,\n              eventId: event.extendedProps.eventId,\n              eventType: \"event\"\n            }\n          });\n        } else {\n          array.push({\n            title: event.title,\n            // allDay: allDay,\n            start: start,\n            end: end,\n            color: \"red\",\n            extendedProps: {\n              location: event.extendedProps.location,\n              invitees: event.extendedProps.invitees,\n              description: event.extendedProps.description,\n              eventId: event.extendedProps.eventId,\n              eventType: \"event\"\n            }\n          });\n        }\n      });\n      console.log(array);\n      setEvents(events => [...events, ...array]);\n    }\n  }, [fetchEvents]);\n  useEffect(() => {\n    if (fetchWorkOrders) {\n      fetchWorkOrders.workOrders.map(workOrder => {\n        setEvents(events => [...events, {\n          title: workOrder.serviceDescription,\n          allDay: workOrder.allDay,\n          start: `${workOrder.serviceDate}T${workOrder.serviceStartTime}`,\n          end: `${workOrder.serviceDate}T${workOrder.serviceEndTime}`,\n          color: \"green\",\n          extendedProps: {\n            workOrderId: workOrder.workOrderId\n          }\n        }]);\n      });\n    }\n  }, [fetchWorkOrders]);\n  useEffect(() => {\n    const array = [];\n\n    if (fetchUsers) {\n      fetchUsers.users.map(user => {\n        if (user.userType === \"employee\" && user.active === true) {\n          array.push({\n            name: `${user.firstName} ${user.lastName}`,\n            userId: user.userId\n          });\n        }\n      });\n    }\n\n    setEmployees(array);\n  }, [fetchEmployees]);\n\n  const decoder = invitees => {\n    const array = [];\n\n    if (invitees) {\n      if (invitees[0] === \"Everyone\") {\n        return \"Everyone\";\n      } else {}\n    }\n  };\n\n  const toggle = event => {\n    if (isOpen) {\n      setCurEvent({\n        title: \"\",\n        extendedProps: {\n          location: \"\",\n          description: \"\",\n          invitees: [],\n          eventId: \"\"\n        }\n      });\n    } else {\n      setCurEvent(event);\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const handleEventClick = event => {\n    const workOrderId = event.event._def.extendedProps.workOrderId;\n    const eventType = event.event._def.extendedProps.eventType;\n\n    if (workOrderId) {\n      history.push(`/dashboard/workorders/${workOrderId}`);\n    }\n\n    if (eventType) {\n      toggle(event.event._def);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, bootstrapPlugin],\n    initialView: \"dayGridMonth\",\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n    },\n    events: events,\n    eventClick: handleEventClick,\n    themeSystem: \"bootstrap\",\n    height: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, curEvent.title), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    disabled: true,\n    value: curEvent.extendedProps.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    disabled: true,\n    value: curEvent.extendedProps.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, \"Attendees\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    disabled: true,\n    value: decoder(curEvent.extendedProps.invitees),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, \"Delete Event\"))));\n};\n\nexport default TaskCalendar;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Calendar.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","bootstrapPlugin","TaskCalendar","flag","state","taskToggleReducer","calendarView","events","setEvents","curEvent","setCurEvent","title","extendedProps","location","description","invitees","eventId","tasks","setTasks","fetchTasks","getTasksReducer","otherEvents","setOtherEvents","fetchEvents","getEventsReducer","workOrders","setWorkOrders","fetchWorkOrders","getWorkOrdersReducer","employees","setEmployees","fetchUsers","getUsersReducer","users","isOpen","setIsOpen","dispatch","history","map","task","taskDescription","date","taskDate","start","end","array","event","startDate","startTime","endDate","endTime","recurring","push","startRecur","daysOfWeek","color","eventType","console","log","workOrder","serviceDescription","allDay","serviceDate","serviceStartTime","serviceEndTime","workOrderId","user","userType","active","name","firstName","lastName","userId","fetchEmployees","decoder","toggle","handleEventClick","_def","left","center","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\n\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"../../styles/task.scss\";\n\nconst TaskCalendar = () => {\n  const flag = useSelector((state) => state.taskToggleReducer.calendarView);\n  const [events, setEvents] = useState([]);\n  const [curEvent, setCurEvent] = useState({\n    title: \"\",\n    extendedProps: {\n      location: \"\",\n      description: \"\",\n      invitees: [],\n      eventId: \"\",\n    },\n  });\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector((state) => state.getTasksReducer.tasks);\n  const [otherEvents, setOtherEvents] = useState([]);\n  const fetchEvents = useSelector((state) => state.getEventsReducer.events);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const [employees, setEmployees] = useState();\n  const fetchUsers = useSelector((state) => state.getUsersReducer.users);\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (fetchTasks) {\n      fetchTasks.tasks.map((task) => {\n        setEvents((events) => [\n          ...events,\n          {\n            title: task.taskDescription,\n            date: task.taskDate,\n          },\n        ]);\n      });\n    }\n  }, [fetchTasks]);\n\n  useEffect(() => {\n    let start = \"\";\n    let end = \"\";\n\n    if (fetchEvents) {\n      const array = [];\n\n      fetchEvents.events.map((event) => {\n        // if (event.startTime === \"\") {\n        //   let allDay = true;\n        // }\n\n        if (event.startDate !== \"\" && event.startTime !== \"\") {\n          start = `${event.startDate}T${event.startTime}`;\n        } else {\n          start = event.startDate;\n        }\n\n        if (event.endDate === \"\" && event.endTime === \"\") {\n          end = event.startDate;\n        } else if (event.endDate === \"\" && event.endTime !== \"\") {\n          end = `${event.startDate}T${event.endTime}`;\n        } else if (event.endDate !== \"\" && event.endTime !== \"\") {\n          end = `${event.endDate}T${event.endTime}`;\n        } else {\n          end = event.endDate;\n        }\n\n        if (event.recurring) {\n          array.push({\n            title: event.title,\n            // allDay: allDay,\n            startTime: event.startTime,\n            endTime: event.endTime,\n            startRecur: event.startDate,\n            daysOfWeek: event.daysOfWeek,\n            color: \"red\",\n            extendedProps: {\n              location: event.extendedProps.location,\n              invitees: event.extendedProps.invitees,\n              description: event.extendedProps.description,\n              eventId: event.extendedProps.eventId,\n              eventType: \"event\",\n            },\n          });\n        } else {\n          array.push({\n            title: event.title,\n            // allDay: allDay,\n            start: start,\n            end: end,\n            color: \"red\",\n            extendedProps: {\n              location: event.extendedProps.location,\n              invitees: event.extendedProps.invitees,\n              description: event.extendedProps.description,\n              eventId: event.extendedProps.eventId,\n              eventType: \"event\",\n            },\n          });\n        }\n      });\n      console.log(array);\n      setEvents((events) => [...events, ...array]);\n    }\n  }, [fetchEvents]);\n\n  useEffect(() => {\n    if (fetchWorkOrders) {\n      fetchWorkOrders.workOrders.map((workOrder) => {\n        setEvents((events) => [\n          ...events,\n          {\n            title: workOrder.serviceDescription,\n            allDay: workOrder.allDay,\n            start: `${workOrder.serviceDate}T${workOrder.serviceStartTime}`,\n            end: `${workOrder.serviceDate}T${workOrder.serviceEndTime}`,\n            color: \"green\",\n            extendedProps: {\n              workOrderId: workOrder.workOrderId,\n            },\n          },\n        ]);\n      });\n    }\n  }, [fetchWorkOrders]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchUsers) {\n      fetchUsers.users.map((user) => {\n        if (user.userType === \"employee\" && user.active === true) {\n          array.push({\n            name: `${user.firstName} ${user.lastName}`,\n            userId: user.userId,\n          });\n        }\n      });\n    }\n\n    setEmployees(array);\n  }, [fetchEmployees]);\n\n  const decoder = (invitees) => {\n    const array = [];\n\n    if (invitees) {\n      if (invitees[0] === \"Everyone\") {\n        return \"Everyone\";\n      } else {\n      }\n    }\n  };\n\n  const toggle = (event) => {\n    if (isOpen) {\n      setCurEvent({\n        title: \"\",\n        extendedProps: {\n          location: \"\",\n          description: \"\",\n          invitees: [],\n          eventId: \"\",\n        },\n      });\n    } else {\n      setCurEvent(event);\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const handleEventClick = (event) => {\n    const workOrderId = event.event._def.extendedProps.workOrderId;\n    const eventType = event.event._def.extendedProps.eventType;\n\n    if (workOrderId) {\n      history.push(`/dashboard/workorders/${workOrderId}`);\n    }\n\n    if (eventType) {\n      toggle(event.event._def);\n    }\n  };\n\n  return (\n    <div className=\"calendar-page\">\n      <FullCalendar\n        plugins={[\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin,\n          bootstrapPlugin,\n        ]}\n        initialView=\"dayGridMonth\"\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        }}\n        events={events}\n        eventClick={handleEventClick}\n        themeSystem=\"bootstrap\"\n        height=\"auto\"\n      />\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{curEvent.title}</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                type=\"textarea\"\n                disabled\n                value={curEvent.extendedProps.description}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Location</Label>\n              <Input\n                type=\"text\"\n                disabled\n                value={curEvent.extendedProps.location}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Attendees</Label>\n              <Input\n                type=\"text\"\n                disabled\n                value={decoder(curEvent.extendedProps.invitees)}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\">Delete Event</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TaskCalendar;\n"]},"metadata":{},"sourceType":"module"}