{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Calendar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\"; // import \"../../styles/employee-dashboard.scss\";\n\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"../../styles/calendar.scss\";\n\nconst TaskCalendar = () => {\n  //   const flag = useSelector((state) => state.taskToggleReducer.calendarView);\n  const [events, setEvents] = useState([]);\n  const [workOrders, setWorkOrders] = useState([]); //   const fetchWorkOrders = useSelector(\n  //     (state) => state.getWorkOrdersReducer.workOrders\n  //   );\n\n  const [tasks, setTasks] = useState([]); //   const fetchTasks = useSelector((state) => state.getTasksReducer.tasks);\n\n  const dispatch = useDispatch(); //   useEffect(() => {\n  //     if (fetchWorkOrders) {\n  //       fetchWorkOrders.workOrders.map((workOrder) => {\n  //         setEvents((events) => [\n  //           ...events,\n  //           {\n  //             title: workOrder.serviceDescription,\n  //             allDay: workOrder.allDay,\n  //             start: `${workOrder.serviceDate}T${workOrder.serviceStartTime}`,\n  //             end: `${workOrder.serviceDate}T${workOrder.serviceEndTime}`,\n  //           },\n  //         ]);\n  //       });\n  //     }\n  //   }, [fetchWorkOrders]);\n  //   useEffect(() => {\n  //     if (fetchTasks) {\n  //       fetchTasks.tasks.map((task) => {\n  //         setEvents((events) => [\n  //           ...events,\n  //           {\n  //             title: task.taskDescription,\n  //             date: task.taskDate,\n  //           },\n  //         ]);\n  //       });\n  //     }\n  //   }, [fetchTasks]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Calendar\"), /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, bootstrapPlugin],\n    initialView: \"dayGridMonth\",\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n    },\n    events: events,\n    themeSystem: \"bootstrap\",\n    height: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TaskCalendar;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Calendar.js"],"names":["React","useState","useEffect","useDispatch","useSelector","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","bootstrapPlugin","TaskCalendar","events","setEvents","workOrders","setWorkOrders","tasks","setTasks","dispatch","left","center","right"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,eAAP,MAA4B,yBAA5B,C,CAEA;;AACA,OAAO,gCAAP;AACA,OAAO,iCAAP;AACA,OAAO,4BAAP;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAC3B;AACE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C,CAHyB,CAI3B;AACA;AACA;;AACE,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC,CAPyB,CAQ3B;;AACE,QAAMgB,QAAQ,GAAGd,WAAW,EAA5B,CATyB,CAW3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,CACPG,aADO,EAEPC,cAFO,EAGPC,iBAHO,EAIPC,eAJO,CADX;AAOE,IAAA,WAAW,EAAC,cAPd;AAQE,IAAA,aAAa,EAAE;AACbS,MAAAA,IAAI,EAAE,iBADO;AAEbC,MAAAA,MAAM,EAAE,OAFK;AAGbC,MAAAA,KAAK,EAAE;AAHM,KARjB;AAaE,IAAA,MAAM,EAAET,MAbV;AAcE,IAAA,WAAW,EAAC,WAdd;AAeE,IAAA,MAAM,EAAC,MAfT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAsBD,CA/DD;;AAiEA,eAAeD,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\n\n// import \"../../styles/employee-dashboard.scss\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"../../styles/calendar.scss\";\n\nconst TaskCalendar = () => {\n//   const flag = useSelector((state) => state.taskToggleReducer.calendarView);\n  const [events, setEvents] = useState([]);\n  const [workOrders, setWorkOrders] = useState([]);\n//   const fetchWorkOrders = useSelector(\n//     (state) => state.getWorkOrdersReducer.workOrders\n//   );\n  const [tasks, setTasks] = useState([]);\n//   const fetchTasks = useSelector((state) => state.getTasksReducer.tasks);\n  const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     if (fetchWorkOrders) {\n//       fetchWorkOrders.workOrders.map((workOrder) => {\n//         setEvents((events) => [\n//           ...events,\n//           {\n//             title: workOrder.serviceDescription,\n//             allDay: workOrder.allDay,\n//             start: `${workOrder.serviceDate}T${workOrder.serviceStartTime}`,\n//             end: `${workOrder.serviceDate}T${workOrder.serviceEndTime}`,\n//           },\n//         ]);\n//       });\n//     }\n//   }, [fetchWorkOrders]);\n\n//   useEffect(() => {\n//     if (fetchTasks) {\n//       fetchTasks.tasks.map((task) => {\n//         setEvents((events) => [\n//           ...events,\n//           {\n//             title: task.taskDescription,\n//             date: task.taskDate,\n//           },\n//         ]);\n//       });\n//     }\n//   }, [fetchTasks]);\n\n  return (\n    <div className=\"calendar-page\">\n      <h1>Calendar</h1>\n      <FullCalendar\n        plugins={[\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin,\n          bootstrapPlugin,\n        ]}\n        initialView=\"dayGridMonth\"\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        }}\n        events={events}\n        themeSystem=\"bootstrap\"\n        height=\"auto\"\n      />\n    </div>\n  );\n};\n\nexport default TaskCalendar;\n"]},"metadata":{},"sourceType":"module"}