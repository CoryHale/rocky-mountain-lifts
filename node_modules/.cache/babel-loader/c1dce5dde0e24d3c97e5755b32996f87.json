{"ast":null,"code":"import _slicedToArray from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector}from'react-redux';var TasksListContent=function TasksListContent(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var getTasks=useSelector(function(state){return state.getTasksReducer.tasks;});useEffect(function(){setTasks(getTasks.tasks);},[getTasks]);return/*#__PURE__*/React.createElement(\"div\",null,tasks?tasks.map(function(task){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,task.title),/*#__PURE__*/React.createElement(\"p\",null,task.body));}):null);};export default TasksListContent;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/TasksListContent.js"],"names":["React","useState","useEffect","useSelector","TasksListContent","tasks","setTasks","getTasks","state","getTasksReducer","map","task","title","body"],"mappings":"sMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,eACDH,QAAQ,CAAC,EAAD,CADP,wCACpBI,KADoB,eACbC,QADa,eAE3B,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACC,eAAN,CAAsBJ,KAA1B,EAAN,CAA5B,CAEAH,SAAS,CAAC,UAAM,CACZI,QAAQ,CAACC,QAAQ,CAACF,KAAV,CAAR,CACH,CAFQ,CAEN,CAACE,QAAD,CAFM,CAAT,CAIA,mBACI,+BACCF,KAAK,CACFA,KAAK,CAACK,GAAN,CAAU,SAAAC,IAAI,qBACV,4CACI,8BAAKA,IAAI,CAACC,KAAV,CADJ,cAEI,6BAAID,IAAI,CAACE,IAAT,CAFJ,CADU,EAAd,CADE,CAOF,IARJ,CADJ,CAaH,CArBD,CAuBA,cAAeT,CAAAA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst TasksListContent = () => {\n    const [tasks, setTasks] = useState([]);\n    const getTasks = useSelector(state => state.getTasksReducer.tasks);\n\n    useEffect(() => {\n        setTasks(getTasks.tasks);\n    }, [getTasks]);\n\n    return (\n        <div>\n        {tasks ?\n            tasks.map(task => (\n                <div>\n                    <h3>{task.title}</h3>\n                    <p>{task.body}</p>\n                </div>\n            )) :\n            null\n        }\n        </div>\n    );\n};\n\nexport default TasksListContent;"]},"metadata":{},"sourceType":"module"}