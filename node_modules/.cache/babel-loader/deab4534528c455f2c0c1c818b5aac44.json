{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Form, FormGroup, Label, Input, FormFeedback, Button, Modal, ModalHeader, ModalBody, ModalFooter, Table, Card, CardHeader, CardBody } from 'reactstrap';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getCustomer } from '../../actions/getCustomer';\nimport { addEmployeeToCustomer } from '../../actions/addEmployeeToCustomer';\nimport { getCustomerTasks } from '../../actions/getCustomerTasks';\nimport '../../styles/employee-dashboard.scss';\nimport classnames from 'classnames';\n\nconst CustomerPage = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n  const [activeTab, setActiveTab] = useState('1');\n  const [addEmployeeModalOpen, setAddEmployeeModalOpen] = useState(false);\n  const [employee, setEmployee] = useState({\n    firstName: '',\n    lastName: '',\n    phoneNumber: '',\n    email: ''\n  });\n  const [addEmployeeErrors, setAddEmployeeErrors] = useState({});\n  const [flag, setFlag] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const getTasksFromState = useSelector(state => state.getCustomerTasksReducer.tasks);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split('/');\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomer(customerId));\n    dispatch(getCustomerTasks(customerId));\n  }, []);\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n    }\n\n    ;\n  }, [getCustomerFromState]);\n  useEffect(() => {\n    if (getTasksFromState) {\n      setTasks(getTasksFromState);\n    }\n\n    ;\n  }, [getTasksFromState]);\n  useEffect(() => {\n    if (flag) {\n      setFlag(false);\n      dispatch(addEmployeeToCustomer(customer));\n      toggleAddEmployeeModal();\n    }\n\n    ;\n  }, [flag]);\n\n  const dateConverter = date => {\n    const dateArray = date.split('-');\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = time => {\n    const timeArray = time.split(':');\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = 'AM';\n    } else {\n      m = 'PM';\n    }\n\n    ;\n\n    if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    ;\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggleTab = tab => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n\n    ;\n  };\n\n  const toggleAddEmployeeModal = () => {\n    if (addEmployeeModalOpen) {\n      setEmployee({\n        firstName: '',\n        lastName: '',\n        phoneNumber: '',\n        email: ''\n      });\n      setAddEmployeeErrors({});\n    }\n\n    ;\n    setAddEmployeeModalOpen(!addEmployeeModalOpen);\n  };\n\n  const handleAddEmployeeChange = e => {\n    setEmployee({ ...employee,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleAddEmployeeSubmit = e => {\n    e.preventDefault();\n    let errors = {};\n\n    if (employee.firstName === '') {\n      errors.firstName = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.lastName === '') {\n      errors.lastName = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.phoneNumber === '') {\n      errors.phoneNumber = 'Must not be empty';\n    } else if (!employee.phoneNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n      errors.phoneNumber = 'Must be a valid phone number';\n    }\n\n    ;\n\n    if (employee.email === '') {\n      errors.email = 'Must not be empty';\n    } else if (!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n      errors.email = 'Must be a valid email address';\n    }\n\n    ;\n    setAddEmployeeErrors(errors);\n\n    if (Object.keys(addEmployeeErrors).length === 0) {\n      if (customer.employees.length === 0) {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [employee]\n        });\n      } else {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [...customer.employees, employee]\n        });\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, customer.businessName), /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggleTab('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, \"Info\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: () => {\n      toggleTab('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, \"Tasks\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '3'\n    }),\n    onClick: () => {\n      toggleTab('3');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, \"Appointments\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '4'\n    }),\n    onClick: () => {\n      toggleTab('4');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, \"Notes\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '5'\n    }),\n    onClick: () => {\n      toggleTab('5');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, \"Employees\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '6'\n    }),\n    onClick: () => {\n      toggleTab('6');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }, \"Lifts\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '7'\n    }),\n    onClick: () => {\n      toggleTab('7');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, \"Documents\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"customer-page-info-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 45\n    }\n  }, \"Primary Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 49\n    }\n  }, customer.primaryContact ? customer.primaryContact.firstName : null, \" \", customer.primaryContact ? customer.primaryContact.lastName : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.primaryEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 52\n    }\n  }, customer.primaryEmail)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryPhoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 52\n    }\n  }, customer.primaryPhoneNumber)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 45\n    }\n  }, \"Billing Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 49\n    }\n  }, customer.billingContact ? customer.billingContact.firstName : null, \" \", customer.billingContact ? customer.billingContact.lastName : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.billingEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 52\n    }\n  }, customer.billingEmail)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingPhoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 52\n    }\n  }, customer.billingPhoneNumber))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-addresses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 45\n    }\n  }, \"Shop Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 49\n    }\n  }, customer.shopAddress ? customer.shopAddress.address : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 49\n    }\n  }, customer.shopAddress ? customer.shopAddress.city : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 49\n    }\n  }, customer.shopAddress ? customer.shopAddress.state : null, \" \", customer.shopAddress ? customer.shopAddress.zipcode : null))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 45\n    }\n  }, \"Billing Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 49\n    }\n  }, customer.billingAddress ? customer.billingAddress.address : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 49\n    }\n  }, customer.billingAddress ? customer.billingAddress.city : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 49\n    }\n  }, customer.billingAddress ? customer.billingAddress.state : null, \" \", customer.billingAddress ? customer.billingAddress.zipcode : null))))))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-task-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    className: \"task-table-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-headers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 41\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 41\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 41\n    }\n  }, \"Time\")), tasks ? tasks.tasks ? tasks.tasks.map(task => /*#__PURE__*/React.createElement(Card, {\n    className: \"task-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    className: \"task-card-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 53\n    }\n  }, task.taskDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 53\n    }\n  }, dateConverter(task.taskDate)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 53\n    }\n  }, timeConverter(task.taskTime)))))) : null : null), console.log(tasks), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 33\n    }\n  }, \"Add Task\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, \"Appointments\")), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 29\n    }\n  }, \"Notes\")), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"customer-page-employees-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 41\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 41\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 41\n    }\n  }, \"Email\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 42\n    }\n  }, customer.primaryContact ? customer.primaryContact.firstName : null, \" \", customer.primaryContact ? customer.primaryContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryPhoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 46\n    }\n  }, customer.primaryPhoneNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.primaryEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 46\n    }\n  }, customer.primaryEmail))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 38\n    }\n  }, customer.billingContact ? customer.billingContact.firstName : null, \" \", customer.billingContact ? customer.billingContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingPhoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 46\n    }\n  }, customer.billingPhoneNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.billingEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 46\n    }\n  }, customer.billingEmail))), customer.employees ? customer.employees.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 45\n    }\n  }, employee.firstName, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.phoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 49\n    }\n  }, employee.phoneNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${employee.email}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 49\n    }\n  }, employee.email)))) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 33\n    }\n  }, \"Add Employee\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 29\n    }\n  }, \"Lifts\")), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 29\n    }\n  }, \"Coming Soon!!!\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: addEmployeeModalOpen,\n    toggle: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, \"Add Employee\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddEmployeeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-name-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeFirstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 37\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.firstName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 37\n    }\n  }, addEmployeeErrors.firstName)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeLastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 37\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.lastName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 37\n    }\n  }, addEmployeeErrors.lastName))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeePhoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 33\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"phoneNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.phoneNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.phoneNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"example@example.com\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.email ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.email)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleAddEmployeeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 25\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CustomerPage;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLocation","TabContent","TabPane","Nav","NavItem","NavLink","Form","FormGroup","Label","Input","FormFeedback","Button","Modal","ModalHeader","ModalBody","ModalFooter","Table","Card","CardHeader","CardBody","EmployeeNavbar","EmployeeSidebar","Footer","getCustomer","addEmployeeToCustomer","getCustomerTasks","classnames","CustomerPage","customer","setCustomer","getCustomerFromState","state","getCustomerReducer","activeTab","setActiveTab","addEmployeeModalOpen","setAddEmployeeModalOpen","employee","setEmployee","firstName","lastName","phoneNumber","email","addEmployeeErrors","setAddEmployeeErrors","flag","setFlag","tasks","setTasks","getTasksFromState","getCustomerTasksReducer","dispatch","location","pathArray","pathname","split","customerId","length","toggleAddEmployeeModal","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","toggleTab","tab","handleAddEmployeeChange","e","target","name","value","handleAddEmployeeSubmit","preventDefault","errors","match","Object","keys","employees","businessName","active","primaryContact","primaryEmail","primaryPhoneNumber","billingContact","billingEmail","billingPhoneNumber","shopAddress","address","city","zipcode","billingAddress","map","task","taskDescription","taskDate","taskTime","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    TabContent,\n    TabPane,\n    Nav,\n    NavItem,\n    NavLink,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Table,\n    Card,\n    CardHeader,\n    CardBody\n} from 'reactstrap';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getCustomer } from '../../actions/getCustomer';\nimport { addEmployeeToCustomer } from '../../actions/addEmployeeToCustomer';\nimport { getCustomerTasks } from '../../actions/getCustomerTasks';\n\nimport '../../styles/employee-dashboard.scss'\nimport classnames from 'classnames';\n\nconst CustomerPage = () => {\n    const [customer, setCustomer] = useState({});\n    const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n    const [activeTab, setActiveTab] = useState('1');\n    const [addEmployeeModalOpen, setAddEmployeeModalOpen] = useState(false);\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        lastName: '',\n        phoneNumber: '',\n        email: ''\n    });\n    const [addEmployeeErrors, setAddEmployeeErrors] = useState({});\n    const [flag, setFlag] = useState(false);\n    const [tasks, setTasks] = useState([]);\n    const getTasksFromState = useSelector(state => state.getCustomerTasksReducer.tasks);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const customerId = pathArray[pathArray.length - 1];\n        dispatch(getCustomer(customerId));\n        dispatch(getCustomerTasks(customerId));\n    }, []);\n\n    useEffect(() => {\n        if(getCustomerFromState) {\n            setCustomer(getCustomerFromState);\n        };\n    }, [getCustomerFromState]);\n\n    useEffect(() => {\n        if(getTasksFromState) {\n            setTasks(getTasksFromState);\n        };\n    }, [getTasksFromState]);\n\n    useEffect(() => {\n        if(flag) {\n            setFlag(false);\n            dispatch(addEmployeeToCustomer(customer));\n            toggleAddEmployeeModal();\n        };\n    }, [flag]);\n\n    const dateConverter = date => {\n        const dateArray = date.split('-');\n        return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    };\n\n    const timeConverter = time => {\n        const timeArray = time.split(':');\n        const hour = parseInt(timeArray[0]);\n        let m;\n\n        if(hour <= 11) {\n            m = 'AM';\n        } else {\n            m = 'PM';\n        };\n\n        if(hour <= 12) {\n            const newHour = hour.toString();\n            timeArray[0] = newHour;\n        } else {\n            const newHour = (hour - 12).toString();\n            timeArray[0] = newHour;\n        };\n\n        return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    };\n\n    const toggleTab = tab => {\n        if(activeTab !== tab) {\n            setActiveTab(tab);\n        };\n    };\n\n    const toggleAddEmployeeModal = () => {\n        if(addEmployeeModalOpen) {\n            setEmployee({\n                firstName: '',\n                lastName: '',\n                phoneNumber: '',\n                email: ''\n            });\n            setAddEmployeeErrors({});\n        };\n        setAddEmployeeModalOpen(!addEmployeeModalOpen);\n    };\n\n    const handleAddEmployeeChange = e => {\n        setEmployee({\n            ...employee,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleAddEmployeeSubmit = e => {\n        e.preventDefault();\n        \n        let errors = {};\n\n        if(employee.firstName === '') {\n            errors.firstName = 'Must not be empty';\n        };\n        if(employee.lastName === '') {\n            errors.lastName = 'Must not be empty';\n        };\n        if(employee.phoneNumber === '') {\n            errors.phoneNumber = 'Must not be empty';\n        } else if(!employee.phoneNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n            errors.phoneNumber = 'Must be a valid phone number';\n        };\n        if(employee.email === '') {\n            errors.email = 'Must not be empty';\n        } else if(!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n            errors.email = 'Must be a valid email address';\n        };\n\n        setAddEmployeeErrors(errors);\n\n        if(Object.keys(addEmployeeErrors).length === 0) {\n            if(customer.employees.length === 0) {\n                setFlag(true);\n                setCustomer({\n                    ...customer,\n                    employees: [employee]\n                });\n            } else {\n                setFlag(true);\n                setCustomer({\n                    ...customer,\n                    employees: [...customer.employees, employee]\n                });\n            };\n        };\n    };\n    \n    return (\n        <div>\n            <EmployeeNavbar />\n            <div className=\"customer-page\">\n                <EmployeeSidebar />\n                <div className=\"customer-page-content\">\n                    <h1>{customer.businessName}</h1>\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { toggleTab('1'); }}>\n                                Info\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { toggleTab('2') }}>\n                                Tasks\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '3' })} onClick={() => { toggleTab('3') }}>\n                                Appointments\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '4' })} onClick={() => { toggleTab('4') }}>\n                                Notes\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '5' })} onClick={() => { toggleTab('5') }}>\n                                Employees\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '6' })} onClick={() => { toggleTab('6') }}>\n                                Lifts\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '7' })} onClick={() => { toggleTab('7') }}>\n                                Documents\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                            <div>\n                                <Form className=\"customer-page-info-tab\">\n                                    <div className=\"customer-page-contacts\">\n                                        <FormGroup>\n                                            <h3>Primary Contact</h3>\n                                            <div>\n                                                <p>{customer.primaryContact ? customer.primaryContact.firstName : null} {customer.primaryContact ? customer.primaryContact.lastName : null}</p>\n                                                <p><a href={`mailto:${customer.primaryEmail}`}>{customer.primaryEmail}</a></p>\n                                                <p><a href={`tel:+1-${customer.primaryPhoneNumber}`}>{customer.primaryPhoneNumber}</a></p>\n                                            </div>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <h3>Billing Contact</h3>\n                                            <div>\n                                                <p>{customer.billingContact ? customer.billingContact.firstName : null} {customer.billingContact ? customer.billingContact.lastName : null}</p>\n                                                <p><a href={`mailto:${customer.billingEmail}`}>{customer.billingEmail}</a></p>\n                                                <p><a href={`tel:+1-${customer.billingPhoneNumber}`}>{customer.billingPhoneNumber}</a></p>\n                                            </div>\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"customer-page-addresses\">\n                                        <FormGroup>\n                                            <h3>Shop Address</h3>\n                                            <a href=\"\">\n                                                <p>{customer.shopAddress ? customer.shopAddress.address : null}</p>\n                                                <p>{customer.shopAddress ? customer.shopAddress.city : null}</p>\n                                                <p>{customer.shopAddress ? customer.shopAddress.state : null} {customer.shopAddress ? customer.shopAddress.zipcode : null}</p>\n                                            </a>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <h3>Billing Address</h3>\n                                            <a href=\"\">\n                                                <p>{customer.billingAddress ? customer.billingAddress.address : null}</p>\n                                                <p>{customer.billingAddress ? customer.billingAddress.city : null}</p>\n                                                <p>{customer.billingAddress ? customer.billingAddress.state : null} {customer.billingAddress ? customer.billingAddress.zipcode : null}</p>\n                                            </a>\n                                        </FormGroup>\n                                    </div>\n                                </Form>\n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            <div className=\"customer-page-task-tab\">\n                                <Table borderless className=\"task-table-header\">\n                                    <tr className=\"table-headers\">\n                                        <th>Task</th>\n                                        <th>Date</th>\n                                        <th>Time</th>\n                                    </tr>\n                                    {tasks ? tasks.tasks ? tasks.tasks.map(task => (\n                                        <Card className=\"task-card\">\n                                            <Table borderless className=\"task-card-table\">\n                                                <tr className=\"table-data\">\n                                                    <td>{task.taskDescription}</td>\n                                                    <td>{dateConverter(task.taskDate)}</td>\n                                                    <td>{timeConverter(task.taskTime)}</td>\n                                                </tr>\n                                            </Table>\n                                        </Card>\n                                    )) : null : null}\n                                </Table>\n                                {console.log(tasks)}\n                                <Button outline color=\"success\">Add Task</Button>\n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                            <span>Appointments</span>\n                        </TabPane>\n                        <TabPane tabId=\"4\">\n                            <span>Notes</span>\n                        </TabPane>\n                        <TabPane tabId=\"5\">\n                            <Table className=\"customer-page-employees-table\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Phone Number</th>\n                                        <th>Email</th> \n                                    </tr>\n                                </thead>\n                                <tbody>\n                                     <tr>\n                                         <td>{customer.primaryContact ? customer.primaryContact.firstName : null} {customer.primaryContact ? customer.primaryContact.lastName : null}</td>\n                                         <td><a href={`tel:+1-${customer.primaryPhoneNumber}`}>{customer.primaryPhoneNumber}</a></td>\n                                         <td><a href={`mailto:${customer.primaryEmail}`}>{customer.primaryEmail}</a></td>\n                                     </tr>\n                                     <tr>\n                                     <td>{customer.billingContact ? customer.billingContact.firstName : null} {customer.billingContact ? customer.billingContact.lastName : null}</td>\n                                         <td><a href={`tel:+1-${customer.billingPhoneNumber}`}>{customer.billingPhoneNumber}</a></td>\n                                         <td><a href={`mailto:${customer.billingEmail}`}>{customer.billingEmail}</a></td>\n                                     </tr>\n                                    {customer.employees ? customer.employees.map(employee => (\n                                        <tr>\n                                            <td>{employee.firstName} {employee.lastName}</td>\n                                            <td><a href={`tel:+1-${employee.phoneNumber}`}>{employee.phoneNumber}</a></td>\n                                            <td><a href={`mailto:${employee.email}`}>{employee.email}</a></td>\n                                        </tr>\n                                    )) : null}\n                                </tbody>\n                            </Table>\n                            <div className=\"add-employee-div\">\n                                <Button outline color=\"success\" onClick={toggleAddEmployeeModal}>Add Employee</Button>\n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"6\">\n                            <span>Lifts</span>\n                        </TabPane>\n                        <TabPane tabId=\"7\">\n                            <span>Coming Soon!!!</span>\n                        </TabPane>\n                    </TabContent>\n                </div>\n                <Modal isOpen={addEmployeeModalOpen} toggle={toggleAddEmployeeModal}>\n                    <ModalHeader toggle={toggleAddEmployeeModal}>Add Employee</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleAddEmployeeSubmit}>\n                            <div className=\"add-employee-name-div\">\n                                <FormGroup>\n                                    <Label for=\"employeeFirstName\">First Name</Label>\n                                    <Input type=\"text\" name=\"firstName\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.firstName ? true : false} />\n                                    <FormFeedback>{addEmployeeErrors.firstName}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"employeeLastName\">Last Name</Label>\n                                    <Input type=\"text\" name=\"lastName\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.lastName ? true : false} />\n                                    <FormFeedback>{addEmployeeErrors.lastName}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"employeePhoneNumber\">Phone Number</Label>\n                                <Input type=\"text\" name=\"phoneNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.phoneNumber ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.phoneNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeEmail\">Email</Label>\n                                <Input type=\"text\" name=\"email\" placeholder=\"example@example.com\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.email ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.email}</FormFeedback>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleAddEmployeeSubmit}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default CustomerPage;"]},"metadata":{},"sourceType":"module"}