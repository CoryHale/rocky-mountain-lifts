{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/WorkOrderPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, FormFeedback, Button, Modal, ModalHeader, ModalBody, ModalFooter, Table } from 'reactstrap';\nimport Select from 'react-select';\nimport SignatureCanvas from 'react-signature-canvas';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getWorkOrder } from '../../actions/getWorkOrder';\nimport { workOrderReviewSubmit } from '../../actions/workOrderReviewSubmit';\nimport '../../styles/employee-dashboard.scss';\n\nconst WorkOrderPage = () => {\n  const [workOrder, setWorkOrder] = useState({});\n  const [customer, setCustomer] = useState({});\n  const [mapsAddress, setMapsAddress] = useState('');\n  const [employees, setEmployees] = useState([]);\n  const getWorkOrderFromState = useSelector(state => state.getWorkOrderReducer.workOrder);\n  const getUsers = useSelector(state => state.getWorkOrderReducer.users);\n  const [isOpenServiceModal, setIsOpenServiceModal] = useState(false);\n  const [service, setService] = useState({\n    make: '',\n    type: '',\n    model: '',\n    serialNumber: '',\n    bayNumber: '',\n    serviceDone: '',\n    billableHours: null,\n    partsUsed: [],\n    partsNeeded: []\n  });\n  const [serviceErrors, setServiceErrors] = useState({});\n  const [partUsed, setPartUsed] = useState({\n    quantity: '',\n    partDescription: '',\n    partNumber: '',\n    images: []\n  });\n  const [partUsedErrors, setPartUsedErrors] = useState({});\n  const [partNeeded, setPartNeeded] = useState({\n    quantity: '',\n    partDescription: '',\n    partNumber: '',\n    images: []\n  });\n  const hoursOptions = [];\n  const [partNeededErrors, setPartNeededErrors] = useState({});\n  const [isOpenPartUsed, setIsOpenPartUsed] = useState(false);\n  const [isOpenPartNeeded, setIsOpenPartNeeded] = useState(false);\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n  const [hideClockIn, setHideClockIn] = useState(false);\n  const [hideOfficeNotes, setHideOfficeNotes] = useState(false);\n  const [hideSignaturePad, setHideSignaturePad] = useState(true);\n  const [hideSubmitForSignatureButton, setHideSubmitForSignatureButton] = useState(false);\n  const [hideSubmitForReviewButton, setHideSubmitForReviewButton] = useState(true);\n  let sigPad = {};\n  const [flag, setFlag] = useState(false);\n  const [waitingForReview, setWaitingForReview] = useState(false);\n  const success = useSelector(state => state.workOrderReviewSubmitReducer.success);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split('/');\n    const jobId = pathArray[pathArray.length - 1];\n    dispatch(getWorkOrder(jobId));\n  }, []);\n  useEffect(() => {\n    for (let i = 0; i < 100; i = i + 0.5) {\n      hoursOptions.push({\n        value: i,\n        label: i\n      });\n    }\n\n    ;\n  }, []);\n  useEffect(() => {\n    if (getWorkOrderFromState) {\n      setWorkOrder(getWorkOrderFromState);\n    }\n\n    ;\n  }, [getWorkOrderFromState]);\n  useEffect(() => {\n    let crewMembers = [];\n\n    if (getUsers) {\n      getUsers.forEach(user => {\n        if (user.userType === 'customer') {\n          setCustomer(user);\n        } else {\n          crewMembers.push(user);\n        }\n\n        ;\n      });\n      setEmployees(crewMembers);\n    }\n  }, [getUsers]);\n  useEffect(() => {\n    if (customer) {\n      addressConverter(customer);\n    }\n\n    ;\n  }, [customer]);\n  useEffect(() => {\n    if (startTime !== 0 && endTime !== 0) {\n      jobTimeConverter();\n    }\n\n    ;\n  }, [endTime]);\n  useEffect(() => {\n    if (flag) {\n      dispatch(workOrderReviewSubmit(workOrder));\n      setHideSubmitForReviewButton(true);\n    }\n\n    ;\n  }, [flag]);\n  useEffect(() => {\n    if (success) {\n      setWaitingForReview(true);\n    }\n\n    ;\n  }, [success]);\n\n  const typeConverter = types => {\n    if (types) {\n      if (types.length === 1) {\n        return types;\n      } else {\n        return types.join(', ');\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const dateConverter = date => {\n    if (date) {\n      const dateArray = date.split('-');\n      return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    }\n\n    ;\n  };\n\n  const timeConverter = time => {\n    if (time) {\n      const timeArray = time.split(':');\n      const hour = parseInt(timeArray[0]);\n      let m;\n\n      if (hour <= 11) {\n        m = 'AM';\n      } else {\n        m = 'PM';\n      }\n\n      ;\n\n      if (hour <= 12) {\n        const newHour = hour.toString();\n        timeArray[0] = newHour;\n      } else {\n        const newHour = (hour - 12).toString();\n        timeArray[0] = newHour;\n      }\n\n      ;\n      return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    }\n\n    ;\n  };\n\n  const addressConverter = customer => {\n    if (customer.shopAddress) {\n      const address = customer.shopAddress.address;\n      const city = customer.shopAddress.city;\n      const state = customer.shopAddress.state;\n      const zipcode = customer.shopAddress.zipcode;\n      let newAddress = '';\n      let newCity = '';\n\n      if (address) {\n        newAddress = address.split(' ').join('+');\n      }\n\n      ;\n\n      if (city) {\n        newCity = city.split(' ').join('+');\n      }\n\n      const searchableAddress = `${newAddress},+${newCity},+${state}+${zipcode}`;\n      setMapsAddress(searchableAddress);\n    }\n\n    ;\n  };\n\n  const crewConverter = members => {\n    let crewNames = [];\n\n    if (members) {\n      members.forEach(member => {\n        crewNames.push(`${member.firstName} ${member.lastName}`);\n      });\n\n      if (crewNames.length === 1) {\n        return crewNames;\n      } else {\n        return crewNames.join(', ');\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const clockIn = () => {\n    const date = new Date();\n    const time = date.getTime();\n    setStartTime(time);\n  };\n\n  const clockOut = () => {\n    if (startTime === 0) {\n      alert('Please clock in first');\n    } else {\n      const date = new Date();\n      const time = date.getTime();\n      setEndTime(time);\n    }\n\n    ;\n  };\n\n  const jobTimeConverter = () => {\n    if (startTime && endTime) {\n      const totalTime = endTime - startTime;\n      const seconds = Math.floor(totalTime / 1000 % 60);\n      const minutes = Math.floor(totalTime / (1000 * 60) % 60);\n      const hours = Math.floor(totalTime / (1000 * 60 * 60) % 24);\n      const trueHours = hours < 10 ? \"0\" + hours : hours;\n      const trueMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n      const trueSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n      const timeAtJob = trueHours + ':' + trueMinutes + ':' + trueSeconds;\n      console.log(timeAtJob);\n      setWorkOrder({ ...workOrder,\n        timeAtJob: timeAtJob\n      });\n      setHideClockIn(true);\n    }\n\n    ;\n  };\n\n  const toggleServiceModal = () => {\n    setIsOpenServiceModal(!isOpenServiceModal);\n  };\n\n  const handleChangeService = e => {\n    setService({ ...service,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitService = e => {\n    e.preventDefault();\n    const errors = {};\n\n    if (service.make.trim() === '') {\n      errors.make = 'Must not be empty';\n    }\n\n    ;\n\n    if (service.type.trim() === '') {\n      errors.type = 'Must not be empty';\n    }\n\n    ;\n\n    if (service.model.trim() === '') {\n      errors.model = 'Must not be empty';\n    }\n\n    ;\n\n    if (service.serialNumber.trim() === '') {\n      errors.serialNumber = 'Must not be empty';\n    }\n\n    ;\n\n    if (service.serviceDone.trim() === '') {\n      errors.serviceDone = 'Must not be empty';\n    }\n\n    ;\n\n    if (Object.keys(errors).length !== 0) {\n      setServiceErrors(errors);\n    } else {\n      if (!workOrder.serviceDone) {\n        setWorkOrder({ ...workOrder,\n          serviceDone: [service]\n        });\n      } else {\n        setWorkOrder({ ...workOrder,\n          serviceDone: [...workOrder.serviceDone, service]\n        });\n      }\n\n      ;\n      setService({\n        make: '',\n        type: '',\n        model: '',\n        serialNumber: '',\n        bayNumber: '',\n        serviceDone: '',\n        billableHours: null,\n        partsUsed: [],\n        partsNeeded: []\n      });\n      setIsOpenServiceModal(false);\n      setServiceErrors({});\n    }\n\n    ;\n  };\n\n  const togglePartUsed = () => {\n    setIsOpenPartUsed(!isOpenPartUsed);\n  };\n\n  const togglePartNeeded = () => {\n    setIsOpenPartNeeded(!isOpenPartNeeded);\n  };\n\n  const handleChangePartUsed = e => {\n    setPartUsed({ ...partUsed,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitPartUsed = e => {\n    e.preventDefault();\n    const errors = {};\n\n    if (partUsed.quantity.trim() === '') {\n      errors.quantity = 'Must not be empty';\n    }\n\n    ;\n\n    if (partUsed.partDescription.trim() === '') {\n      errors.partDescription = 'Must not be empty';\n    }\n\n    ;\n\n    if (partUsed.partNumber.trim() === '') {\n      errors.partNumber = 'Must not be empty';\n    }\n\n    ;\n\n    if (Object.keys(errors).length !== 0) {\n      setPartUsedErrors(errors);\n    } else {\n      setService({ ...service,\n        partsUsed: [...service.partsUsed, partUsed]\n      });\n      setPartUsed({\n        quantity: '',\n        partDescription: '',\n        partNumber: '',\n        images: []\n      });\n      setIsOpenPartUsed(false);\n      setPartUsedErrors({});\n    }\n\n    ;\n  };\n\n  const handleChangePartNeeded = e => {\n    setPartNeeded({ ...partNeeded,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitPartNeeded = e => {\n    e.preventDefault();\n    const errors = {};\n\n    if (partNeeded.quantity.trim() === '') {\n      errors.quantity = 'Must not be empty';\n    }\n\n    ;\n\n    if (partNeeded.partDescription.trim() === '') {\n      errors.partDescription = 'Must not be empty';\n    }\n\n    ;\n\n    if (partNeeded.partNumber.trim() === '') {\n      errors.partNumber = 'Must not be empty';\n    }\n\n    ;\n\n    if (Object.keys(errors).length !== 0) {\n      setPartNeededErrors(errors);\n    } else {\n      setService({ ...service,\n        partsNeeded: [...service.partsNeeded, partNeeded]\n      });\n      setPartNeeded({\n        quantity: '',\n        partDescription: '',\n        partNumber: '',\n        images: []\n      });\n      setIsOpenPartNeeded(false);\n      setPartNeededErrors({});\n    }\n\n    ;\n  };\n\n  const handleSubmitForSignature = e => {\n    e.preventDefault();\n    setHideOfficeNotes(true);\n    setHideSignaturePad(false);\n    setHideSubmitForSignatureButton(true);\n    setHideSubmitForReviewButton(false);\n  };\n\n  const clearSignaturePad = e => {\n    sigPad.clear();\n  };\n\n  const handleSubmitForReview = e => {\n    e.preventDefault();\n    setWorkOrder({ ...workOrder,\n      signature: sigPad.getTrimmedCanvas().toDataURL('image/png')\n    });\n    setFlag(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-order-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  }), workOrder ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-order-page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }, `Work Order #${workOrder.workOrderId}`), /*#__PURE__*/React.createElement(Form, {\n    className: \"work-order-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 29\n    }\n  }, \"Customer Name\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: customer.businessName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customerAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 29\n    }\n  }, \"Customer Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://maps.google.com/maps?q=${mapsAddress}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: `${customer.shopAddress ? customer.shopAddress.address : null}, ${customer.shopAddress ? customer.shopAddress.city : null}, ${customer.shopAddress ? customer.shopAddress.state : null} ${customer.shopAddress ? customer.shopAddress.zipcode : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"type-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 29\n    }\n  }, \"Service Type(s)\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: typeConverter(workOrder.serviceType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 33\n    }\n  }, \"Service Date\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: dateConverter(workOrder.serviceDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceStartTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 33\n    }\n  }, \"Service Start Time\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: timeConverter(workOrder.serviceStartTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"crewMembers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 29\n    }\n  }, \"Crew Members\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: crewConverter(employees),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"description-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 29\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    type: \"textarea\",\n    value: workOrder.serviceDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 29\n    }\n  })), hideClockIn ? /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"timeOnJob\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 29\n    }\n  }, \"Time At Job\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    type: \"text\",\n    value: workOrder.timeAtJob ? workOrder.timeAtJob : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 29\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 25\n    }\n  }, !hideClockIn ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secondary-button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 33\n    }\n  }, startTime === 0 ? /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: clockIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 37\n    }\n  }, \"Clock In\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 37\n    }\n  }, \"Clock In\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 33\n    }\n  }, endTime === 0 ? /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: clockOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 37\n    }\n  }, \"Clock Out\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 37\n    }\n  }, \"Clock Out\"))) : null, workOrder.serviceDone ? workOrder.serviceDone.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"service-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 33\n    }\n  }, \"Services\"), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 41\n    }\n  }, \"Service Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 41\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 41\n    }\n  }, \"Parts Needed\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 37\n    }\n  }, workOrder.serviceDone.map(service => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 45\n    }\n  }, service.type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 45\n    }\n  }, service.serviceDone), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 45\n    }\n  }, service.partsNeeded.length > 0 ? 'Y' : 'N')))))) : null : null, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 33\n    }\n  }, \"Add Service\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secondary-button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 37\n    }\n  }, \"Add Inspection\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"warning\",\n    className: \"training-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 37\n    }\n  }, \"Add Training\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"travel-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"travelTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 33\n    }\n  }, \"Travel Time (Roundtrip)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"travelTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"travelMileage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 33\n    }\n  }, \"Travel Mileage (Roundtrip)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 29\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    value: workOrder.notes ? workOrder.notes : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 29\n    }\n  })), !workOrder.signature ? hideOfficeNotes ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 74\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"officeNotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 29\n    }\n  }, \"Office Notes (NOT FOR CUSTOMER)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    value: workOrder.officeNotes ? workOrder.officeNotes : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 29\n    }\n  })) : null, !workOrder.signature ? hideSignaturePad ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 75\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signature-pad-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"signature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 33\n    }\n  }, \"Signature\"), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"danger\",\n    className: \"clear-button\",\n    onClick: clearSignaturePad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 118\n    }\n  }))), !success ? /*#__PURE__*/React.createElement(SignatureCanvas, {\n    canvasProps: {\n      className: \"signature-pad\"\n    },\n    ref: ref => {\n      sigPad = ref;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: workOrder.signature,\n    alt: \"Signature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 31\n    }\n  })) : null, !workOrder.signature ? hideSubmitForSignatureButton ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 87\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitForSignature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 29\n    }\n  }, \"Submit for Signature\")) : null, !workOrder.signature ? hideSubmitForReviewButton ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 84\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitForReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 29\n    }\n  }, \"Submit for Review\")) : null, !workOrder.signature ? waitingForReview ? /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 68\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    disabled: true,\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 29\n    }\n  }, \"Waiting for Review\")) : null : null, workOrder.signature ? /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"signature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 29\n    }\n  }, \"Signature\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: workOrder.signature,\n    alt: \"Signature\",\n    className: \"signature-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 29\n    }\n  })) : null, workOrder.signature ? /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    disabled: true,\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 29\n    }\n  }, \"Waiting for Review\")) : null)) : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenServiceModal,\n    toggle: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 21\n    }\n  }, \"Add Service\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equipment-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"make\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 37\n    }\n  }, \"Make\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"make\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.make ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 37\n    }\n  }, serviceErrors.make)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 37\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"type\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.type ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 37\n    }\n  }, serviceErrors.type))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equipment-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"model\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 37\n    }\n  }, \"Model\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"model\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.model ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 37\n    }\n  }, serviceErrors.model)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serialNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 37\n    }\n  }, \"Serial Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"serialNumber\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.serialNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 37\n    }\n  }, serviceErrors.serialNumber))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"bayNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 33\n    }\n  }, \"Bay Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"bayNumber\",\n    onChange: handleChangeService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 33\n    }\n  }, \"What work was done?\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"serviceDone\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.serviceDone ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 33\n    }\n  }, serviceErrors.serviceDone)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billableHours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 33\n    }\n  }, \"Billable Hours\"), /*#__PURE__*/React.createElement(Select, {\n    options: hoursOptions,\n    defaultValue: serviceManagers[0],\n    name: \"serviceManager\",\n    onChange: handleSelectChange,\n    className: errors.serviceManager ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.serviceManager ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 33\n    }\n  }, errors.serviceManager)), service.partsUsed.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"part-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 33\n    }\n  }, \"Parts Used\"), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    size: \"sm\",\n    className: \"part-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 41\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 41\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 41\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 41\n    }\n  }, \"Images\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 37\n    }\n  }, service.partsUsed.map(part => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 45\n    }\n  }, part.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 45\n    }\n  }, part.partDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 45\n    }\n  }, part.partNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 45\n    }\n  }, part.images)))))) : null, service.partsNeeded.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"part-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 33\n    }\n  }, \"Parts Needed\"), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    size: \"sm\",\n    className: \"part-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 41\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 41\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 41\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 41\n    }\n  }, \"Images\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 37\n    }\n  }, service.partsNeeded.map(part => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 45\n    }\n  }, part.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 45\n    }\n  }, part.partDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 45\n    }\n  }, part.partNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 45\n    }\n  }, part.images)))))) : null, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"parts-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 33\n    }\n  }, \"Add Part Used\"), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"danger\",\n    onClick: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 33\n    }\n  }, \"Add Part Needed\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenPartUsed,\n    toggle: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 21\n    }\n  }, \"Add Part Used\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitPartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 33\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"quantity\",\n    onChange: handleChangePartUsed,\n    invalid: partUsedErrors.quantity ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 33\n    }\n  }, partUsedErrors.quantity)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 33\n    }\n  }, \"Part Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partDescription\",\n    onChange: handleChangePartUsed,\n    invalid: partUsedErrors.partDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 33\n    }\n  }, partUsedErrors.partDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 33\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partNumber\",\n    onChange: handleChangePartUsed,\n    invalid: partUsedErrors.partNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 33\n    }\n  }, partUsedErrors.partNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 33\n    }\n  }, \"Picture(s)\"), /*#__PURE__*/React.createElement(Input, {\n    multiple: true,\n    type: \"file\",\n    name: \"images\",\n    onChange: handleChangePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitPartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenPartNeeded,\n    toggle: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 21\n    }\n  }, \"Add Part Needed\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitPartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 33\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"quantity\",\n    onChange: handleChangePartNeeded,\n    invalid: partNeededErrors.quantity ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 33\n    }\n  }, partNeededErrors.quantity)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 33\n    }\n  }, \"Part Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partDescription\",\n    onChange: handleChangePartNeeded,\n    invalid: partNeededErrors.partDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 33\n    }\n  }, partNeededErrors.partDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 33\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partNumber\",\n    onChange: handleChangePartNeeded,\n    invalid: partNeededErrors.partNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 33\n    }\n  }, partNeededErrors.partNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 33\n    }\n  }, \"Picture(s)\"), /*#__PURE__*/React.createElement(Input, {\n    multiple: true,\n    type: \"file\",\n    name: \"images\",\n    onChange: handleChangePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitPartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 25\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default WorkOrderPage;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/WorkOrderPage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLocation","Form","FormGroup","Label","Input","FormFeedback","Button","Modal","ModalHeader","ModalBody","ModalFooter","Table","Select","SignatureCanvas","EmployeeNavbar","EmployeeSidebar","Footer","getWorkOrder","workOrderReviewSubmit","WorkOrderPage","workOrder","setWorkOrder","customer","setCustomer","mapsAddress","setMapsAddress","employees","setEmployees","getWorkOrderFromState","state","getWorkOrderReducer","getUsers","users","isOpenServiceModal","setIsOpenServiceModal","service","setService","make","type","model","serialNumber","bayNumber","serviceDone","billableHours","partsUsed","partsNeeded","serviceErrors","setServiceErrors","partUsed","setPartUsed","quantity","partDescription","partNumber","images","partUsedErrors","setPartUsedErrors","partNeeded","setPartNeeded","hoursOptions","partNeededErrors","setPartNeededErrors","isOpenPartUsed","setIsOpenPartUsed","isOpenPartNeeded","setIsOpenPartNeeded","startTime","setStartTime","endTime","setEndTime","hideClockIn","setHideClockIn","hideOfficeNotes","setHideOfficeNotes","hideSignaturePad","setHideSignaturePad","hideSubmitForSignatureButton","setHideSubmitForSignatureButton","hideSubmitForReviewButton","setHideSubmitForReviewButton","sigPad","flag","setFlag","waitingForReview","setWaitingForReview","success","workOrderReviewSubmitReducer","dispatch","location","pathArray","pathname","split","jobId","length","i","push","value","label","crewMembers","forEach","user","userType","addressConverter","jobTimeConverter","typeConverter","types","join","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","shopAddress","address","city","zipcode","newAddress","newCity","searchableAddress","crewConverter","members","crewNames","member","firstName","lastName","clockIn","Date","getTime","clockOut","alert","totalTime","seconds","Math","floor","minutes","hours","trueHours","trueMinutes","trueSeconds","timeAtJob","console","log","toggleServiceModal","handleChangeService","e","target","name","handleSubmitService","preventDefault","errors","trim","Object","keys","togglePartUsed","togglePartNeeded","handleChangePartUsed","handleSubmitPartUsed","handleChangePartNeeded","handleSubmitPartNeeded","handleSubmitForSignature","clearSignaturePad","clear","handleSubmitForReview","signature","getTrimmedCanvas","toDataURL","workOrderId","businessName","serviceType","serviceDate","serviceStartTime","serviceDescription","map","notes","officeNotes","className","ref","serviceManagers","handleSelectChange","serviceManager","part"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Table\n} from 'reactstrap';\nimport Select from 'react-select';\nimport SignatureCanvas from 'react-signature-canvas';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getWorkOrder } from '../../actions/getWorkOrder';\nimport { workOrderReviewSubmit } from '../../actions/workOrderReviewSubmit';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst WorkOrderPage = () => {\n    const [workOrder, setWorkOrder] = useState({});\n    const [customer, setCustomer] = useState({});\n    const [mapsAddress, setMapsAddress] = useState('');\n    const [employees, setEmployees] = useState([]);\n    const getWorkOrderFromState = useSelector(state => state.getWorkOrderReducer.workOrder);\n    const getUsers = useSelector(state => state.getWorkOrderReducer.users);\n    const [isOpenServiceModal, setIsOpenServiceModal] = useState(false);\n    const [service, setService] = useState({\n        make: '',\n        type: '',\n        model: '',\n        serialNumber: '',\n        bayNumber: '',\n        serviceDone: '',\n        billableHours: null,\n        partsUsed: [],\n        partsNeeded: []\n    });\n    const [serviceErrors, setServiceErrors] = useState({});\n    const [partUsed, setPartUsed] = useState({\n        quantity: '',\n        partDescription: '',\n        partNumber: '',\n        images: []\n    });\n    const [partUsedErrors, setPartUsedErrors] = useState({});\n    const [partNeeded, setPartNeeded] = useState({\n        quantity: '',\n        partDescription: '',\n        partNumber: '',\n        images: []\n    });\n    const hoursOptions = [];\n    const [partNeededErrors, setPartNeededErrors] = useState({});\n    const [isOpenPartUsed, setIsOpenPartUsed] = useState(false);\n    const [isOpenPartNeeded, setIsOpenPartNeeded] = useState(false);\n    const [startTime, setStartTime] = useState(0);\n    const [endTime, setEndTime] = useState(0);\n    const [hideClockIn, setHideClockIn] = useState(false);\n    const [hideOfficeNotes, setHideOfficeNotes] = useState(false);\n    const [hideSignaturePad, setHideSignaturePad] = useState(true);\n    const [hideSubmitForSignatureButton, setHideSubmitForSignatureButton] = useState(false);\n    const [hideSubmitForReviewButton, setHideSubmitForReviewButton] = useState(true);\n    let sigPad = {};\n    const [flag, setFlag] = useState(false);\n    const [waitingForReview, setWaitingForReview] = useState(false);\n    const success = useSelector(state => state.workOrderReviewSubmitReducer.success);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const jobId = pathArray[pathArray.length - 1];\n        dispatch(getWorkOrder(jobId));\n    }, []);\n\n    useEffect(() => {\n        for(let i = 0; i < 100; i = i + 0.5) {\n            hoursOptions.push({\n                value: i,\n                label: i\n            });\n        };\n    }, []);\n\n    useEffect(() => {\n        if(getWorkOrderFromState) {\n            setWorkOrder(getWorkOrderFromState);\n        };\n    }, [getWorkOrderFromState]);\n\n    useEffect(() => {\n        let crewMembers = [];\n\n        if(getUsers) {\n            getUsers.forEach(user => {\n                if(user.userType === 'customer') {\n                    setCustomer(user);\n                } else {\n                    crewMembers.push(user);\n                };\n            });\n            setEmployees(crewMembers);\n        }\n    }, [getUsers]);\n\n    useEffect(() => {\n        if(customer) {\n            addressConverter(customer);\n        };\n    }, [customer]);\n\n    useEffect(() => {\n        if(startTime !== 0 && endTime !== 0) {\n            jobTimeConverter();\n        };\n    }, [endTime]);\n\n    useEffect(() => {\n        if(flag) {\n            dispatch(workOrderReviewSubmit(workOrder));\n            setHideSubmitForReviewButton(true);\n        };\n    }, [flag]);\n\n    useEffect(() => {\n        if(success) {\n            setWaitingForReview(true);\n        };\n    }, [success]);\n\n    const typeConverter = types => {\n        if(types) {\n            if(types.length === 1) {\n                return types;\n            } else {\n                return types.join(', ');\n            };\n        };\n    };\n\n    const dateConverter = date => {\n        if(date) {\n            const dateArray = date.split('-');\n            return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n        };\n    };\n\n    const timeConverter = time => {\n        if(time) {\n            const timeArray = time.split(':');\n            const hour = parseInt(timeArray[0]);\n            let m;\n    \n            if(hour <= 11) {\n                m = 'AM';\n            } else {\n                m = 'PM';\n            };\n    \n            if(hour <= 12) {\n                const newHour = hour.toString();\n                timeArray[0] = newHour;\n            } else {\n                const newHour = (hour - 12).toString();\n                timeArray[0] = newHour;\n            };\n    \n            return `${timeArray[0]}:${timeArray[1]} ${m}`;\n        };\n    };\n\n    const addressConverter = customer => {\n        if(customer.shopAddress) {\n            const address = customer.shopAddress.address;\n            const city = customer.shopAddress.city;\n            const state = customer.shopAddress.state;\n            const zipcode = customer.shopAddress.zipcode;\n\n            let newAddress = ''\n            let newCity = '';\n    \n            if(address) {\n                newAddress = address.split(' ').join('+');\n            };\n            if(city) {\n                newCity = city.split(' ').join('+');\n            }\n    \n            const searchableAddress = `${newAddress},+${newCity},+${state}+${zipcode}`;\n            setMapsAddress(searchableAddress);\n        };\n    };\n\n    const crewConverter = members => {\n        let crewNames = [];\n\n        if(members) {\n            members.forEach(member => {\n                crewNames.push(`${member.firstName} ${member.lastName}`);\n            });\n\n            if(crewNames.length === 1) {\n                return crewNames;\n            } else {\n                return crewNames.join(', ');\n            };\n        };\n    };\n\n    const clockIn = () => {\n        const date = new Date();\n        const time = date.getTime();\n\n        setStartTime(time);\n    };\n\n    const clockOut = () => {\n        if(startTime === 0) {\n            alert('Please clock in first');\n        } else {\n            const date = new Date();\n            const time = date.getTime();\n    \n            setEndTime(time);\n        };\n    };\n\n    const jobTimeConverter = () => {\n        if(startTime && endTime) {\n          const totalTime = endTime - startTime;\n          \n          const seconds = Math.floor((totalTime / 1000) % 60);\n          const minutes = Math.floor((totalTime / (1000 * 60)) % 60);\n          const hours = Math.floor((totalTime / (1000 * 60 * 60)) % 24);\n          \n          const trueHours = hours < 10 ? \"0\" + hours : hours;\n          const trueMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n          const trueSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n          const timeAtJob = trueHours + ':' + trueMinutes + ':' + trueSeconds;\n\n          console.log(timeAtJob)\n          \n          setWorkOrder({\n              ...workOrder,\n              timeAtJob: timeAtJob\n          });\n          setHideClockIn(true);\n        };\n    };\n\n    const toggleServiceModal = () => {\n        setIsOpenServiceModal(!isOpenServiceModal);\n    };\n\n    const handleChangeService = e => {\n        setService({\n            ...service,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmitService = e => {\n        e.preventDefault();\n        const errors = {};\n\n        if(service.make.trim() === '') {\n            errors.make = 'Must not be empty';\n        };\n        if(service.type.trim() === '') {\n            errors.type = 'Must not be empty';\n        };\n        if(service.model.trim() === '') {\n            errors.model = 'Must not be empty';\n        };\n        if(service.serialNumber.trim() === '') {\n            errors.serialNumber = 'Must not be empty';\n        };\n        if(service.serviceDone.trim() === '') {\n            errors.serviceDone = 'Must not be empty';\n        };\n\n        if(Object.keys(errors).length !== 0) {\n            setServiceErrors(errors);\n        } else {\n            if(!workOrder.serviceDone) {\n                setWorkOrder({\n                    ...workOrder,\n                    serviceDone: [service]\n                });\n            } else {\n                setWorkOrder({\n                    ...workOrder,\n                    serviceDone: [...workOrder.serviceDone, service]\n                });\n            };\n\n            setService({\n                make: '',\n                type: '',\n                model: '',\n                serialNumber: '',\n                bayNumber: '',\n                serviceDone: '',\n                billableHours: null,\n                partsUsed: [],\n                partsNeeded: []\n            });\n\n            setIsOpenServiceModal(false);\n            setServiceErrors({});\n        };\n    };\n\n    const togglePartUsed = () => {\n        setIsOpenPartUsed(!isOpenPartUsed);\n    };\n\n    const togglePartNeeded = () => {\n        setIsOpenPartNeeded(!isOpenPartNeeded);\n    };\n\n    const handleChangePartUsed = e => {\n        setPartUsed({\n            ...partUsed,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmitPartUsed = e => {\n        e.preventDefault();\n        const errors = {};\n\n        if(partUsed.quantity.trim() === '') {\n            errors.quantity = 'Must not be empty';\n        };\n        if(partUsed.partDescription.trim() === '') {\n            errors.partDescription = 'Must not be empty';\n        };\n        if(partUsed.partNumber.trim() === '') {\n            errors.partNumber = 'Must not be empty';\n        };\n\n        if(Object.keys(errors).length !== 0) {\n            setPartUsedErrors(errors);\n        } else {\n            setService({\n                ...service,\n                partsUsed: [...service.partsUsed, partUsed]\n            });\n\n            setPartUsed({\n                quantity: '',\n                partDescription: '',\n                partNumber: '',\n                images: []\n            });\n\n            setIsOpenPartUsed(false);\n            setPartUsedErrors({});\n        };\n    };\n\n    const handleChangePartNeeded = e => {\n        setPartNeeded({\n            ...partNeeded,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmitPartNeeded = e => {\n        e.preventDefault();\n        const errors = {};\n\n        if(partNeeded.quantity.trim() === '') {\n            errors.quantity = 'Must not be empty';\n        };\n        if(partNeeded.partDescription.trim() === '') {\n            errors.partDescription = 'Must not be empty';\n        };\n        if(partNeeded.partNumber.trim() === '') {\n            errors.partNumber = 'Must not be empty';\n        };\n\n        if(Object.keys(errors).length !== 0) {\n            setPartNeededErrors(errors);\n        } else {\n            setService({\n                ...service,\n                partsNeeded: [...service.partsNeeded, partNeeded]\n            });\n\n            setPartNeeded({\n                quantity: '',\n                partDescription: '',\n                partNumber: '',\n                images: []\n            });\n\n            setIsOpenPartNeeded(false);\n            setPartNeededErrors({});\n        };\n    };\n\n    const handleSubmitForSignature = e => {\n        e.preventDefault();\n        setHideOfficeNotes(true);\n        setHideSignaturePad(false);\n        setHideSubmitForSignatureButton(true);\n        setHideSubmitForReviewButton(false);\n    };\n\n    const clearSignaturePad = e => {\n        sigPad.clear();\n    };\n\n    const handleSubmitForReview = e => {\n        e.preventDefault();\n        setWorkOrder({\n            ...workOrder,\n            signature: sigPad.getTrimmedCanvas().toDataURL('image/png')\n        });\n        setFlag(true);\n    };\n\n    return (\n        <div>\n            <EmployeeNavbar />\n            <div className=\"work-order-page\">\n                <EmployeeSidebar />\n                {workOrder ? <div className=\"work-order-page-content\">\n                    <h1>{`Work Order #${workOrder.workOrderId}`}</h1>\n                    <Form className=\"work-order-info\">\n                        <FormGroup>\n                            <Label for=\"customerName\">Customer Name</Label>\n                            <Input disabled value={customer.businessName} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"customerAddress\">Customer Address</Label>\n                            <a href={`http://maps.google.com/maps?q=${mapsAddress}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Input disabled value={`${customer.shopAddress ? customer.shopAddress.address : null}, ${customer.shopAddress ? customer.shopAddress.city : null}, ${customer.shopAddress ? customer.shopAddress.state : null} ${customer.shopAddress ? customer.shopAddress.zipcode : null}`} />\n                            </a>\n                        </FormGroup>        \n                        <FormGroup className=\"type-input\">\n                            <Label for=\"serviceType\">Service Type(s)</Label>\n                            <Input disabled value={typeConverter(workOrder.serviceType)} />\n                        </FormGroup>\n                        <div className=\"date-div\">\n                            <FormGroup>\n                                <Label for=\"serviceDate\">Service Date</Label>\n                                <Input disabled value={dateConverter(workOrder.serviceDate)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"serviceStartTime\">Service Start Time</Label>\n                                <Input disabled value={timeConverter(workOrder.serviceStartTime)} />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"crewMembers\">Crew Members</Label>\n                            <Input disabled value={crewConverter(employees)} />\n                        </FormGroup>\n                        <FormGroup className=\"description-input\">\n                            <Label for=\"serviceDescription\">Service Description</Label>\n                            <Input disabled type=\"textarea\" value={workOrder.serviceDescription} />\n                        </FormGroup>\n                        {hideClockIn ? \n                        <FormGroup>\n                            <Label for=\"timeOnJob\">Time At Job</Label>\n                            <Input disabled type=\"text\" value={workOrder.timeAtJob ? workOrder.timeAtJob : null} />\n                        </FormGroup>\n                        : null}\n                        <div className=\"button-div\">\n                            {!hideClockIn ? \n                            <div className=\"secondary-button-div\">\n                                <FormGroup>\n                                    {startTime === 0 ?\n                                    <Button color=\"primary\" onClick={clockIn}>Clock In</Button>\n                                    :\n                                    <Button disabled color=\"primary\">Clock In</Button>}\n                                </FormGroup>\n                                <FormGroup>\n                                    {endTime === 0 ?\n                                    <Button color=\"primary\" onClick={clockOut}>Clock Out</Button>\n                                    :\n                                    <Button disabled color=\"primary\">Clock Out</Button>}\n                                </FormGroup>\n                            </div> : null}\n                            {workOrder.serviceDone ? workOrder.serviceDone.length > 0 ?\n                            <div className=\"service-table\">\n                                <h5>Services</h5>\n                                <Table hover size=\"sm\">\n                                    <thead>\n                                        <th>Service Type</th>\n                                        <th>Service Description</th>\n                                        <th>Parts Needed</th>\n                                    </thead>\n                                    <tbody>\n                                    {workOrder.serviceDone.map(service => (\n                                        <tr>\n                                            <td scope=\"row\">{service.type}</td>\n                                            <td>{service.serviceDone}</td>\n                                            <td>{service.partsNeeded.length > 0 ? 'Y' : 'N'}</td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </Table>\n                            </div>\n                            : null : null}\n                            <FormGroup>\n                                <Button outline color=\"success\" onClick={toggleServiceModal}>Add Service</Button>\n                            </FormGroup>\n                            <div className=\"secondary-button-div\">\n                                <FormGroup>\n                                    <Button outline color=\"info\">Add Inspection</Button>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Button outline color=\"warning\" className=\"training-button\">Add Training</Button>\n                                </FormGroup>\n                            </div>\n                        </div>\n                        <div className=\"travel-div\">\n                            <FormGroup>\n                                <Label for=\"travelTime\">Travel Time (Roundtrip)</Label>\n                                <Input type=\"text\" name=\"travelTime\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"travelMileage\">Travel Mileage (Roundtrip)</Label>\n                                <Input type=\"text\" />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"notes\">Notes</Label>\n                            <Input type=\"textarea\" value={workOrder.notes ? workOrder.notes : null} />\n                        </FormGroup>\n                        {!workOrder.signature ? hideOfficeNotes ? null : <FormGroup>\n                            <Label for=\"officeNotes\">Office Notes (NOT FOR CUSTOMER)</Label>\n                            <Input type=\"textarea\" value={workOrder.officeNotes ? workOrder.officeNotes : null} />\n                        </FormGroup> : null}\n                        {!workOrder.signature ? hideSignaturePad ? null : <FormGroup>\n                            <div className=\"signature-pad-header\">\n                                <Label for=\"signature\">Signature</Label>\n                                <Button outline color=\"danger\" className=\"clear-button\" onClick={clearSignaturePad} ><i className=\"far fa-times\" /></Button>\n                            </div>\n                            {!success ? <SignatureCanvas canvasProps={{className: \"signature-pad\"}} ref={(ref) => { sigPad = ref }} />\n                            : <img src={workOrder.signature} alt=\"Signature\" />}\n                        </FormGroup> : null}\n                        {!workOrder.signature ? hideSubmitForSignatureButton ? null : <FormGroup className=\"submit-button\">\n                            <Button color=\"success\" onClick={handleSubmitForSignature}>Submit for Signature</Button>\n                        </FormGroup> : null}\n                        {!workOrder.signature ? hideSubmitForReviewButton ? null : <FormGroup className=\"submit-button\">\n                            <Button color=\"success\" onClick={handleSubmitForReview}>Submit for Review</Button>\n                        </FormGroup> : null}\n                        {!workOrder.signature ? waitingForReview ? <FormGroup className=\"submit-button\">\n                            <Button outline disabled color=\"danger\">Waiting for Review</Button>\n                        </FormGroup> : null : null}\n                        {workOrder.signature ? <FormGroup>\n                            <Label for=\"signature\">Signature</Label>\n                            <img src={workOrder.signature} alt=\"Signature\" className=\"signature-img\" />\n                        </FormGroup> : null}\n                        {workOrder.signature ? <FormGroup className=\"submit-button\">\n                            <Button outline disabled color=\"danger\">Waiting for Review</Button>\n                        </FormGroup> : null}\n                    </Form>\n                </div> : null}\n                <Modal isOpen={isOpenServiceModal} toggle={toggleServiceModal}>\n                    <ModalHeader toggle={toggleServiceModal}>Add Service</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleSubmitService}>\n                            <div className=\"equipment-div\">\n                                <FormGroup>\n                                    <Label for=\"make\">Make</Label>\n                                    <Input type=\"text\" name=\"make\" onChange={handleChangeService} invalid={serviceErrors.make ? true : false} />\n                                    <FormFeedback>{serviceErrors.make}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"type\">Type</Label>\n                                    <Input type=\"text\" name=\"type\" onChange={handleChangeService} invalid={serviceErrors.type ? true : false} />\n                                    <FormFeedback>{serviceErrors.type}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <div className=\"equipment-div\">\n                                <FormGroup>\n                                    <Label for=\"model\">Model</Label>\n                                    <Input type=\"text\" name=\"model\" onChange={handleChangeService} invalid={serviceErrors.model ? true : false} />\n                                    <FormFeedback>{serviceErrors.model}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"serialNumber\">Serial Number</Label>\n                                    <Input type=\"text\" name=\"serialNumber\" onChange={handleChangeService} invalid={serviceErrors.serialNumber ? true : false} />\n                                    <FormFeedback>{serviceErrors.serialNumber}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"bayNumber\">Bay Number</Label>\n                                <Input type=\"text\" name=\"bayNumber\" onChange={handleChangeService} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"serviceDone\">What work was done?</Label>\n                                <Input type=\"textarea\" name=\"serviceDone\" onChange={handleChangeService} invalid={serviceErrors.serviceDone ? true : false} />\n                                <FormFeedback>{serviceErrors.serviceDone}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"billableHours\">Billable Hours</Label>\n                                <Select options={hoursOptions} defaultValue={serviceManagers[0]} name=\"serviceManager\" onChange={handleSelectChange} className={errors.serviceManager ? 'invalid' : ''} />\n                                <Input type=\"hidden\" disabled invalid={errors.serviceManager ? true : false} />\n                                <FormFeedback>{errors.serviceManager}</FormFeedback>\n                            </FormGroup>\n                            {service.partsUsed.length > 0 ? \n                            <div className=\"part-div\">\n                                <h5>Parts Used</h5>\n                                <Table hover size=\"sm\" className=\"part-table\">\n                                    <thead>\n                                        <th>Quantity</th>\n                                        <th>Description</th>\n                                        <th>Part Number</th>\n                                        <th>Images</th>\n                                    </thead>\n                                    <tbody>\n                                    {service.partsUsed.map(part => (\n                                        <tr>\n                                            <td scope=\"row\">{part.quantity}</td>\n                                            <td>{part.partDescription}</td>\n                                            <td>{part.partNumber}</td>\n                                            <td>{part.images}</td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </Table>\n                            </div>\n                            : null}\n                            {service.partsNeeded.length > 0 ? \n                            <div className=\"part-div\">\n                                <h5>Parts Needed</h5>\n                                <Table hover size=\"sm\" className=\"part-table\">\n                                    <thead>\n                                        <th>Quantity</th>\n                                        <th>Description</th>\n                                        <th>Part Number</th>\n                                        <th>Images</th>\n                                    </thead>\n                                    <tbody>\n                                    {service.partsNeeded.map(part => (\n                                        <tr>\n                                            <td scope=\"row\">{part.quantity}</td>\n                                            <td>{part.partDescription}</td>\n                                            <td>{part.partNumber}</td>\n                                            <td>{part.images}</td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </Table>\n                            </div>\n                            : null}\n                            <FormGroup className=\"parts-group\">\n                                <Button outline color=\"success\" onClick={togglePartUsed}>Add Part Used</Button>\n                                <Button outline color=\"danger\" onClick={togglePartNeeded}>Add Part Needed</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleSubmitService}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={isOpenPartUsed} toggle={togglePartUsed}>\n                    <ModalHeader toggle={togglePartUsed}>Add Part Used</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleSubmitPartUsed}>\n                            <FormGroup>\n                                <Label>Quantity</Label>\n                                <Input type=\"text\" name=\"quantity\" onChange={handleChangePartUsed} invalid={partUsedErrors.quantity ? true : false} />\n                                <FormFeedback>{partUsedErrors.quantity}</FormFeedback>                              \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Description</Label>\n                                <Input type=\"text\" name=\"partDescription\" onChange={handleChangePartUsed} invalid={partUsedErrors.partDescription ? true : false} />\n                                <FormFeedback>{partUsedErrors.partDescription}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Number</Label>\n                                <Input type=\"text\" name=\"partNumber\" onChange={handleChangePartUsed} invalid={partUsedErrors.partNumber ? true : false} />\n                                <FormFeedback>{partUsedErrors.partNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Picture(s)</Label>\n                                <Input multiple type=\"file\" name=\"images\" onChange={handleChangePartUsed} />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleSubmitPartUsed}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={isOpenPartNeeded} toggle={togglePartNeeded}>\n                    <ModalHeader toggle={togglePartNeeded}>Add Part Needed</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleSubmitPartNeeded}>\n                            <FormGroup>\n                                <Label>Quantity</Label>\n                                <Input type=\"text\" name=\"quantity\" onChange={handleChangePartNeeded} invalid={partNeededErrors.quantity ? true : false} />\n                                <FormFeedback>{partNeededErrors.quantity}</FormFeedback>                               \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Description</Label>\n                                <Input type=\"text\" name=\"partDescription\" onChange={handleChangePartNeeded} invalid={partNeededErrors.partDescription ? true : false} />\n                                <FormFeedback>{partNeededErrors.partDescription}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Number</Label>\n                                <Input type=\"text\" name=\"partNumber\" onChange={handleChangePartNeeded} invalid={partNeededErrors.partNumber ? true : false} />\n                                <FormFeedback>{partNeededErrors.partNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Picture(s)</Label>\n                                <Input multiple type=\"file\" name=\"images\" onChange={handleChangePartNeeded} />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleSubmitPartNeeded}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default WorkOrderPage;"]},"metadata":{},"sourceType":"module"}