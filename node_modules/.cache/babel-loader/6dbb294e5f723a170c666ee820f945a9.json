{"ast":null,"code":"import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\nexport const EDIT_TASK_START = \"EDIT_TASK_START\";\nexport const EDIT_TASK_SUCCESS = \"EDIT_TASK_SUCCESS\";\nexport const EDIT_TASK_FAILURE = \"EDIT_TASK_FAILURE\";\nexport const editTask = data => async dispatch => {\n  dispatch({\n    type: EDIT_TASK_START\n  });\n  console.log(data);\n  const axiosAuth = await axiosWithAuth();\n  return axiosAuth.put(`${dbUrl}/task`, data).then(() => {\n    dispatch({\n      type: EDIT_TASK_SUCCESS,\n      payload: \"SUCCESS\"\n    });\n  }).catch(err => {\n    dispatch({\n      type: EDIT_TASK_FAILURE,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts/src/actions/editTask.js"],"names":["axiosWithAuth","dbUrl","EDIT_TASK_START","EDIT_TASK_SUCCESS","EDIT_TASK_FAILURE","editTask","data","dispatch","type","console","log","axiosAuth","put","then","payload","catch","err","response"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,QAAMK,SAAS,GAAG,MAAMX,aAAa,EAArC;AAEA,SAAOW,SAAS,CACbC,GADI,CACC,GAAEX,KAAM,OADT,EACiBK,IADjB,EAEJO,IAFI,CAEC,MAAM;AACVN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,iBADC;AAEPW,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPI,EAQJC,KARI,CAQGC,GAAD,IAAS;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,iBADC;AAEPU,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaX;AAFf,KAAD,CAAR;AAID,GAbI,CAAP;AAcD,CArBM","sourcesContent":["import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const EDIT_TASK_START = \"EDIT_TASK_START\";\nexport const EDIT_TASK_SUCCESS = \"EDIT_TASK_SUCCESS\";\nexport const EDIT_TASK_FAILURE = \"EDIT_TASK_FAILURE\";\n\nexport const editTask = (data) => async (dispatch) => {\n  dispatch({ type: EDIT_TASK_START });\n\n  console.log(data)\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .put(`${dbUrl}/task`, data)\n    .then(() => {\n      dispatch({\n        type: EDIT_TASK_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: EDIT_TASK_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};"]},"metadata":{},"sourceType":"module"}