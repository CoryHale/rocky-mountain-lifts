{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/customer-page-components/NoteTab.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { Card, Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { addNote } from \"../../actions/addNote\";\nimport { getCustomerNotes } from \"../../actions/getCustomerNotes\";\n\nconst NoteTab = () => {\n  const [notes, setNotes] = useState([]);\n  const getNotesFromState = useSelector(state => state.getCustomerNotesReducer.notes);\n  const [isOpen, setIsOpen] = useState(false);\n  const [note, setNote] = useState({\n    note: \"\",\n    createdBy: \"\",\n    createdOnDate: \"\",\n    createdAtTime: \"\"\n  });\n  const success = useSelector(state => state.addNoteReducer.success);\n  const {\n    currentUser\n  } = useAuth();\n  const [flag, setFlag] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomerNotes(customerId));\n  }, []);\n  useEffect(() => {\n    if (getNotesFromState) {\n      setNotes(getNotesFromState);\n    }\n  }, [getNotesFromState]);\n  useEffect(() => {\n    if (flag) {\n      dispatch(addNote(note));\n    }\n  }, [flag]);\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n\n    ;\n  }, [success]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setNote({\n        note: \"\",\n        createdOnDate: \"\",\n        createdAtTime: \"\",\n        createdBy: \"\"\n      });\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  console.log(notes); // const employeeFinder = employeeId => {\n  //     employees.forEach(employee => {\n  //         if(employee.value === employeeId) {\n  //             return employee.label;\n  //         };\n  //     });\n  // };\n\n  const handleChange = e => {\n    setNote({ ...note,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setNote({ ...note,\n      createdOnDate: new Date().toLocaleDateString(),\n      createdAtTime: new Date().toLocaleTimeString(),\n      createdBy: currentUser.uid\n    });\n    setFlag(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-note-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, notes ? notes.notes ? notes.notes.map(note => /*#__PURE__*/React.createElement(Card, {\n    className: \"note-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, note.note), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, \"Created By:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, note => {\n    // Make sure note shows name of creator\n    const name = note.createdBy;\n    console.log(name);\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, \"Created At: \", note.createdAt), \" \"))) : null : null, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Add Note\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Add Note\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Note\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"note\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default NoteTab;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/customer-page-components/NoteTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useLocation","Card","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","useAuth","addNote","getCustomerNotes","NoteTab","notes","setNotes","getNotesFromState","state","getCustomerNotesReducer","isOpen","setIsOpen","note","setNote","createdBy","createdOnDate","createdAtTime","success","addNoteReducer","currentUser","flag","setFlag","dispatch","location","pathArray","pathname","split","customerId","length","toggle","console","log","handleChange","e","target","name","value","handleSubmit","preventDefault","Date","toLocaleDateString","toLocaleTimeString","uid","map","createdAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,IAPF,EAQEC,SARF,EASEC,KATF,EAUEC,KAVF,QAWO,YAXP;AAYA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMqB,iBAAiB,GAAGlB,WAAW,CAClCmB,KAAD,IAAWA,KAAK,CAACC,uBAAN,CAA8BJ,KADN,CAArC;AAGA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC;AAC/B0B,IAAAA,IAAI,EAAE,EADyB;AAE/BE,IAAAA,SAAS,EAAE,EAFoB;AAG/BC,IAAAA,aAAa,EAAE,EAHgB;AAI/BC,IAAAA,aAAa,EAAE;AAJgB,GAAD,CAAhC;AAMA,QAAMC,OAAO,GAAG5B,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACU,cAAN,CAAqBD,OAA/B,CAA3B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAkBlB,OAAO,EAA/B;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBnC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMoC,QAAQ,GAAGlC,WAAW,EAA5B;AACA,QAAMmC,QAAQ,GAAGjC,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqC,SAAS,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAlB;AACA,UAAMC,UAAU,GAAGH,SAAS,CAACA,SAAS,CAACI,MAAV,GAAmB,CAApB,CAA5B;AACAN,IAAAA,QAAQ,CAACnB,gBAAgB,CAACwB,UAAD,CAAjB,CAAR;AACD,GAJQ,EAIN,EAJM,CAAT;AAMAxC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,iBAAJ,EAAuB;AACrBD,MAAAA,QAAQ,CAACC,iBAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,iBAAD,CAJM,CAAT;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGiC,IAAH,EAAS;AACPE,MAAAA,QAAQ,CAACpB,OAAO,CAACU,IAAD,CAAR,CAAR;AACD;AACF,GAJQ,EAIN,CAACQ,IAAD,CAJM,CAAT;AAMAjC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG8B,OAAH,EAAY;AACVY,MAAAA,MAAM;AACP;;AAAA;AACF,GAJQ,EAIN,CAACZ,OAAD,CAJM,CAAT;;AAMA,QAAMY,MAAM,GAAG,MAAM;AACnB,QAAInB,MAAJ,EAAY;AACVG,MAAAA,OAAO,CAAC;AACND,QAAAA,IAAI,EAAE,EADA;AAENG,QAAAA,aAAa,EAAE,EAFT;AAGNC,QAAAA,aAAa,EAAE,EAHT;AAINF,QAAAA,SAAS,EAAE;AAJL,OAAD,CAAP;AAMD;;AACDH,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAVD;;AAYAoB,EAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAZ,EAtDoB,CAwDpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM2B,YAAY,GAAIC,CAAD,IAAO;AAC1BpB,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACqB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFpB,KAAD,CAAP;AAID,GALD;;AAOA,QAAMC,YAAY,GAAIJ,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AACAzB,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENG,MAAAA,aAAa,EAAE,IAAIwB,IAAJ,GAAWC,kBAAX,EAFT;AAGNxB,MAAAA,aAAa,EAAE,IAAIuB,IAAJ,GAAWE,kBAAX,EAHT;AAIN3B,MAAAA,SAAS,EAAEK,WAAW,CAACuB;AAJjB,KAAD,CAAP;AAMArB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,GACFA,KAAK,CAACA,KAAN,GACEA,KAAK,CAACA,KAAN,CAAYsC,GAAZ,CAAiB/B,IAAD,iBACd,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACA,IAAT,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACc,GADd,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,IAAD,IAAU;AACT;AACA,UAAMuB,IAAI,GAAGvB,IAAI,CAACE,SAAlB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACD,GALH,CAFF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBvB,IAAI,CAACgC,SAArB,CAXF,MAFF,CADF,CADF,GAmBE,IApBA,GAqBF,IAtBN,eAuBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAEf,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF,eA0BE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEnB,MAAf;AAAuB,IAAA,MAAM,EAAEmB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,QAAQ,EAAEL,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CAFF,eAUE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEK,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAVF,CA1BF,CADF;AA6CD,CA/HD;;AAiIA,eAAejC,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Card,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { addNote } from \"../../actions/addNote\";\nimport { getCustomerNotes } from \"../../actions/getCustomerNotes\";\n\nconst NoteTab = () => {\n  const [notes, setNotes] = useState([]);\n  const getNotesFromState = useSelector(\n    (state) => state.getCustomerNotesReducer.notes\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [note, setNote] = useState({\n    note: \"\",\n    createdBy: \"\",\n    createdOnDate: \"\",\n    createdAtTime: \"\"\n  });\n  const success = useSelector(state => state.addNoteReducer.success);\n  const { currentUser } = useAuth();\n  const [flag, setFlag] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomerNotes(customerId));\n  }, []);\n\n  useEffect(() => {\n    if (getNotesFromState) {\n      setNotes(getNotesFromState);\n    }\n  }, [getNotesFromState]);\n\n  useEffect(() => {\n    if(flag) {\n      dispatch(addNote(note));\n    }\n  }, [flag]);\n\n  useEffect(() => {\n    if(success) {\n      toggle()\n    };\n  }, [success]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setNote({\n        note: \"\",\n        createdOnDate: \"\",\n        createdAtTime: \"\",\n        createdBy: \"\",\n      });\n    }\n    setIsOpen(!isOpen);\n  };\n\n  console.log(notes)\n\n  // const employeeFinder = employeeId => {\n  //     employees.forEach(employee => {\n  //         if(employee.value === employeeId) {\n  //             return employee.label;\n  //         };\n  //     });\n  // };\n\n  const handleChange = (e) => {\n    setNote({\n      ...note,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setNote({\n      ...note,\n      createdOnDate: new Date().toLocaleDateString(),\n      createdAtTime: new Date().toLocaleTimeString(),\n      createdBy: currentUser.uid\n    })\n    setFlag(true);\n  };\n\n  return (\n    <div className=\"customer-page-note-tab\">\n      {notes\n        ? notes.notes\n          ? notes.notes.map((note) => (\n              <Card className=\"note-card\">\n                <p>{note.note}</p>\n                <div>\n                  <p>\n                    Created By:{\" \"}\n                    <span>\n                      {(note) => {\n                        // Make sure note shows name of creator\n                        const name = note.createdBy;\n                        console.log(name);\n                      }}\n                    </span>\n                  </p>\n                  <p>Created At: {note.createdAt}</p> {/* Fix time format */}\n                </div>\n              </Card>\n            ))\n          : null\n        : null}\n      <Button outline color=\"success\" onClick={toggle}>\n        Add Note\n      </Button>\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Note</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"note\">Note</Label>\n              <Input type=\"textarea\" name=\"note\" onChange={handleChange} />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NoteTab;\n"]},"metadata":{},"sourceType":"module"}