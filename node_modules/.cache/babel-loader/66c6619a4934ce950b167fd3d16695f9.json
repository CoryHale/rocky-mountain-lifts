{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddTaskBtn.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport { addTask } from '../../actions/addTask';\nimport { getUsers } from '../../actions/getUsers';\nimport '../../styles/sidebar.scss';\n\nconst AddTaskBtn = () => {\n  const [task, setTask] = useState({\n    taskDescription: '',\n    taskDate: '',\n    taskTime: '',\n    employeeId: ''\n  });\n  const [hidden, setHidden] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const employeeArray = [];\n  const [employees, setEmployees] = useState([]);\n  const getEmployees = useSelector(state => state.getUsersReducer.users);\n  const [errors, setErrors] = useState({});\n  const getErrors = useSelector(state => state.addTaskReducer.errors);\n  const success = useSelector(state => state.addTaskReducer.success);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n  useEffect(() => {\n    changeHidden(location);\n  }, [location]);\n  useEffect(() => {\n    if (getEmployees.users) {\n      getEmployees.users.map(user => {\n        if (user.userType === 'employee' && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: 'employeeId',\n            jobTitle: user.jobTitle\n          });\n        }\n\n        ;\n      });\n      setEmployees(employeeArray);\n    }\n\n    ;\n  }, [getEmployees]);\n  useEffect(() => {\n    if (getErrors) {\n      setErrors(getErrors);\n    }\n\n    ;\n  }, [getErrors]);\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n\n    ;\n  }, [success]);\n\n  const changeHidden = location => {\n    if (location.pathname === '/e_dashboard' || location.pathname === '/e_dashboard/') {\n      setHidden(true);\n    } else {\n      setHidden(false);\n    }\n\n    ;\n  };\n\n  const toggle = () => {\n    if (isOpen) {\n      setTask({\n        taskDescription: '',\n        taskDate: '',\n        taskTime: '',\n        employeeId: ''\n      });\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = e => {\n    setTask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = e => {\n    setTask({ ...task,\n      [e.name]: e.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addTask(task));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, hidden ? /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  }, \"Add Task\") : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"taskDescription\",\n    onChange: handleChange,\n    invalid: errors.taskDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, errors.taskDescription)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    placeholder: \"date placeholder\",\n    name: \"taskDate\",\n    onChange: handleChange,\n    invalid: errors.taskDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, errors.taskDate)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    placeholder: \"time placeholder\",\n    name: \"taskTime\",\n    onChange: handleChange,\n    invalid: errors.taskTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, errors.taskTime))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(Select, {\n    options: employees,\n    onChange: handleSelectChange,\n    className: errors.employeeId ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.employeeId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, errors.employeeId)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default AddTaskBtn;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddTaskBtn.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","Select","useLocation","addTask","getUsers","AddTaskBtn","task","setTask","taskDescription","taskDate","taskTime","employeeId","hidden","setHidden","isOpen","setIsOpen","employeeArray","employees","setEmployees","getEmployees","state","getUsersReducer","users","errors","setErrors","getErrors","addTaskReducer","success","location","dispatch","changeHidden","map","user","userType","active","push","label","firstName","lastName","value","userId","name","jobTitle","toggle","pathname","handleChange","e","target","handleSelectChange","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport { addTask } from '../../actions/addTask';\nimport { getUsers } from '../../actions/getUsers';\n\nimport '../../styles/sidebar.scss';\n\nconst AddTaskBtn = () => {\n    const [task, setTask] = useState({\n        taskDescription: '',\n        taskDate: '',\n        taskTime: '',\n        employeeId: ''\n    });\n    \n    const [hidden, setHidden] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const employeeArray = [];\n    const [employees, setEmployees] = useState([]);\n    const getEmployees = useSelector(state => state.getUsersReducer.users);\n    const [errors, setErrors] = useState({});\n    const getErrors = useSelector(state => state.addTaskReducer.errors);\n    const success = useSelector(state => state.addTaskReducer.success);\n    const location = useLocation();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getUsers());\n    }, []);\n\n    useEffect(() => {\n        changeHidden(location);\n    }, [location]);\n\n    useEffect(() => {\n        if(getEmployees.users) {\n            getEmployees.users.map(user => {\n                if(user.userType === 'employee' && user.active === true) {\n                    employeeArray.push({\n                        label: `${user.firstName} ${user.lastName}`,\n                        value: user.userId,\n                        name: 'employeeId',\n                        jobTitle: user.jobTitle\n                    });\n                };\n            });\n\n            setEmployees(employeeArray);\n        };\n    }, [getEmployees]);\n\n    useEffect(() => {\n        if(getErrors) {\n            setErrors(getErrors);\n        };\n    }, [getErrors]);\n\n    useEffect(() => {\n        if(success) {\n            toggle()\n        };\n    }, [success]);\n    \n    const changeHidden = location => {\n        if(location.pathname === '/e_dashboard' || location.pathname === '/e_dashboard/') {\n            setHidden(true);\n        } else {\n            setHidden(false);\n        };\n    };\n\n    const toggle = () => {\n        if(isOpen) {\n            setTask({\n                taskDescription: '',\n                taskDate: '',\n                taskTime: '',\n                employeeId: ''\n            });\n        }\n        setIsOpen(!isOpen);\n    };\n\n    const handleChange = e => {\n        setTask({\n            ...task,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSelectChange = e => {\n        setTask({\n            ...task,\n            [e.name]: e.value\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(addTask(task));\n    };\n\n    return (\n        <div className=\"add-task-div\">\n            {hidden ? <Button color=\"success\" onClick={toggle}>Add Task</Button> : null}\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Add Task</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <Label>Task</Label>\n                            <Input type=\"textarea\" name=\"taskDescription\" onChange={handleChange} invalid={errors.taskDescription ? true : false} />\n                            <FormFeedback>{errors.taskDescription}</FormFeedback>\n                        </FormGroup>\n                        <div>\n                            <FormGroup>\n                                <Label>Date</Label>\n                                <Input type=\"date\" placeholder=\"date placeholder\" name=\"taskDate\" onChange={handleChange} invalid={errors.taskDate ? true : false} />\n                                <FormFeedback>{errors.taskDate}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Time</Label>\n                                <Input type=\"time\" placeholder=\"time placeholder\" name=\"taskTime\" onChange={handleChange} invalid={errors.taskTime ? true : false} />\n                                <FormFeedback>{errors.taskTime}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label>Assigned To</Label>\n                            <Select options={employees} onChange={handleSelectChange} className={errors.employeeId ? 'invalid' : ''} />\n                            <Input type=\"hidden\" disabled invalid={errors.employeeId ? true : false} />\n                            <FormFeedback>{errors.employeeId}</FormFeedback>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" onClick={handleSubmit}>Submit</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddTaskBtn;"]},"metadata":{},"sourceType":"module"}