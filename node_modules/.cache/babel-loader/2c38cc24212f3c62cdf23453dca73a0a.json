{"ast":null,"code":"import _regeneratorRuntime from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axiosWithAuth from\"../contexts/withAuth\";import{dbUrl}from\"./index\";export var EDIT_WORK_ORDER_START=\"EDIT_WORK_ORDER_START\";export var EDIT_WORK_ORDER_SUCCESS=\"EDIT_WORK_ORDER_SUCCESS\";export var EDIT_WORK_ORDER_FAILURE=\"EDIT_WORK_ORDER_FAILURE\";export var editWorkOrder=function editWorkOrder(data){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var axiosAuth;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:EDIT_WORK_ORDER_START});_context.next=3;return axiosWithAuth();case 3:axiosAuth=_context.sent;return _context.abrupt(\"return\",axiosAuth.put(\"\".concat(dbUrl,\"/work_order\"),data).then(function(){dispatch({type:EDIT_WORK_ORDER_SUCCESS,payload:\"SUCCESS\"});}).catch(function(err){dispatch({type:EDIT_WORK_ORDER_FAILURE,payload:err.response.data});}));case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/actions/editWorkOrder.js"],"names":["axiosWithAuth","dbUrl","EDIT_WORK_ORDER_START","EDIT_WORK_ORDER_SUCCESS","EDIT_WORK_ORDER_FAILURE","editWorkOrder","data","dispatch","type","axiosAuth","put","then","payload","catch","err","response"],"mappings":"2XAAA,MAAOA,CAAAA,aAAP,KAA0B,sBAA1B,CACA,OAASC,KAAT,KAAsB,SAAtB,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,uBAA9B,CACP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,yBAAhC,CACP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,yBAAhC,CAEP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,iGAAU,iBAAOC,QAAP,gIACrCA,QAAQ,CAAC,CAAEC,IAAI,CAAEN,qBAAR,CAAD,CAAR,CADqC,sBAGbF,CAAAA,aAAa,EAHA,QAG/BS,SAH+B,+CAK9BA,SAAS,CACbC,GADI,WACGT,KADH,gBACuBK,IADvB,EAEJK,IAFI,CAEC,UAAM,CACVJ,QAAQ,CAAC,CACPC,IAAI,CAAEL,uBADC,CAEPS,OAAO,CAAE,SAFF,CAAD,CAAR,CAID,CAPI,EAQJC,KARI,CAQE,SAACC,GAAD,CAAS,CACdP,QAAQ,CAAC,CACPC,IAAI,CAAEJ,uBADC,CAEPQ,OAAO,CAAEE,GAAG,CAACC,QAAJ,CAAaT,IAFf,CAAD,CAAR,CAID,CAbI,CAL8B,wDAAV,gEAAtB","sourcesContent":["import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const EDIT_WORK_ORDER_START = \"EDIT_WORK_ORDER_START\";\nexport const EDIT_WORK_ORDER_SUCCESS = \"EDIT_WORK_ORDER_SUCCESS\";\nexport const EDIT_WORK_ORDER_FAILURE = \"EDIT_WORK_ORDER_FAILURE\";\n\nexport const editWorkOrder = (data) => async (dispatch) => {\n  dispatch({ type: EDIT_WORK_ORDER_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .put(`${dbUrl}/work_order`, data)\n    .then(() => {\n      dispatch({\n        type: EDIT_WORK_ORDER_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: EDIT_WORK_ORDER_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};"]},"metadata":{},"sourceType":"module"}