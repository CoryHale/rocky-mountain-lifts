{"ast":null,"code":"import _regeneratorRuntime from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axiosWithAuth from\"../contexts/withAuth\";import{dbUrl}from\"./index\";export var EDIT_EMPLOYEE_START=\"EDIT_EMPLOYEE_START\";export var EDIT_EMPLOYEE_SUCCESS=\"EDIT_EMPLOYEE_SUCCESS\";export var EDIT_EMPLOYEE_FAILURE=\"EDIT_EMPLOYEE_FAILURE\";export var editEmployee=function editEmployee(data){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:EDIT_EMPLOYEE_START});_context.next=3;return axiosWithAuth().put(\"\".concat(dbUrl,\"/employee\"),data).then(function(){dispatch({type:EDIT_EMPLOYEE_SUCCESS,payload:\"SUCCESS\"});}).catch(function(err){dispatch({type:EDIT_EMPLOYEE_FAILURE,payload:err.response.data});});case 3:return _context.abrupt(\"return\",_context.sent);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/actions/editEmployee.js"],"names":["axiosWithAuth","dbUrl","EDIT_EMPLOYEE_START","EDIT_EMPLOYEE_SUCCESS","EDIT_EMPLOYEE_FAILURE","editEmployee","data","dispatch","type","put","then","payload","catch","err","response"],"mappings":"2XAAA,MAAOA,CAAAA,aAAP,KAA0B,sBAA1B,CACA,OAASC,KAAT,KAAsB,SAAtB,CAEA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CACP,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,uBAA9B,CACP,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,uBAA9B,CAEP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,iGAAU,iBAAOC,QAAP,kHACpCA,QAAQ,CAAC,CAAEC,IAAI,CAAEN,mBAAR,CAAD,CAAR,CADoC,sBAGvBF,CAAAA,aAAa,GACvBS,GADU,WACHR,KADG,cACeK,IADf,EAEVI,IAFU,CAEL,UAAM,CACVH,QAAQ,CAAC,CACPC,IAAI,CAAEL,qBADC,CAEPQ,OAAO,CAAE,SAFF,CAAD,CAAR,CAID,CAPU,EAQVC,KARU,CAQJ,SAACC,GAAD,CAAS,CACdN,QAAQ,CAAC,CACPC,IAAI,CAAEJ,qBADC,CAEPO,OAAO,CAAEE,GAAG,CAACC,QAAJ,CAAaR,IAFf,CAAD,CAAR,CAID,CAbU,CAHuB,6GAAV,gEAArB","sourcesContent":["import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const EDIT_EMPLOYEE_START = \"EDIT_EMPLOYEE_START\";\nexport const EDIT_EMPLOYEE_SUCCESS = \"EDIT_EMPLOYEE_SUCCESS\";\nexport const EDIT_EMPLOYEE_FAILURE = \"EDIT_EMPLOYEE_FAILURE\";\n\nexport const editEmployee = (data) => async (dispatch) => {\n  dispatch({ type: EDIT_EMPLOYEE_START });\n\n  return await axiosWithAuth()\n    .put(`${dbUrl}/employee`, data)\n    .then(() => {\n      dispatch({\n        type: EDIT_EMPLOYEE_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: EDIT_EMPLOYEE_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}