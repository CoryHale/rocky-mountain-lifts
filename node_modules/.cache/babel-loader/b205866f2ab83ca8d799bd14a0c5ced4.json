{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/WorkOrderPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getWorkOrder } from '../../actions/getWorkOrder';\nimport '../../styles/employee-dashboard.scss';\n\nconst WorkOrderPage = () => {\n  const [workOrder, setWorkOrder] = useState({});\n  const [customer, setCustomer] = useState({});\n  const [mapsAddress, setMapsAddress] = useState('');\n  const [employees, setEmployees] = useState([]);\n  const getWorkOrderFromState = useSelector(state => state.getWorkOrderReducer.workOrder);\n  const getUsers = useSelector(state => state.getWorkOrderReducer.users);\n  const [isOpenServiceModal, setIsOpenServiceModal] = useState(false);\n  const [isOpenPartUsed, setIsOpenPartUsed] = useState(false);\n  const [isOpenPartNeeded, setIsOpenPartNeeded] = useState(false);\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n  const [hideClockIn, setHideClockIn] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split('/');\n    const jobId = pathArray[pathArray.length - 1];\n    dispatch(getWorkOrder(jobId));\n  }, []);\n  useEffect(() => {\n    if (getWorkOrder) {\n      setWorkOrder(getWorkOrderFromState);\n    }\n\n    ;\n  }, [getWorkOrderFromState]);\n  useEffect(() => {\n    let crewMembers = [];\n\n    if (getUsers) {\n      getUsers.forEach(user => {\n        if (user.userType === 'customer') {\n          setCustomer(user);\n        } else {\n          crewMembers.push(user);\n        }\n\n        ;\n      });\n      setEmployees(crewMembers);\n    }\n  }, [getUsers]);\n  useEffect(() => {\n    if (customer) {\n      addressConverter(customer);\n    }\n\n    ;\n  }, [customer]);\n\n  const typeConverter = types => {\n    if (types) {\n      if (types.length === 1) {\n        return types;\n      } else {\n        return types.join(', ');\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const dateConverter = date => {\n    if (date) {\n      const dateArray = date.split('-');\n      return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    }\n\n    ;\n  };\n\n  const timeConverter = time => {\n    if (time) {\n      const timeArray = time.split(':');\n      const hour = parseInt(timeArray[0]);\n      let m;\n\n      if (hour <= 11) {\n        m = 'AM';\n      } else {\n        m = 'PM';\n      }\n\n      ;\n\n      if (hour <= 12) {\n        const newHour = hour.toString();\n        timeArray[0] = newHour;\n      } else {\n        const newHour = (hour - 12).toString();\n        timeArray[0] = newHour;\n      }\n\n      ;\n      return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    }\n\n    ;\n  };\n\n  const addressConverter = customer => {\n    const address = customer.address;\n    const city = customer.city;\n    const state = customer.state;\n    const zipcode = customer.zipcode;\n    let newAddress = '';\n    let newCity = '';\n\n    if (address) {\n      newAddress = address.split(' ').join('+');\n    }\n\n    ;\n\n    if (city) {\n      newCity = city.split(' ').join('+');\n    }\n\n    const searchableAddress = `${newAddress},+${newCity},+${state}+${zipcode}`;\n    setMapsAddress(searchableAddress);\n  };\n\n  const crewConverter = members => {\n    let crewNames = [];\n\n    if (members) {\n      members.forEach(member => {\n        crewNames.push(`${member.firstName} ${member.lastName}`);\n      });\n\n      if (crewNames.length === 1) {\n        return crewNames;\n      } else {\n        return crewNames.join(', ');\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const clockIn = () => {\n    const date = new Date();\n    const time = date.getTime();\n    setStartTime(time);\n  };\n\n  const clockOut = () => {\n    if (clockIn == 0) {\n      alert('Please clock in first');\n    } else {\n      const date = new Date();\n      const time = date.getTime();\n      setEndTime(time);\n      jobTimeConverter();\n    }\n\n    ;\n  };\n\n  const jobTimeConverter = () => {\n    if (startTime && endTime) {\n      const totalTime = endTime - startTime;\n      const seconds = Math.floor(totalTime / 1000 % 60);\n      const minutes = Math.floor(totalTime / (1000 * 60) % 60);\n      const hours = Math.floor(totalTime / (1000 * 60 * 60) % 24);\n      const trueHours = hours < 10 ? \"0\" + hours : hours;\n      const trueMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n      const trueSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n      const timeAtJob = trueHours + ':' + trueMinutes + ':' + trueSeconds;\n      console.log(timeAtJob);\n      setWorkOrder({ ...workOrder,\n        timeAtJob: timeAtJob\n      });\n      setHideClockIn(true);\n    }\n\n    ;\n  };\n\n  const toggleServiceModal = () => {\n    setIsOpenServiceModal(!isOpenServiceModal);\n  };\n\n  const togglePartUsed = () => {\n    setIsOpenPartUsed(!isOpenPartUsed);\n  };\n\n  const togglePartNeeded = () => {\n    setIsOpenPartNeeded(!isOpenPartNeeded);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-order-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }), workOrder ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-order-page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, `Work Order #${workOrder.jobNumber}`), /*#__PURE__*/React.createElement(Form, {\n    className: \"work-order-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, \"Customer Name\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: `${customer.firstName} ${customer.lastName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customerAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, \"Customer Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://maps.google.com/maps?q=${mapsAddress}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: `${customer.address}, ${customer.city}, ${customer.state} ${customer.zipcode}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"type-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, \"Service Type(s)\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: typeConverter(workOrder.serviceType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, \"Service Date\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: dateConverter(workOrder.serviceDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, \"Service Time\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: timeConverter(workOrder.serviceTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"crewMembers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 29\n    }\n  }, \"Crew Members\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: crewConverter(employees),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"description-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    type: \"textarea\",\n    value: workOrder.serviceDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 29\n    }\n  })), hideClockIn ? /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"timeOnJob\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, \"Time At Job\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    type: \"text\",\n    value: workOrder.timeAtJob ? workOrder.timeAtJob : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, !hideClockIn ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secondary-button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: clockIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 37\n    }\n  }, \"Clock In\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: clockOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 37\n    }\n  }, \"Clock Out\"))) : null, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  }, \"Add Service\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secondary-button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 37\n    }\n  }, \"Add Inspection\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"warning\",\n    className: \"training-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 37\n    }\n  }, \"Add Training\")))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    value: workOrder.notes ? workOrder.notes : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"officeNotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }, \"Office Notes (NOT FOR CUSTOMER)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    value: workOrder.officeNotes ? workOrder.officeNotes : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 29\n    }\n  }, \"Submit for Signature\")))) : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenServiceModal,\n    toggle: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, \"Add Service\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equipment-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"make\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 37\n    }\n  }, \"Make\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 37\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equipment-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"model\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 37\n    }\n  }, \"Model\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serialNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 37\n    }\n  }, \"Serial Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 33\n    }\n  }, \"What work was done?\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"parts-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 33\n    }\n  }, \"Add Part Used\"), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"danger\",\n    onClick: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 33\n    }\n  }, \"Add Part Needed\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenPartUsed,\n    toggle: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, \"Add Part Used\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 33\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 33\n    }\n  }, \"Part Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 33\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenPartNeeded,\n    toggle: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }, \"Add Part Needed\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 33\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 33\n    }\n  }, \"Part Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 33\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 25\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default WorkOrderPage;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/WorkOrderPage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLocation","Form","FormGroup","Label","Input","Button","Modal","ModalHeader","ModalBody","ModalFooter","EmployeeNavbar","EmployeeSidebar","Footer","getWorkOrder","WorkOrderPage","workOrder","setWorkOrder","customer","setCustomer","mapsAddress","setMapsAddress","employees","setEmployees","getWorkOrderFromState","state","getWorkOrderReducer","getUsers","users","isOpenServiceModal","setIsOpenServiceModal","isOpenPartUsed","setIsOpenPartUsed","isOpenPartNeeded","setIsOpenPartNeeded","startTime","setStartTime","endTime","setEndTime","hideClockIn","setHideClockIn","dispatch","location","pathArray","pathname","split","jobId","length","crewMembers","forEach","user","userType","push","addressConverter","typeConverter","types","join","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","address","city","zipcode","newAddress","newCity","searchableAddress","crewConverter","members","crewNames","member","firstName","lastName","clockIn","Date","getTime","clockOut","alert","jobTimeConverter","totalTime","seconds","Math","floor","minutes","hours","trueHours","trueMinutes","trueSeconds","timeAtJob","console","log","toggleServiceModal","togglePartUsed","togglePartNeeded","jobNumber","serviceType","serviceDate","serviceTime","serviceDescription","notes","officeNotes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter\n} from 'reactstrap';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getWorkOrder } from '../../actions/getWorkOrder';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst WorkOrderPage = () => {\n    const [workOrder, setWorkOrder] = useState({});\n    const [customer, setCustomer] = useState({});\n    const [mapsAddress, setMapsAddress] = useState('');\n    const [employees, setEmployees] = useState([]);\n    const getWorkOrderFromState = useSelector(state => state.getWorkOrderReducer.workOrder);\n    const getUsers = useSelector(state => state.getWorkOrderReducer.users);\n    const [isOpenServiceModal, setIsOpenServiceModal] = useState(false);\n    const [isOpenPartUsed, setIsOpenPartUsed] = useState(false);\n    const [isOpenPartNeeded, setIsOpenPartNeeded] = useState(false);\n    const [startTime, setStartTime] = useState(0);\n    const [endTime, setEndTime] = useState(0);\n    const [hideClockIn, setHideClockIn] = useState(false);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const jobId = pathArray[pathArray.length - 1];\n        dispatch(getWorkOrder(jobId));\n    }, []);\n\n    useEffect(() => {\n        if(getWorkOrder) {\n            setWorkOrder(getWorkOrderFromState);\n        };\n    }, [getWorkOrderFromState]);\n\n    useEffect(() => {\n        let crewMembers = [];\n\n        if(getUsers) {\n            getUsers.forEach(user => {\n                if(user.userType === 'customer') {\n                    setCustomer(user);\n                } else {\n                    crewMembers.push(user);\n                };\n            });\n            setEmployees(crewMembers);\n        }\n    }, [getUsers]);\n\n    useEffect(() => {\n        if(customer) {\n            addressConverter(customer);\n        };\n    }, [customer]);\n\n    const typeConverter = types => {\n        if(types) {\n            if(types.length === 1) {\n                return types;\n            } else {\n                return types.join(', ');\n            };\n        };\n    };\n\n    const dateConverter = date => {\n        if(date) {\n            const dateArray = date.split('-');\n            return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n        };\n    };\n\n    const timeConverter = time => {\n        if(time) {\n            const timeArray = time.split(':');\n            const hour = parseInt(timeArray[0]);\n            let m;\n    \n            if(hour <= 11) {\n                m = 'AM';\n            } else {\n                m = 'PM';\n            };\n    \n            if(hour <= 12) {\n                const newHour = hour.toString();\n                timeArray[0] = newHour;\n            } else {\n                const newHour = (hour - 12).toString();\n                timeArray[0] = newHour;\n            };\n    \n            return `${timeArray[0]}:${timeArray[1]} ${m}`;\n        };\n    };\n\n    const addressConverter = customer => {\n        const address = customer.address;\n        const city = customer.city;\n        const state = customer.state;\n        const zipcode = customer.zipcode;\n\n        let newAddress = ''\n        let newCity = '';\n\n        if(address) {\n            newAddress = address.split(' ').join('+');\n        };\n        if(city) {\n            newCity = city.split(' ').join('+');\n        }\n\n        const searchableAddress = `${newAddress},+${newCity},+${state}+${zipcode}`;\n        setMapsAddress(searchableAddress);\n    };\n\n    const crewConverter = members => {\n        let crewNames = [];\n\n        if(members) {\n            members.forEach(member => {\n                crewNames.push(`${member.firstName} ${member.lastName}`);\n            });\n\n            if(crewNames.length === 1) {\n                return crewNames;\n            } else {\n                return crewNames.join(', ');\n            };\n        };\n    };\n\n    const clockIn = () => {\n        const date = new Date();\n        const time = date.getTime();\n\n        setStartTime(time);\n    };\n\n    const clockOut = () => {\n        if(clockIn == 0) {\n            alert('Please clock in first');\n        } else {\n            const date = new Date();\n            const time = date.getTime();\n    \n            setEndTime(time);\n            jobTimeConverter();\n        };\n    };\n\n    const jobTimeConverter = () => {\n        if(startTime && endTime) {\n          const totalTime = endTime - startTime;\n          \n          const seconds = Math.floor((totalTime / 1000) % 60);\n          const minutes = Math.floor((totalTime / (1000 * 60)) % 60);\n          const hours = Math.floor((totalTime / (1000 * 60 * 60)) % 24);\n          \n          const trueHours = hours < 10 ? \"0\" + hours : hours;\n          const trueMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n          const trueSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n          const timeAtJob = trueHours + ':' + trueMinutes + ':' + trueSeconds;\n\n          console.log(timeAtJob)\n          \n          setWorkOrder({\n              ...workOrder,\n              timeAtJob: timeAtJob\n          });\n          setHideClockIn(true);\n        };\n    };\n\n    const toggleServiceModal = () => {\n        setIsOpenServiceModal(!isOpenServiceModal);\n    };\n\n    const togglePartUsed = () => {\n        setIsOpenPartUsed(!isOpenPartUsed);\n    };\n\n    const togglePartNeeded = () => {\n        setIsOpenPartNeeded(!isOpenPartNeeded);\n    };\n\n    return (\n        <div>\n            <EmployeeNavbar />\n            <div className=\"work-order-page\">\n                <EmployeeSidebar />\n                {workOrder ? <div className=\"work-order-page-content\">\n                    <h1>{`Work Order #${workOrder.jobNumber}`}</h1>\n                    <Form className=\"work-order-info\">\n                        <FormGroup>\n                            <Label for=\"customerName\">Customer Name</Label>\n                            <Input disabled value={`${customer.firstName} ${customer.lastName}`} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"customerAddress\">Customer Address</Label>\n                            <a href={`http://maps.google.com/maps?q=${mapsAddress}`}>\n                                <Input disabled value={`${customer.address}, ${customer.city}, ${customer.state} ${customer.zipcode}`} />\n                            </a>\n                        </FormGroup>        \n                        <FormGroup className=\"type-input\">\n                            <Label for=\"serviceType\">Service Type(s)</Label>\n                            <Input disabled value={typeConverter(workOrder.serviceType)} />\n                        </FormGroup>\n                        <div className=\"date-div\">\n                            <FormGroup>\n                                <Label for=\"serviceDate\">Service Date</Label>\n                                <Input disabled value={dateConverter(workOrder.serviceDate)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"serviceTime\">Service Time</Label>\n                                <Input disabled value={timeConverter(workOrder.serviceTime)} />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"crewMembers\">Crew Members</Label>\n                            <Input disabled value={crewConverter(employees)} />\n                        </FormGroup>\n                        <FormGroup className=\"description-input\">\n                            <Label for=\"serviceDescription\">Service Description</Label>\n                            <Input disabled type=\"textarea\" value={workOrder.serviceDescription} />\n                        </FormGroup>\n                        {hideClockIn ? \n                        <FormGroup>\n                            <Label for=\"timeOnJob\">Time At Job</Label>\n                            <Input disabled type=\"text\" value={workOrder.timeAtJob ? workOrder.timeAtJob : null} />\n                        </FormGroup>\n                        : null}\n                        <div className=\"button-div\">\n                            {!hideClockIn ? \n                            <div className=\"secondary-button-div\">\n                                <FormGroup>\n                                    <Button color=\"primary\" onClick={clockIn}>Clock In</Button>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Button color=\"primary\" onClick={clockOut}>Clock Out</Button>\n                                </FormGroup>\n                            </div> : null}\n                            <FormGroup>\n                                <Button outline color=\"success\" onClick={toggleServiceModal}>Add Service</Button>\n                            </FormGroup>\n                            <div className=\"secondary-button-div\">\n                                <FormGroup>\n                                    <Button outline color=\"info\">Add Inspection</Button>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Button outline color=\"warning\" className=\"training-button\">Add Training</Button>\n                                </FormGroup>\n                            </div>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"notes\">Notes</Label>\n                            <Input type=\"textarea\" value={workOrder.notes ? workOrder.notes : null} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"officeNotes\">Office Notes (NOT FOR CUSTOMER)</Label>\n                            <Input type=\"textarea\" value={workOrder.officeNotes ? workOrder.officeNotes : null} />\n                        </FormGroup>\n                        <FormGroup className=\"submit-button\">\n                            <Button color=\"success\">Submit for Signature</Button>\n                        </FormGroup>\n                    </Form>\n                </div> : null}\n                <Modal isOpen={isOpenServiceModal} toggle={toggleServiceModal}>\n                    <ModalHeader toggle={toggleServiceModal}>Add Service</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <div className=\"equipment-div\">\n                                <FormGroup>\n                                    <Label for=\"make\">Make</Label>\n                                    <Input type=\"text\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"type\">Type</Label>\n                                    <Input type=\"text\" />\n                                </FormGroup>\n                            </div>\n                            <div className=\"equipment-div\">\n                                <FormGroup>\n                                    <Label for=\"model\">Model</Label>\n                                    <Input type=\"text\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"serialNumber\">Serial Number</Label>\n                                    <Input type=\"text\" />\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label>What work was done?</Label>\n                                <Input type=\"textarea\" />\n                            </FormGroup>\n                            <FormGroup className=\"parts-group\">\n                                <Button outline color=\"success\" onClick={togglePartUsed}>Add Part Used</Button>\n                                <Button outline color=\"danger\" onClick={togglePartNeeded}>Add Part Needed</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\">Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={isOpenPartUsed} toggle={togglePartUsed}>\n                    <ModalHeader toggle={togglePartUsed}>Add Part Used</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label>Quantity</Label>\n                                <Input type=\"text\" />                                \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Description</Label>\n                                <Input type=\"text\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Number</Label>\n                                <Input type=\"text\" />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\">Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={isOpenPartNeeded} toggle={togglePartNeeded}>\n                    <ModalHeader toggle={togglePartNeeded}>Add Part Needed</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label>Quantity</Label>\n                                <Input type=\"text\" />                                \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Description</Label>\n                                <Input type=\"text\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Number</Label>\n                                <Input type=\"text\" />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\">Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default WorkOrderPage;"]},"metadata":{},"sourceType":"module"}