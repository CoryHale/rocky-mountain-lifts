{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Task.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Card, CardHeader, CardBody, Form, FormGroup, FormFeedback, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Table } from \"reactstrap\";\nimport { getTasks } from \"../../actions/getTasks\";\nimport { getWorkOrders } from \"../../actions/getWorkOrders\";\nimport \"../../styles/task.scss\";\n\nconst Task = () => {\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector(state => state.getTasksReducer.tasks);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n  const [isOpen, setIsOpen] = useState(false);\n  const [errors, setErrors] = useState();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTasks());\n    dispatch(getWorkOrders());\n  }, []);\n  useEffect(() => {\n    setTasks(fetchTasks.tasks);\n  }, [fetchTasks]);\n  useEffect(() => {\n    setWorkOrders(fetchWorkOrders.workOrders);\n  }, [fetchWorkOrders]);\n\n  const dateConverter = date => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = time => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSubmit = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Tasks\"), tasks ? tasks.map(task => /*#__PURE__*/React.createElement(Card, {\n    onClick: toggle,\n    className: \"tasks-page-task-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, task.taskDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, dateConverter(task.taskDate)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, timeConverter(task.taskTime))))))) : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"taskDescription\",\n    onChange: handleChange,\n    invalid: errors.taskDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, errors.taskDescription)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    placeholder: \"date placeholder\",\n    name: \"taskDate\",\n    onChange: handleChange,\n    invalid: errors.taskDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, errors.taskDate)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    placeholder: \"time placeholder\",\n    name: \"taskTime\",\n    onChange: handleChange,\n    invalid: errors.taskTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, errors.taskTime))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(Select, {\n    options: employees,\n    onChange: handleSelectChange,\n    className: errors.employeeId ? \"invalid\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.employeeId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, errors.employeeId)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Complete\"))));\n};\n\nexport default Task;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Task.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Button","Card","CardHeader","CardBody","Form","FormGroup","FormFeedback","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","Table","getTasks","getWorkOrders","Task","tasks","setTasks","fetchTasks","state","getTasksReducer","workOrders","setWorkOrders","fetchWorkOrders","getWorkOrdersReducer","isOpen","setIsOpen","errors","setErrors","dispatch","dateConverter","date","dateArray","split","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","toggle","handleSubmit","map","task","taskDescription","taskDate","taskTime","handleChange","employees","handleSelectChange","employeeId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Card, CardHeader, CardBody, Form, FormGroup, FormFeedback, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Table } from \"reactstrap\";\nimport { getTasks } from \"../../actions/getTasks\";\nimport { getWorkOrders } from \"../../actions/getWorkOrders\";\n\nimport \"../../styles/task.scss\";\n\nconst Task = () => {\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector((state) => state.getTasksReducer.tasks);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [errors, setErrors] = useState();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTasks())\n    dispatch(getWorkOrders());\n  }, []);\n\n  useEffect(() => {\n    setTasks(fetchTasks.tasks);\n  }, [fetchTasks]);\n\n  useEffect(() => {\n    setWorkOrders(fetchWorkOrders.workOrders);\n  }, [fetchWorkOrders]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSubmit = () => {\n\n  };\n\n  return (\n    <div className=\"tasks-page\">\n      <h1>Tasks</h1>\n      {tasks\n        ? tasks.map((task) => (\n            <Card onClick={toggle} className=\"tasks-page-task-card\">\n              <Table borderless>\n                <thead>\n                  <tr>\n                    <th>Task</th>\n                    <th>Date</th>\n                    <th>Time</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{task.taskDescription}</td>\n                    <td>{dateConverter(task.taskDate)}</td>\n                    <td>{timeConverter(task.taskTime)}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          ))\n        : null}\n        <Modal isOpen={isOpen} toggle={toggle}>\n          <ModalHeader toggle={toggle}>Task</ModalHeader>\n          <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label>Task</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <div>\n              <FormGroup>\n                <Label>Date</Label>\n                <Input\n                  type=\"date\"\n                  placeholder=\"date placeholder\"\n                  name=\"taskDate\"\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>Time</Label>\n                <Input\n                  type=\"time\"\n                  placeholder=\"time placeholder\"\n                  name=\"taskTime\"\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label>Assigned To</Label>\n              <Select\n                options={employees}\n                onChange={handleSelectChange}\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\">Edit</Button>\n            <Button color=\"success\">Complete</Button>\n          </ModalFooter>\n        </Modal>\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}