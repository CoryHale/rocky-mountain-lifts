{"ast":null,"code":"import { dbUrl } from './index';\nimport axiosWithAuth from '../components/Login/withAuth';\nexport const GET_EMPLOYEES_START = 'GET_EMPLOYEES_START';\nexport const GET_EMPLOYEES_SUCCESS = 'GET_EMPLOYEES_SUCCESS';\nexport const GET_EMPLOYEES_FAILURE = 'GET_EMPLOYEES_FAILURE';\nexport const getEmployees = () => async dispatch => {\n  dispatch({\n    type: GET_EMPLOYEES_START\n  });\n  let userType = 'employee';\n  return await axiosWithAuth().get(`${dbUrl}/users`, userType).then(res => {\n    dispatch({\n      type: GET_EMPLOYEES_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_EMPLOYEES_FAILURE,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/actions/getEmployees.js"],"names":["dbUrl","axiosWithAuth","GET_EMPLOYEES_START","GET_EMPLOYEES_SUCCESS","GET_EMPLOYEES_FAILURE","getEmployees","dispatch","type","userType","get","then","res","payload","data","catch","err"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AAEA,MAAIM,QAAQ,GAAG,UAAf;AAEA,SAAO,MAAMP,aAAa,GACrBQ,GADQ,CACH,GAAET,KAAM,QADL,EACcQ,QADd,EAERE,IAFQ,CAEHC,GAAG,IAAI;AACTL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,qBADD;AAELS,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GAPQ,EAQRC,KARQ,CAQFC,GAAG,IAAI;AACVT,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,qBADD;AAELQ,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIH,GAbQ,CAAb;AAcH,CAnBM","sourcesContent":["import { dbUrl } from './index';\nimport axiosWithAuth from '../components/Login/withAuth';\n\nexport const GET_EMPLOYEES_START = 'GET_EMPLOYEES_START';\nexport const GET_EMPLOYEES_SUCCESS = 'GET_EMPLOYEES_SUCCESS';\nexport const GET_EMPLOYEES_FAILURE = 'GET_EMPLOYEES_FAILURE';\n\nexport const getEmployees = () => async dispatch => {\n    dispatch({ type: GET_EMPLOYEES_START });\n\n    let userType = 'employee'\n\n    return await axiosWithAuth()\n        .get(`${dbUrl}/users`, userType)\n        .then(res => {\n            dispatch({\n                type: GET_EMPLOYEES_SUCCESS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_EMPLOYEES_FAILURE,\n                payload: err\n            });\n        });\n};"]},"metadata":{},"sourceType":"module"}