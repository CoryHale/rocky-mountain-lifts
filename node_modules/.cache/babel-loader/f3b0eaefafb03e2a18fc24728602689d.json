{"ast":null,"code":"import _defineProperty from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{useLocation}from\"react-router-dom\";import{Table,Card,Button,Modal,ModalHeader,ModalBody,ModalFooter,Form,FormGroup,Label,Input,FormFeedback}from\"reactstrap\";import Select from\"react-select\";import{getUsers}from\"../../actions/getUsers\";import{getCustomerTasks}from\"../../actions/getCustomerTasks\";import{addTask}from\"../../actions/addTask\";import{editTask}from\"../../actions/editTask\";import{deleteTask}from\"../../actions/deleteTask\";import\"../../styles/customer.scss\";var TaskTab=function TaskTab(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var getTasksFromState=useSelector(function(state){return state.getCustomerTasksReducer.tasks;});var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOpen=_useState4[0],setIsOpen=_useState4[1];var _useState5=useState({taskDate:\"\",taskTime:\"\",taskDescription:\"\",customerId:\"\",employeeId:\"\"}),_useState6=_slicedToArray(_useState5,2),task=_useState6[0],setTask=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isOpenEdit=_useState8[0],setIsOpenEdit=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),currentTask=_useState10[0],setCurrentTask=_useState10[1];var success=useSelector(function(state){return state.addTaskReducer.success;});var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),errors=_useState12[0],setErrors=_useState12[1];var getErrors=useSelector(function(state){return state.addTaskReducer.errors;});var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),employees=_useState14[0],setEmployees=_useState14[1];var employeeArray=[];var getUsersFromState=useSelector(function(state){return state.getUsersReducer.users;});var editSuccess=useSelector(function(state){return state.editTaskReducer.success;});var deleteSuccess=useSelector(function(state){return state.deleteTaskReducer.success;});var dispatch=useDispatch();var location=useLocation();useEffect(function(){var pathArray=location.pathname.split(\"/\");var customerId=pathArray[pathArray.length-1];dispatch(getCustomerTasks(customerId));dispatch(getUsers());setTask(_objectSpread(_objectSpread({},task),{},{customerId:customerId}));},[]);useEffect(function(){if(getTasksFromState){setTasks(getTasksFromState);}},[getTasksFromState]);useEffect(function(){if(getUsersFromState.users){getUsersFromState.users.map(function(user){if(user.userType===\"employee\"&&user.active===true){employeeArray.push({label:\"\".concat(user.firstName,\" \").concat(user.lastName),value:user.userId,name:\"employeeId\",jobTitle:user.jobTitle});}});setEmployees(employeeArray);}},[getUsersFromState]);useEffect(function(){if(success){toggle();}},[success]);useEffect(function(){if(editSuccess||deleteSuccess){toggleEdit();};},[editSuccess,deleteSuccess]);useEffect(function(){if(getErrors){setErrors(getErrors);}},[getErrors]);var dateConverter=function dateConverter(date){var dateArray=date.split(\"-\");return\"\".concat(dateArray[1],\"/\").concat(dateArray[2],\"/\").concat(dateArray[0]);};var timeConverter=function timeConverter(time){var timeArray=time.split(\":\");var hour=parseInt(timeArray[0]);var m;if(hour<=11){m=\"AM\";}else{m=\"PM\";}if(hour===0){var newHour=\"12\";timeArray[0]=newHour;}else if(hour<=12){var _newHour=hour.toString();timeArray[0]=_newHour;}else{var _newHour2=(hour-12).toString();timeArray[0]=_newHour2;}return\"\".concat(timeArray[0],\":\").concat(timeArray[1],\" \").concat(m);};var toggle=function toggle(){if(isOpen){setTask(_objectSpread(_objectSpread({},task),{},{taskDate:\"\",taskTime:\"\",taskDescription:\"\",employeeId:\"\"}));setErrors({});}setIsOpen(!isOpen);};var toggleEdit=function toggleEdit(e,task){setCurrentTask(task);setIsOpenEdit(!isOpenEdit);};var handleChange=function handleChange(e){setTask(_objectSpread(_objectSpread({},task),{},_defineProperty({},e.target.name,e.target.value)));};var handleEditChange=function handleEditChange(e){setCurrentTask(_objectSpread(_objectSpread({},currentTask),{},_defineProperty({},e.target.name,e.target.value)));};var handleSelectChange=function handleSelectChange(e){setTask(_objectSpread(_objectSpread({},task),{},_defineProperty({},e.name,e.value)));};var handleEditSelectChange=function handleEditSelectChange(e){setCurrentTask(_objectSpread(_objectSpread({},currentTask),{},_defineProperty({},e.name,e.value)));};var handleSubmit=function handleSubmit(e){e.preventDefault();dispatch(addTask(task));};var handleSubmitEdit=function handleSubmitEdit(e,currentTask){e.preventDefault();dispatch(editTask(currentTask));};var handleDeleteTask=function handleDeleteTask(e,currentTask){e.preventDefault();dispatch(deleteTask(currentTask.taskId));};return/*#__PURE__*/React.createElement(\"div\",{className:\"customer-page-task-tab\"},/*#__PURE__*/React.createElement(Table,{borderless:true,className:\"task-table-header\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"table-headers\"},/*#__PURE__*/React.createElement(\"th\",null,\"Task\"),/*#__PURE__*/React.createElement(\"th\",null,\"Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Time\")))),tasks?tasks.tasks?tasks.tasks.map(function(task){return/*#__PURE__*/React.createElement(Card,{className:\"task-card\",onClick:function onClick(e){return toggleEdit(e,task);}},/*#__PURE__*/React.createElement(Table,{borderless:true,className:\"task-card-table\"},/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"table-data\"},/*#__PURE__*/React.createElement(\"td\",null,task.taskDescription),/*#__PURE__*/React.createElement(\"td\",null,dateConverter(task.taskDate)),/*#__PURE__*/React.createElement(\"td\",null,timeConverter(task.taskTime))))));}):null:null,/*#__PURE__*/React.createElement(Button,{outline:true,color:\"success\",onClick:toggle},\"Add Task\"),/*#__PURE__*/React.createElement(Modal,{isOpen:isOpen,toggle:toggle},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggle},\"Add Task\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"add-task-date-div\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"taskDate\"},\"Date\"),/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"taskDate\",placeholder:\"date placeholder\",onChange:handleChange,invalid:errors.taskDate?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskDate)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"taskTime\"},\"Time\"),/*#__PURE__*/React.createElement(Input,{type:\"time\",name:\"taskTime\",placeholder:\"time placeholder\",onChange:handleChange,invalid:errors.taskTime?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskTime))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"taskDescription\"},\"Task Description\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",name:\"taskDescription\",onChange:handleChange,invalid:errors.taskDescription?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskDescription)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"employeeId\"},\"Assigned To\"),/*#__PURE__*/React.createElement(Select,{name:\"employeeId\",options:employees,onChange:handleSelectChange,className:errors.employeeId?\"invalid\":\"\"}),/*#__PURE__*/React.createElement(Input,{type:\"hidden\",disabled:true,invalid:errors.employeeId?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.employeeId)))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"success\",onClick:handleSubmit},\"Submit\"))),/*#__PURE__*/React.createElement(Modal,{isOpen:isOpenEdit,toggle:toggleEdit},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggleEdit},\"Edit Task\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmitEdit},/*#__PURE__*/React.createElement(\"div\",{className:\"add-task-date-div\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"taskDate\"},\"Date\"),/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"taskDate\",placeholder:\"date placeholder\",value:currentTask?currentTask.taskDate:null,onChange:handleEditChange,invalid:errors.taskDate?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskDate)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"taskTime\"},\"Time\"),/*#__PURE__*/React.createElement(Input,{type:\"time\",name:\"taskTime\",placeholder:\"time placeholder\",value:currentTask?currentTask.taskTime:null,onChange:handleEditChange,invalid:errors.taskTime?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskTime))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"taskDescription\"},\"Task Description\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",name:\"taskDescription\",value:currentTask?currentTask.taskDescription:null,onChange:handleEditChange,invalid:errors.taskDescription?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskDescription)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"employeeId\"},\"Assigned To\"),/*#__PURE__*/React.createElement(Select,{name:\"employeeId\",options:employees,onChange:handleEditSelectChange,defaultValue:currentTask?{value:currentTask.employeeId}:null,className:errors.employeeId?\"invalid\":\"\"}),/*#__PURE__*/React.createElement(Input,{type:\"hidden\",disabled:true,invalid:errors.employeeId?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.employeeId)))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"danger\",onClick:function onClick(e){return handleSubmitEdit(e,currentTask);}},\"Edit\"),/*#__PURE__*/React.createElement(Button,{color:\"success\",onClick:function onClick(e){return handleDeleteTask(e,currentTask);}},\"Complete\"))));};export default TaskTab;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/customer-page-components/TaskTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useLocation","Table","Card","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","Select","getUsers","getCustomerTasks","addTask","editTask","deleteTask","TaskTab","tasks","setTasks","getTasksFromState","state","getCustomerTasksReducer","isOpen","setIsOpen","taskDate","taskTime","taskDescription","customerId","employeeId","task","setTask","isOpenEdit","setIsOpenEdit","currentTask","setCurrentTask","success","addTaskReducer","errors","setErrors","getErrors","employees","setEmployees","employeeArray","getUsersFromState","getUsersReducer","users","editSuccess","editTaskReducer","deleteSuccess","deleteTaskReducer","dispatch","location","pathArray","pathname","split","length","map","user","userType","active","push","label","firstName","lastName","value","userId","name","jobTitle","toggle","toggleEdit","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","e","handleChange","target","handleEditChange","handleSelectChange","handleEditSelectChange","handleSubmit","preventDefault","handleSubmitEdit","handleDeleteTask","taskId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Table,\n  Card,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { getUsers } from \"../../actions/getUsers\";\nimport { getCustomerTasks } from \"../../actions/getCustomerTasks\";\nimport { addTask } from \"../../actions/addTask\";\nimport { editTask } from \"../../actions/editTask\";\nimport { deleteTask } from \"../../actions/deleteTask\";\n\nimport \"../../styles/customer.scss\";\n\nconst TaskTab = () => {\n  const [tasks, setTasks] = useState([]);\n  const getTasksFromState = useSelector(\n    (state) => state.getCustomerTasksReducer.tasks\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [task, setTask] = useState({\n    taskDate: \"\",\n    taskTime: \"\",\n    taskDescription: \"\",\n    customerId: \"\",\n    employeeId: \"\",\n  });\n  const [isOpenEdit, setIsOpenEdit] = useState(false);\n  const [currentTask, setCurrentTask] = useState()\n  const success = useSelector((state) => state.addTaskReducer.success);\n  const [errors, setErrors] = useState({});\n  const getErrors = useSelector((state) => state.addTaskReducer.errors);\n  const [employees, setEmployees] = useState([]);\n  const employeeArray = [];\n  const getUsersFromState = useSelector((state) => state.getUsersReducer.users);\n  const editSuccess = useSelector(state => state.editTaskReducer.success);\n  const deleteSuccess = useSelector(state => state.deleteTaskReducer.success);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomerTasks(customerId));\n    dispatch(getUsers());\n    setTask({\n      ...task,\n      customerId: customerId\n    })\n  }, []);\n\n  useEffect(() => {\n    if (getTasksFromState) {\n      setTasks(getTasksFromState);\n    }\n  }, [getTasksFromState]);\n\n  useEffect(() => {\n    if (getUsersFromState.users) {\n      getUsersFromState.users.map((user) => {\n        if (user.userType === \"employee\" && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: \"employeeId\",\n            jobTitle: user.jobTitle,\n          });\n        }\n      });\n\n      setEmployees(employeeArray);\n    }\n  }, [getUsersFromState]);\n\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n  }, [success]);\n\n  useEffect(() => {\n    if (editSuccess || deleteSuccess) {\n      toggleEdit();\n    };\n  }, [editSuccess, deleteSuccess]);\n\n  useEffect(() => {\n    if (getErrors) {\n      setErrors(getErrors);\n    }\n  }, [getErrors]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = () => {\n    if (isOpen) {\n      setTask({\n        ...task,\n        taskDate: \"\",\n        taskTime: \"\",\n        taskDescription: \"\",\n        employeeId: \"\",\n      });\n      setErrors({});\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const toggleEdit = (e, task) => {\n    setCurrentTask(task);\n    setIsOpenEdit(!isOpenEdit);\n  };\n\n  const handleChange = (e) => {\n    setTask({\n      ...task,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditChange = (e) => {\n    setCurrentTask({\n      ...currentTask,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setTask({\n      ...task,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleEditSelectChange = (e) => {\n    setCurrentTask({\n      ...currentTask,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTask(task));\n  };\n\n  const handleSubmitEdit = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(editTask(currentTask));\n  };\n\n  const handleDeleteTask = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(deleteTask(currentTask.taskId))\n  };\n\n  return (\n    <div className=\"customer-page-task-tab\">\n      <Table borderless className=\"task-table-header\">\n        <thead>\n          <tr className=\"table-headers\">\n            <th>Task</th>\n            <th>Date</th>\n            <th>Time</th>\n          </tr>\n        </thead>\n      </Table>\n      {tasks\n        ? tasks.tasks\n          ? tasks.tasks.map((task) => (\n              <Card className=\"task-card\" onClick={(e) => toggleEdit(e, task)}>\n                <Table borderless className=\"task-card-table\">\n                  <tbody>\n                    <tr className=\"table-data\">\n                      <td>{task.taskDescription}</td>\n                      <td>{dateConverter(task.taskDate)}</td>\n                      <td>{timeConverter(task.taskTime)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            ))\n          : null\n        : null}\n      <Button outline color=\"success\" onClick={toggle}>\n        Add Task\n      </Button>\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <div className=\"add-task-date-div\">\n              <FormGroup>\n                <Label for=\"taskDate\">Date</Label>\n                <Input\n                  type=\"date\"\n                  name=\"taskDate\"\n                  placeholder=\"date placeholder\"\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"taskTime\">Time</Label>\n                <Input\n                  type=\"time\"\n                  name=\"taskTime\"\n                  placeholder=\"time placeholder\"\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"taskDescription\">Task Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"employeeId\">Assigned To</Label>\n              <Select\n                name=\"employeeId\"\n                options={employees}\n                onChange={handleSelectChange}\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenEdit} toggle={toggleEdit}>\n        <ModalHeader toggle={toggleEdit}>Edit Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitEdit}>\n            <div className=\"add-task-date-div\">\n              <FormGroup>\n                <Label for=\"taskDate\">Date</Label>\n                <Input\n                  type=\"date\"\n                  name=\"taskDate\"\n                  placeholder=\"date placeholder\"\n                  value={currentTask ? currentTask.taskDate : null}\n                  onChange={handleEditChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"taskTime\">Time</Label>\n                <Input\n                  type=\"time\"\n                  name=\"taskTime\"\n                  placeholder=\"time placeholder\"\n                  value={currentTask ? currentTask.taskTime : null}\n                  onChange={handleEditChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"taskDescription\">Task Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                value={currentTask ? currentTask.taskDescription : null}\n                onChange={handleEditChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"employeeId\">Assigned To</Label>\n              <Select\n                name=\"employeeId\"\n                options={employees}\n                onChange={handleEditSelectChange}\n                defaultValue={\n                  currentTask ? { value: currentTask.employeeId } : null\n                }\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={(e) => handleSubmitEdit(e, currentTask)}>\n            Edit\n          </Button>\n          <Button color=\"success\" onClick={(e) => handleDeleteTask(e, currentTask)}>\n            Complete\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TaskTab;\n"]},"metadata":{},"sourceType":"module"}