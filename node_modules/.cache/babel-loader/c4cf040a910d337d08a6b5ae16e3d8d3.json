{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/OpenWorkOrders.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card, CardBody, Table } from \"reactstrap\"; // import \"../../styles/employee-dashboard.scss\";\n\nconst OpenWorkOrders = () => {\n  const [workOrders, setWorkOrders] = useState([]);\n  const getWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n  const history = useHistory();\n  useEffect(() => {\n    setWorkOrders(getWorkOrders.workOrders);\n  }, [getWorkOrders]);\n\n  const dateConverter = date => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = time => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const handleClick = (e, workOrder) => {\n    const jobId = workOrder.workOrderId;\n    history.push(`workorders/${jobId}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-orders-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"open-work-orders-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Open Work Orders\"), workOrders ? workOrders.map(workOrder => /*#__PURE__*/React.createElement(Card, {\n    className: \"work-order-card\",\n    onClick: e => handleClick(e, workOrder),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }, \"W.O. #\"), workOrder.jobNumber ? /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 46\n    }\n  }, \"Job #\") : null, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }, \"Customer Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }, \"Service Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }\n  }, \"Service Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }, \"Service Time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }\n  }, workOrder.workOrderId), workOrder.jobNumber ? /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, workOrder.jobNumber) : null, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }\n  }, workOrder.customerName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }, workOrder.serviceType.length > 1 ? \"Multi\" : workOrder.serviceType), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, dateConverter(workOrder.serviceDate)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }, timeConverter(workOrder.serviceStartTime)))))))) : null);\n};\n\nexport default OpenWorkOrders;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/OpenWorkOrders.js"],"names":["React","useState","useEffect","useSelector","useHistory","Card","CardBody","Table","OpenWorkOrders","workOrders","setWorkOrders","getWorkOrders","state","getWorkOrdersReducer","history","dateConverter","date","dateArray","split","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","handleClick","e","workOrder","jobId","workOrderId","push","map","jobNumber","customerName","serviceType","length","serviceDate","serviceStartTime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card, CardBody, Table } from \"reactstrap\";\n\n// import \"../../styles/employee-dashboard.scss\";\n\nconst OpenWorkOrders = () => {\n  const [workOrders, setWorkOrders] = useState([]);\n  const getWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const history = useHistory();\n\n  useEffect(() => {\n    setWorkOrders(getWorkOrders.workOrders);\n  }, [getWorkOrders]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const handleClick = (e, workOrder) => {\n    const jobId = workOrder.workOrderId;\n    history.push(`workorders/${jobId}`);\n  };\n\n  return (\n    <div className=\"work-orders-page\">\n      <h1 className=\"open-work-orders-title\">Open Work Orders</h1>\n      {workOrders\n        ? workOrders.map((workOrder) => (\n            <Card\n              className=\"work-order-card\"\n              onClick={(e) => handleClick(e, workOrder)}\n            >\n              <CardBody>\n                <Table borderless>\n                  <thead>\n                    <tr>\n                      <th>W.O. #</th>\n                      {workOrder.jobNumber ? <th>Job #</th> : null}\n                      <th>Customer Name</th>\n                      <th>Service Type</th>\n                      <th>Service Date</th>\n                      <th>Service Time</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th>{workOrder.workOrderId}</th>\n                      {workOrder.jobNumber ? (\n                        <th>{workOrder.jobNumber}</th>\n                      ) : null}\n                      <td>{workOrder.customerName}</td>\n                      <td>\n                        {workOrder.serviceType.length > 1\n                          ? \"Multi\"\n                          : workOrder.serviceType}\n                      </td>\n                      <td>{dateConverter(workOrder.serviceDate)}</td>\n                      <td>{timeConverter(workOrder.serviceStartTime)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          ))\n        : null}\n    </div>\n  );\n};\n\nexport default OpenWorkOrders;\n"]},"metadata":{},"sourceType":"module"}