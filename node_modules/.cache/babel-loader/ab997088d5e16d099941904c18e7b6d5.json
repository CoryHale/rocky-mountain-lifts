{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Login/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button, Label } from 'reactstrap';\nimport { login } from '../../actions/login';\nimport LoginNav from './LoginNav';\nimport Footer from '../Employees/Footer';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../../styles/login.scss';\n\nconst Login = () => {\n  const [creds, setCreds] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState(false);\n  const userType = useSelector(state => state.loginReducer.userType);\n  const loggingIn = useSelector(state => state.loginReducer.loggingIn);\n  const success = useSelector(state => state.loginReducer.success);\n  const loginError = useSelector(state => state.loginReducer.error);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleChange = e => {\n    setCreds({ ...creds,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(login(creds)).then(() => {\n      if (!localStorage.getItem('token')) {\n        setError(true);\n        console.log(error);\n      }\n\n      ;\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    if (userType) {\n      return userType === 'employee' ? history.push('/e_dashboard') : history.push('/c_dashboard');\n    }\n\n    ;\n  }, [userType]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoginNav, {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"input-label\",\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"text\",\n    value: creds.email,\n    id: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"input-label\",\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"password\",\n    value: creds.password,\n    name: \"password\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    size: \"lg\",\n    outline: true,\n    color: \"success\",\n    className: \"btn-centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Log In\"), loggingIn ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"login-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 38\n    }\n  }, \"...Logging In...\") : success ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"login-status success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 39\n    }\n  }, \"Login Successful!\") : loginError ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"login-status error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 42\n    }\n  }, \"Login Failed\") : null))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Login/Login.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","Form","Input","Button","Label","login","LoginNav","Footer","Login","creds","setCreds","username","password","error","setError","userType","state","loginReducer","loggingIn","success","loginError","dispatch","history","handleChange","e","target","name","value","handleSubmit","preventDefault","then","localStorage","getItem","console","log","catch","err","push","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button, Label } from 'reactstrap';\nimport { login } from '../../actions/login';\nimport LoginNav from './LoginNav';\nimport Footer from '../Employees/Footer';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../../styles/login.scss';\n\nconst Login = () => {\n    const [creds, setCreds] = useState({username: '', password: ''});\n    const [error, setError] = useState(false);\n    const userType = useSelector(state => state.loginReducer.userType);\n    const loggingIn = useSelector(state => state.loginReducer.loggingIn);\n    const success = useSelector(state => state.loginReducer.success);\n    const loginError = useSelector(state => state.loginReducer.error);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleChange = e => {\n        setCreds({...creds, [e.target.name]: e.target.value});\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        dispatch(login(creds))\n        .then(() => {\n            if(!localStorage.getItem('token')) {\n                setError(true);\n                console.log(error);\n            };\n        })\n        .catch(err => console.log(err));\n    };\n\n    useEffect(() => {\n        if(userType) {\n            return userType === 'employee' ?\n                history.push('/e_dashboard') :\n                history.push('/c_dashboard');\n        };\n    }, [userType]);\n\n    return (\n        <div className=\"body\">\n            <LoginNav className=\"navbar\" />\n\n            <div className=\"login-page\">\n                <div className=\"input-box\">\n                    <h2>Log In</h2>\n                    <Form onSubmit={ handleSubmit } className=\"form-field\">\n                        <div className=\"input-field\">\n                            <Label className=\"input-label\" for=\"email\">Email</Label>\n                            <Input\n                                className=\"input\"\n                                type=\"text\"\n                                value={ creds.email }\n                                id=\"email\"\n                                name=\"email\"\n                                onChange={ handleChange }\n                            />\n                        </div>\n                        <div className=\"input-field\">\n                            <Label className=\"input-label\" for=\"password\">Password</Label>\n                            <Input\n                                className=\"input\"\n                                type=\"password\"\n                                value={ creds.password }\n                                name=\"password\"\n                                onChange={ handleChange }\n                            />\n                        </div>\n\n                        <Button type=\"submit\" size=\"lg\" outline color=\"success\" className=\"btn-centered\">Log In</Button>\n                        {loggingIn ? <p className=\"login-status\">...Logging In...</p> :\n                            success ? <p className=\"login-status success\">Login Successful!</p> :\n                            loginError ? <p className=\"login-status error\">Login Failed</p> : null}\n                    </Form>\n                </div>\n            </div>\n\n            <Footer />\n        </div>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}