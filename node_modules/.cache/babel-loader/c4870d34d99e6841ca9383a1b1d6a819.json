{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddWorkOrderBtn.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, FormFeedback, Label, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport '../../styles/sidebar.scss';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst AddWorkOrderBtn = () => {\n  const [workOrder, setWorkOrder] = useState({\n    jobNumber: undefined,\n    customer: '',\n    serviceDate: '',\n    serviceType: '',\n    prevJobNumber: undefined,\n    quote: '',\n    notes: '',\n    officeNotes: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector(state => state);\n  const getSuccess = useSelector(state => state);\n  const [employees, setEmployees] = useState([]);\n  const employeesArray = [];\n  const [customers, setCustomers] = useState([]);\n  const customersArray = [];\n  const getUsers = useSelector(state => state.getUsersReducer.users);\n  const [date, setDate] = useState(new Date());\n  const [hidden, setHidden] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    changeHidden(location);\n  }, [location]);\n  useEffect(() => {\n    if (getUsers.users) {\n      getUsers.users.forEach(user => {\n        if (user.userType === 'employee') {\n          employeesArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId\n          });\n        } else {\n          customersArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId\n          });\n        }\n\n        ;\n      });\n    }\n\n    ;\n    setEmployees(employeesArray);\n    setCustomers(customersArray);\n  }, [getUsers]);\n\n  const toggle = e => {\n    setIsOpen(!isOpen);\n    setErrors({});\n  };\n\n  const handleChange = e => {\n    return;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    return;\n  };\n\n  const changeHidden = location => {\n    if (location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n      setHidden(true);\n    } else {\n      setHidden(false);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: hidden ? \"add-work-order-div\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, hidden ? /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }\n  }, \"Create Work Order\") : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Create Work Order\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(Select, {\n    options: customers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: date,\n    onChange: handleChange,\n    name: \"date\",\n    dateFormat: \"MM/dd/yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-calendar-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 41\n    }\n  })))))))));\n};\n\nexport default AddWorkOrderBtn;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddWorkOrderBtn.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","FormFeedback","Label","Input","InputGroup","InputGroupAddon","InputGroupText","Select","useLocation","DatePicker","AddWorkOrderBtn","workOrder","setWorkOrder","jobNumber","undefined","customer","serviceDate","serviceType","prevJobNumber","quote","notes","officeNotes","errors","setErrors","success","setSuccess","getErrors","state","getSuccess","employees","setEmployees","employeesArray","customers","setCustomers","customersArray","getUsers","getUsersReducer","users","date","setDate","Date","hidden","setHidden","isOpen","setIsOpen","dispatch","location","changeHidden","forEach","user","userType","push","label","firstName","lastName","value","userId","toggle","e","handleChange","handleSubmit","preventDefault","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    FormFeedback,\n    Label,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\n\nimport '../../styles/sidebar.scss';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst AddWorkOrderBtn = () => {\n    const [workOrder, setWorkOrder] = useState({\n        jobNumber: undefined,\n        customer: '',\n        serviceDate: '',\n        serviceType: '',\n        prevJobNumber: undefined,\n        quote: '',\n        notes: '',\n        officeNotes: ''\n    });\n    const [errors, setErrors] = useState({});\n    const [success, setSuccess] = useState(false);\n    const getErrors = useSelector(state => state);\n    const getSuccess = useSelector(state => state);\n    const [employees, setEmployees] = useState([]);\n    const employeesArray = [];\n    const [customers, setCustomers] = useState([]);\n    const customersArray = [];\n    const getUsers = useSelector(state => state.getUsersReducer.users); \n    const [date, setDate] = useState(new Date());\n    const [hidden, setHidden] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        changeHidden(location);\n    }, [location]);\n\n    useEffect(() => {\n        if(getUsers.users) {\n            getUsers.users.forEach(user => {\n                if(user.userType === 'employee') {\n                    employeesArray.push(\n                        {\n                            label: `${user.firstName} ${user.lastName}`,\n                            value: user.userId\n                        }\n                    );\n                } else {\n                    customersArray.push(\n                        {\n                            label: `${user.firstName} ${user.lastName}`,\n                            value: user.userId\n                        }\n                    );\n                };\n            });\n        };\n        setEmployees(employeesArray);\n        setCustomers(customersArray);\n    }, [getUsers]);\n\n    const toggle = e => {\n        setIsOpen(!isOpen);\n        setErrors({});\n    };\n\n    const handleChange = e => {\n        return;\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        return;\n    };\n\n    const changeHidden = location => {\n        if(location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n            setHidden(true);\n        } else {\n            setHidden(false);\n        };\n    };\n\n    return (\n        <div className={hidden ? \"add-work-order-div\": \"\"}>\n            {hidden ? <Button color=\"success\" onClick={toggle}>Create Work Order</Button> : null}\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Create Work Order</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <Label>Customer</Label>\n                            <Select options={customers} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Date</Label>\n                            <InputGroup>\n                                <Input>\n                                    <DatePicker selected={date} onChange={handleChange} name=\"date\" dateFormat=\"MM/dd/yyyy\" />\n                                </Input>\n                                <InputGroupAddon addonType=\"append\">\n                                    <InputGroupText>\n                                        <i className=\"fad fa-calendar-alt\" />\n                                    </InputGroupText>\n                                    \n                                </InputGroupAddon>\n                            </InputGroup>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddWorkOrderBtn;"]},"metadata":{},"sourceType":"module"}