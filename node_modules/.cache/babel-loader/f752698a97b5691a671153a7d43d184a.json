{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/src/components/Login/Login.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Alert, Form, Input, Button, Label } from \"reactstrap\"; // import { login } from '../../actions/login';\n\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport LoginNav from \"./LoginNav\";\nimport Footer from \"../Employees/Footer\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../../styles/login.scss\";\n\nconst Login = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const {\n    login\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const userType = useSelector(state => state.loginReducer.userType);\n  const loggingIn = useSelector(state => state.loginReducer.loggingIn);\n  const success = useSelector(state => state.loginReducer.success);\n  const failure = useSelector(state => state.loginReducer.error);\n  const dispatch = useDispatch();\n  const history = useHistory(); // const handleChange = (e) => {\n  //   setCreds({ ...creds, [e.target.name]: e.target.value });\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      setError(\"Failed to sign in\");\n    }\n\n    setLoading(false);\n  }; // useEffect(() => {\n  //   if (userType) {\n  //     return userType === \"employee\"\n  //       ? history.push(\"/e_dashboard\")\n  //       : history.push(\"/c_dashboard\");\n  //   }\n  // }, [userType]);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoginNav, {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Log In\"), error && /*#__PURE__*/React.createElement(Alert, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"input-label\",\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"text\",\n    ref: emailRef,\n    id: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"input-label\",\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    type: \"password\",\n    ref: passwordRef,\n    name: \"password\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    size: \"lg\",\n    outline: true,\n    color: \"success\",\n    className: \"btn-centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Log In\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Forgot Password?\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/src/components/Login/Login.js"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","useHistory","Link","Alert","Form","Input","Button","Label","useAuth","LoginNav","Footer","Login","emailRef","passwordRef","login","error","setError","loading","setLoading","userType","state","loginReducer","loggingIn","success","failure","dispatch","history","handleSubmit","e","preventDefault","current","value","handleChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,KAArC,QAAkD,YAAlD,C,CACA;;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,kCAAP;AACA,OAAO,yBAAP;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGd,MAAM,EAAvB;AACA,QAAMe,WAAW,GAAGf,MAAM,EAA1B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAYN,OAAO,EAAzB;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMuB,QAAQ,GAAGpB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBF,QAA/B,CAA5B;AACA,QAAMG,SAAS,GAAGvB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBC,SAA/B,CAA7B;AACA,QAAMC,OAAO,GAAGxB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBE,OAA/B,CAA3B;AACA,QAAMC,OAAO,GAAGzB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBN,KAA/B,CAA3B;AACA,QAAMU,QAAQ,GAAGzB,WAAW,EAA5B;AACA,QAAM0B,OAAO,GAAGzB,UAAU,EAA1B,CAXkB,CAalB;AACA;AACA;;AAEA,QAAM0B,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI;AACFb,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMJ,KAAK,CAACF,QAAQ,CAACkB,OAAT,CAAiBC,KAAlB,EAAyBlB,WAAW,CAACiB,OAAZ,CAAoBC,KAA7C,CAAX;AACD,KAJD,CAIE,MAAM;AACNf,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACD;;AAEDE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAZD,CAjBkB,CA+BlB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGH,KAAK,iBAAI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBA,KAAvB,CAFZ,eAGE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEY,YAAhB;AAA8B,IAAA,SAAS,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,GAAG,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,GAAG,EAAEf,QAHP;AAIE,IAAA,EAAE,EAAC,OAJL;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,QAAQ,EAAEoB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,GAAG,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,GAAG,EAAEnB,WAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAEmB,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAdF,eA2BE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,OAAO,MAHT;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAC,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF,CAHF,eA+CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CA/CF,CADF,CAFF,eAwDE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDF,CADF;AA4DD,CAnGD;;AAqGA,eAAerB,KAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Alert, Form, Input, Button, Label } from \"reactstrap\";\n// import { login } from '../../actions/login';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport LoginNav from \"./LoginNav\";\nimport Footer from \"../Employees/Footer\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../../styles/login.scss\";\n\nconst Login = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const userType = useSelector((state) => state.loginReducer.userType);\n  const loggingIn = useSelector((state) => state.loginReducer.loggingIn);\n  const success = useSelector((state) => state.loginReducer.success);\n  const failure = useSelector((state) => state.loginReducer.error);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // const handleChange = (e) => {\n  //   setCreds({ ...creds, [e.target.name]: e.target.value });\n  // };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      setError(\"Failed to sign in\");\n    }\n\n    setLoading(false);\n  };\n\n  // useEffect(() => {\n  //   if (userType) {\n  //     return userType === \"employee\"\n  //       ? history.push(\"/e_dashboard\")\n  //       : history.push(\"/c_dashboard\");\n  //   }\n  // }, [userType]);\n\n  return (\n    <div className=\"body\">\n      <LoginNav className=\"navbar\" />\n      <div className=\"login-page\">\n        <div className=\"input-box\">\n          <h2>Log In</h2>\n          {error && <Alert color=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit} className=\"form-field\">\n            <div className=\"input-field\">\n              <Label className=\"input-label\" for=\"email\">\n                Email\n              </Label>\n              <Input\n                className=\"input\"\n                type=\"text\"\n                ref={emailRef}\n                id=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"input-field\">\n              <Label className=\"input-label\" for=\"password\">\n                Password\n              </Label>\n              <Input\n                className=\"input\"\n                type=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                onChange={handleChange}\n              />\n            </div>\n\n            <Button\n              type=\"submit\"\n              size=\"lg\"\n              outline\n              color=\"success\"\n              className=\"btn-centered\"\n            >\n              Log In\n            </Button>\n            {/* {loggingIn ? (\n              <p className=\"login-status\">...Logging In...</p>\n            ) : success ? (\n              <p className=\"login-status success\">Login Successful!</p>\n            ) : failure ? (\n              <p className=\"login-status error\">Login Failed</p>\n            ) : null} */}\n          </Form>\n          <div>\n            <Link to=\"\">Forgot Password?</Link>\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}