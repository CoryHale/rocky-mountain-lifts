{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Calendar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormFeedback } from \"reactstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"../../styles/task.scss\";\n\nconst TaskCalendar = () => {\n  const flag = useSelector(state => state.taskToggleReducer.calendarView);\n  const [events, setEvents] = useState([]);\n  const [curEvent, setCurEvent] = useState();\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector(state => state.getTasksReducer.tasks);\n  const [otherEvents, setOtherEvents] = useState([]);\n  const fetchEvents = useSelector(state => state.getEventsReducer.events);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (fetchTasks) {\n      fetchTasks.tasks.map(task => {\n        setEvents(events => [...events, {\n          title: task.taskDescription,\n          date: task.taskDate\n        }]);\n      });\n    }\n  }, [fetchTasks]);\n  useEffect(() => {\n    let start = \"\";\n    let end = \"\";\n\n    if (fetchEvents) {\n      const array = [];\n      fetchEvents.events.map(event => {\n        // if (event.startTime === \"\") {\n        //   let allDay = true;\n        // }\n        if (event.startDate !== \"\" && event.startTime !== \"\") {\n          start = `${event.startDate}T${event.startTime}`;\n        } else {\n          start = event.startDate;\n        }\n\n        if (event.endDate === \"\" && event.endTime === \"\") {\n          end = event.startDate;\n        } else if (event.endDate === \"\" && event.endTime !== \"\") {\n          end = `${event.startDate}T${event.endTime}`;\n        } else if (event.endDate !== \"\" && event.endTime !== \"\") {\n          end = `${event.endDate}T${event.endTime}`;\n        } else {\n          end = event.endDate;\n        }\n\n        if (event.recurring) {\n          array.push({\n            title: event.title,\n            // allDay: allDay,\n            startTime: event.startTime,\n            endTime: event.endTime,\n            startRecur: event.startDate,\n            daysOfWeek: event.daysOfWeek,\n            color: \"red\",\n            extendedProps: {\n              location: event.extendedProps.location,\n              invitees: event.extendedProps.invitees,\n              description: event.extendedProps.description,\n              eventId: event.extendedProps.eventId,\n              eventType: \"event\"\n            }\n          });\n        } else {\n          array.push({\n            title: event.title,\n            // allDay: allDay,\n            start: start,\n            end: end,\n            color: \"red\",\n            extendedProps: {\n              location: event.extendedProps.location,\n              invitees: event.extendedProps.invitees,\n              description: event.extendedProps.description,\n              eventId: event.extendedProps.eventId,\n              eventType: \"event\"\n            }\n          });\n        }\n      });\n      console.log(array);\n      setEvents(events => [...events, ...array]);\n    }\n  }, [fetchEvents]);\n  useEffect(() => {\n    if (fetchWorkOrders) {\n      fetchWorkOrders.workOrders.map(workOrder => {\n        setEvents(events => [...events, {\n          title: workOrder.serviceDescription,\n          allDay: workOrder.allDay,\n          start: `${workOrder.serviceDate}T${workOrder.serviceStartTime}`,\n          end: `${workOrder.serviceDate}T${workOrder.serviceEndTime}`,\n          color: \"green\",\n          extendedProps: {\n            workOrderId: workOrder.workOrderId\n          }\n        }]);\n      });\n    }\n  }, [fetchWorkOrders]);\n\n  const toggle = event => {\n    setCurEvent(event);\n    setIsOpen(!isOpen);\n  };\n\n  const handleEventClick = event => {\n    const workOrderId = event.event._def.extendedProps.workOrderId;\n    const eventType = event.event._def.extendedProps.eventType;\n\n    if (workOrderId) {\n      history.push(`/dashboard/workorders/${workOrderId}`);\n    }\n\n    if (eventType) {\n      toggle(event.event._def);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, bootstrapPlugin],\n    initialView: \"dayGridMonth\",\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n    },\n    events: events,\n    eventClick: handleEventClick,\n    themeSystem: \"bootstrap\",\n    height: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, curEvent && curEvent.title), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    disabled: true,\n    value: curEvent.extendedProps && curEvent.extendedProps.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"Delete Event\"))));\n};\n\nexport default TaskCalendar;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Calendar.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","bootstrapPlugin","TaskCalendar","flag","state","taskToggleReducer","calendarView","events","setEvents","curEvent","setCurEvent","tasks","setTasks","fetchTasks","getTasksReducer","otherEvents","setOtherEvents","fetchEvents","getEventsReducer","workOrders","setWorkOrders","fetchWorkOrders","getWorkOrdersReducer","isOpen","setIsOpen","dispatch","history","map","task","title","taskDescription","date","taskDate","start","end","array","event","startDate","startTime","endDate","endTime","recurring","push","startRecur","daysOfWeek","color","extendedProps","location","invitees","description","eventId","eventType","console","log","workOrder","serviceDescription","allDay","serviceDate","serviceStartTime","serviceEndTime","workOrderId","toggle","handleEventClick","_def","left","center","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\n\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"../../styles/task.scss\";\n\nconst TaskCalendar = () => {\n  const flag = useSelector((state) => state.taskToggleReducer.calendarView);\n  const [events, setEvents] = useState([]);\n  const [curEvent, setCurEvent] = useState();\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector((state) => state.getTasksReducer.tasks);\n  const [otherEvents, setOtherEvents] = useState([]);\n  const fetchEvents = useSelector((state) => state.getEventsReducer.events);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (fetchTasks) {\n      fetchTasks.tasks.map((task) => {\n        setEvents((events) => [\n          ...events,\n          {\n            title: task.taskDescription,\n            date: task.taskDate,\n          },\n        ]);\n      });\n    }\n  }, [fetchTasks]);\n\n  useEffect(() => {\n    let start = \"\";\n    let end = \"\";\n\n    if (fetchEvents) {\n      const array = [];\n\n      fetchEvents.events.map((event) => {\n        // if (event.startTime === \"\") {\n        //   let allDay = true;\n        // }\n\n        if (event.startDate !== \"\" && event.startTime !== \"\") {\n          start = `${event.startDate}T${event.startTime}`;\n        } else {\n          start = event.startDate;\n        }\n\n        if (event.endDate === \"\" && event.endTime === \"\") {\n          end = event.startDate;\n        } else if (event.endDate === \"\" && event.endTime !== \"\") {\n          end = `${event.startDate}T${event.endTime}`;\n        } else if (event.endDate !== \"\" && event.endTime !== \"\") {\n          end = `${event.endDate}T${event.endTime}`;\n        } else {\n          end = event.endDate;\n        }\n\n        if (event.recurring) {\n          array.push({\n            title: event.title,\n            // allDay: allDay,\n            startTime: event.startTime,\n            endTime: event.endTime,\n            startRecur: event.startDate,\n            daysOfWeek: event.daysOfWeek,\n            color: \"red\",\n            extendedProps: {\n              location: event.extendedProps.location,\n              invitees: event.extendedProps.invitees,\n              description: event.extendedProps.description,\n              eventId: event.extendedProps.eventId,\n              eventType: \"event\",\n            },\n          });\n        } else {\n          array.push({\n            title: event.title,\n            // allDay: allDay,\n            start: start,\n            end: end,\n            color: \"red\",\n            extendedProps: {\n              location: event.extendedProps.location,\n              invitees: event.extendedProps.invitees,\n              description: event.extendedProps.description,\n              eventId: event.extendedProps.eventId,\n              eventType: \"event\",\n            },\n          });\n        }\n      });\n      console.log(array);\n      setEvents((events) => [...events, ...array]);\n    }\n  }, [fetchEvents]);\n\n  useEffect(() => {\n    if (fetchWorkOrders) {\n      fetchWorkOrders.workOrders.map((workOrder) => {\n        setEvents((events) => [\n          ...events,\n          {\n            title: workOrder.serviceDescription,\n            allDay: workOrder.allDay,\n            start: `${workOrder.serviceDate}T${workOrder.serviceStartTime}`,\n            end: `${workOrder.serviceDate}T${workOrder.serviceEndTime}`,\n            color: \"green\",\n            extendedProps: {\n              workOrderId: workOrder.workOrderId,\n            },\n          },\n        ]);\n      });\n    }\n  }, [fetchWorkOrders]);\n\n  const toggle = (event) => {\n    setCurEvent(event);\n    setIsOpen(!isOpen);\n  };\n\n  const handleEventClick = (event) => {\n    const workOrderId = event.event._def.extendedProps.workOrderId;\n    const eventType = event.event._def.extendedProps.eventType;\n\n    if (workOrderId) {\n      history.push(`/dashboard/workorders/${workOrderId}`);\n    }\n\n    if (eventType) {\n      toggle(event.event._def);\n    }\n  };\n\n  return (\n    <div className=\"calendar-page\">\n      <FullCalendar\n        plugins={[\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin,\n          bootstrapPlugin,\n        ]}\n        initialView=\"dayGridMonth\"\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        }}\n        events={events}\n        eventClick={handleEventClick}\n        themeSystem=\"bootstrap\"\n        height=\"auto\"\n      />\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{curEvent && curEvent.title}</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                type=\"textarea\"\n                disabled\n                value={curEvent.extendedProps && curEvent.extendedProps.description}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\">Delete Event</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TaskCalendar;\n"]},"metadata":{},"sourceType":"module"}