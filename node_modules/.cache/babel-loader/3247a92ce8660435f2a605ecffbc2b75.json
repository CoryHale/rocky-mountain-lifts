{"ast":null,"code":"import _regeneratorRuntime from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axiosWithAuth from\"../contexts/withAuth\";import{dbUrl}from\"./index\";export var DELETE_EVENT_START=\"DELETE_EVENT_START\";export var DELETE_EVENT_SUCCESS=\"DELETE_EVENT_SUCCESS\";export var DELETE_EVENT_FAILURE=\"DELETE_EVENT_FAILURE\";export var deleteEvent=function deleteEvent(eventId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var axiosAuth;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:DELETE_EVENT_START});_context.next=3;return axiosWithAuth();case 3:axiosAuth=_context.sent;return _context.abrupt(\"return\",axiosAuth.delete(\"\".concat(dbUrl,\"/event/\").concat(eventId)).then(function(){dispatch({type:DELETE_EVENT_SUCCESS,payload:\"SUCCESS\"});}).catch(function(err){dispatch({type:DELETE_EVENT_FAILURE,payload:err.response.data});}));case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/actions/deleteEvent.js"],"names":["axiosWithAuth","dbUrl","DELETE_EVENT_START","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAILURE","deleteEvent","eventId","dispatch","type","axiosAuth","delete","then","payload","catch","err","response","data"],"mappings":"2XAAA,MAAOA,CAAAA,aAAP,KAA0B,sBAA1B,CACA,OAASC,KAAT,KAAsB,SAAtB,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,oBAA3B,CACP,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,sBAA7B,CACP,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,sBAA7B,CAEP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,iGAAa,iBAAOC,QAAP,gIACtCA,QAAQ,CAAC,CAAEC,IAAI,CAAEN,kBAAR,CAAD,CAAR,CADsC,sBAGdF,CAAAA,aAAa,EAHC,QAGhCS,SAHgC,+CAK/BA,SAAS,CACbC,MADI,WACMT,KADN,mBACqBK,OADrB,GAEJK,IAFI,CAEC,UAAM,CACVJ,QAAQ,CAAC,CACPC,IAAI,CAAEL,oBADC,CAEPS,OAAO,CAAE,SAFF,CAAD,CAAR,CAID,CAPI,EAQJC,KARI,CAQE,SAACC,GAAD,CAAS,CACdP,QAAQ,CAAC,CACPC,IAAI,CAAEJ,oBADC,CAEPQ,OAAO,CAAEE,GAAG,CAACC,QAAJ,CAAaC,IAFf,CAAD,CAAR,CAID,CAbI,CAL+B,wDAAb,gEAApB","sourcesContent":["import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const DELETE_EVENT_START = \"DELETE_EVENT_START\";\nexport const DELETE_EVENT_SUCCESS = \"DELETE_EVENT_SUCCESS\";\nexport const DELETE_EVENT_FAILURE = \"DELETE_EVENT_FAILURE\";\n\nexport const deleteEvent = (eventId) => async (dispatch) => {\n  dispatch({ type: DELETE_EVENT_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .delete(`${dbUrl}/event/${eventId}`)\n    .then(() => {\n      dispatch({\n        type: DELETE_EVENT_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: DELETE_EVENT_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};"]},"metadata":{},"sourceType":"module"}