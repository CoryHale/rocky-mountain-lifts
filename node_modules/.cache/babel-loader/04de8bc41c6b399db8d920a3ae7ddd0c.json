{"ast":null,"code":"import { GET_WORK_ORDER_START, GET_WORK_ORDER_SUCCESS, GET_WORK_ORDER_FAILURE } from \"../actions\";\nconst initialState = {\n  workOrder: null,\n  users: [],\n  gettingWorkOrder: false,\n  error: null\n};\nexport const getWorkOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_WORK_ORDER_START:\n      return { ...state,\n        gettingWorkOrder: true\n      };\n\n    case GET_WORK_ORDER_SUCCESS:\n      return { ...state,\n        gettingWorkOrder: false,\n        workOrder: action.payload.workOrder,\n        users: action.payload.responseArray\n      };\n\n    case GET_WORK_ORDER_FAILURE:\n      return { ...state,\n        gettingWorkOrder: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts/src/reducers/getWorkOrderReducer.js"],"names":["GET_WORK_ORDER_START","GET_WORK_ORDER_SUCCESS","GET_WORK_ORDER_FAILURE","initialState","workOrder","users","gettingWorkOrder","error","getWorkOrderReducer","state","action","type","payload","responseArray"],"mappings":"AAAA,SACEA,oBADF,EAEEC,sBAFF,EAGEC,sBAHF,QAIO,YAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,IADQ;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,gBAAgB,EAAE,KAHC;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,oBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,gBAAgB,EAAE;AAFb,OAAP;;AAIF,SAAKL,sBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,gBAAgB,EAAE,KAFb;AAGLF,QAAAA,SAAS,EAAEM,MAAM,CAACE,OAAP,CAAeR,SAHrB;AAILC,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeC;AAJjB,OAAP;;AAMF,SAAKX,sBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,gBAAgB,EAAE,KAFb;AAGLC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAHT,OAAP;;AAKF;AACE,aAAOH,KAAP;AApBJ;AAsBD,CAvBM","sourcesContent":["import {\n  GET_WORK_ORDER_START,\n  GET_WORK_ORDER_SUCCESS,\n  GET_WORK_ORDER_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  workOrder: null,\n  users: [],\n  gettingWorkOrder: false,\n  error: null,\n};\n\nexport const getWorkOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_WORK_ORDER_START:\n      return {\n        ...state,\n        gettingWorkOrder: true,\n      };\n    case GET_WORK_ORDER_SUCCESS:\n      return {\n        ...state,\n        gettingWorkOrder: false,\n        workOrder: action.payload.workOrder,\n        users: action.payload.responseArray,\n      };\n    case GET_WORK_ORDER_FAILURE:\n      return {\n        ...state,\n        gettingWorkOrder: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}