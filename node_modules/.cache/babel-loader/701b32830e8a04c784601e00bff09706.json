{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Form, FormGroup, Label, Input, FormFeedback, Button, Modal, ModalHeader, ModalBody, ModalFooter, Table, Card } from 'reactstrap';\nimport Select from 'react-select';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getCustomer } from '../../actions/getCustomer';\nimport { addEmployeeToCustomer } from '../../actions/addEmployeeToCustomer';\nimport { getCustomerTasks } from '../../actions/getCustomerTasks';\nimport { getUsers } from '../../actions/getUsers';\nimport { addTask } from '../../actions/addTask';\nimport { getCustomerNotes } from '../../actions/getCustomerNotes';\nimport '../../styles/employee-dashboard.scss';\nimport classnames from 'classnames';\n\nconst CustomerPage = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n  const [activeTab, setActiveTab] = useState('1');\n  const [addEmployeeModalOpen, setAddEmployeeModalOpen] = useState(false);\n  const [employee, setEmployee] = useState({\n    firstName: '',\n    lastName: '',\n    jobTitle: '',\n    officeNumber: '',\n    cellNumber: '',\n    email: ''\n  });\n  const [addEmployeeErrors, setAddEmployeeErrors] = useState({});\n  const [flag, setFlag] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const getTasksFromState = useSelector(state => state.getCustomerTasksReducer.tasks);\n  const [addTaskModalOpen, setAddTaskModalOpen] = useState(false);\n  const [task, setTask] = useState({\n    taskDate: '',\n    taskTime: '',\n    taskDescription: '',\n    customerId: '',\n    employeeId: ''\n  });\n  const [employees, setEmployees] = useState([]);\n  const employeeArray = [];\n  const getUsersFromState = useSelector(state => state.getUsersReducer.users);\n  const getAddTaskSuccess = useSelector(state => state.addTaskReducer.success);\n  const [addTaskErrors, setAddTaskErrors] = useState({});\n  const getAddTaskErrors = useSelector(state => state.addTaskReducer.errors);\n  const [notes, setNotes] = useState([]);\n  const getNotesFromState = useSelector(state => state.getCustomerNotesReducer.notes);\n  const [addNoteModalOpen, setAddNoteModalOpen] = useState(false);\n  const [note, setNote] = useState({\n    note: '',\n    createdAt: '',\n    createdBy: ''\n  });\n  const [editCustomer, setEditCustomer] = useState({\n    businessName: '',\n    industry: '',\n    primaryContact: {\n      firstName: '',\n      lastName: ''\n    },\n    billingContact: {\n      firstName: '',\n      lastName: ''\n    },\n    primaryOfficeNumber: '',\n    primaryExt: '',\n    primaryCellNumber: '',\n    primaryEmail: '',\n    primaryJobTitle: '',\n    billingOfficeNumber: '',\n    billingExt: '',\n    billingCellNumber: '',\n    billingEmail: '',\n    billingJobTitle: '',\n    shopAddress: {\n      address: '',\n      city: '',\n      state: '',\n      zipcode: ''\n    },\n    billingAddress: {\n      address: '',\n      city: '',\n      state: '',\n      zipcode: ''\n    },\n    noBillingContact: false\n  });\n  const [editCustomerErrors, setEditCustomerErrors] = useState({});\n  const [editCustomerModalOpen, setEditCustomerModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split('/');\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomer(customerId));\n    dispatch(getCustomerTasks(customerId));\n    dispatch(getUsers());\n    dispatch(getCustomerNotes(customerId));\n  }, []);\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n      setTask({ ...task,\n        customerId: getCustomerFromState.userId\n      });\n    }\n\n    ;\n  }, [getCustomerFromState]);\n  useEffect(() => {\n    if (getTasksFromState) {\n      setTasks(getTasksFromState);\n    }\n\n    ;\n  }, [getTasksFromState]);\n  useEffect(() => {\n    if (getNotesFromState) {\n      console.log(getNotesFromState);\n      setNotes(getNotesFromState);\n    }\n\n    ;\n  }, [getNotesFromState]);\n  useEffect(() => {\n    if (flag) {\n      setFlag(false);\n      dispatch(addEmployeeToCustomer(customer));\n      toggleAddEmployeeModal();\n    }\n\n    ;\n  }, [flag]);\n  useEffect(() => {\n    if (getUsersFromState.users) {\n      getUsersFromState.users.map(user => {\n        if (user.userType === 'employee' && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: 'employeeId',\n            jobTitle: user.jobTitle\n          });\n        }\n\n        ;\n      });\n      setEmployees(employeeArray);\n    }\n\n    ;\n  }, [getUsersFromState]);\n  useEffect(() => {\n    if (getAddTaskSuccess) {\n      console.log(getAddTaskSuccess);\n      toggleAddTaskModal();\n    }\n\n    ;\n  }, [getAddTaskSuccess]);\n  useEffect(() => {\n    if (getAddTaskErrors) {\n      setAddTaskErrors(getAddTaskErrors);\n    }\n\n    ;\n  }, [getAddTaskErrors]);\n\n  const dateConverter = date => {\n    const dateArray = date.split('-');\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = time => {\n    const timeArray = time.split(':');\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = 'AM';\n    } else {\n      m = 'PM';\n    }\n\n    ;\n\n    if (hour === 0) {\n      const newHour = '12';\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    ;\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const employeeFinder = employeeId => {\n    employees.forEach(employee => {\n      if (employee.value === employeeId) {\n        return employee.label;\n      }\n\n      ;\n    });\n  };\n\n  const toggleTab = tab => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n\n    ;\n  };\n\n  const toggleAddEmployeeModal = () => {\n    if (addEmployeeModalOpen) {\n      setEmployee({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        officeNumber: '',\n        cellNumber: '',\n        email: ''\n      });\n      setAddEmployeeErrors({});\n    }\n\n    ;\n    setAddEmployeeModalOpen(!addEmployeeModalOpen);\n  };\n\n  const toggleAddTaskModal = () => {\n    if (addTaskModalOpen) {\n      setTask({ ...task,\n        taskDate: '',\n        taskTime: '',\n        taskDescription: '',\n        employeeId: ''\n      });\n      setAddTaskErrors({});\n    }\n\n    ;\n    setAddTaskModalOpen(!addTaskModalOpen);\n  };\n\n  const toggleAddNoteModal = () => {\n    if (addNoteModalOpen) {\n      setNote({\n        note: '',\n        createdAt: '',\n        createdBy: ''\n      });\n    }\n\n    ;\n    setAddNoteModalOpen(!addNoteModalOpen);\n  };\n\n  const toggleEditCustomerModal = () => {\n    if (editCustomerModalOpen) {\n      setEditCustomer({\n        businessName: '',\n        industry: '',\n        primaryContact: {\n          firstName: '',\n          lastName: ''\n        },\n        billingContact: {\n          firstName: '',\n          lastName: ''\n        },\n        primaryOfficeNumber: '',\n        primaryExt: '',\n        primaryCellNumber: '',\n        primaryEmail: '',\n        primaryJobTitle: '',\n        billingOfficeNumber: '',\n        billingExt: '',\n        billingCellNumber: '',\n        billingEmail: '',\n        billingJobTitle: '',\n        shopAddress: {\n          address: '',\n          city: '',\n          state: '',\n          zipcode: ''\n        },\n        billingAddress: {\n          address: '',\n          city: '',\n          state: '',\n          zipcode: ''\n        },\n        noBillingContact: false\n      });\n      setEditCustomerErrors({});\n    }\n\n    ;\n    setEditCustomerModalOpen(!editCustomerModalOpen);\n  };\n\n  const handleAddEmployeeChange = e => {\n    setEmployee({ ...employee,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleAddTaskChange = e => {\n    setTask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleAddTaskSelectChange = e => {\n    setTask({ ...task,\n      [e.name]: e.value\n    });\n  };\n\n  const handleAddNoteChange = e => {\n    setNote({ ...note,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleEditCustomerChange = e => {\n    setEditCustomer({ ...editCustomer,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleAddEmployeeSubmit = e => {\n    e.preventDefault();\n    let errors = {};\n\n    if (employee.firstName === '') {\n      errors.firstName = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.lastName === '') {\n      errors.lastName = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.jobTitle === '') {\n      errors.jobTitle = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.officeNumber === '' && employee.cellNumber === '') {\n      errors.officeNumber = 'Must not be empty';\n      errors.cellNumber = 'Must not be empty';\n    } else if (employee.officeNumber !== '' && !employee.officeNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n      errors.officeNumber = 'Must be a valid phone number';\n    } else if (employee.cellNumber !== '' && !employee.cellNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n      errors.cellNumber = 'Must be a valid phone number';\n    }\n\n    ;\n\n    if (employee.email === '') {\n      errors.email = 'Must not be empty';\n    } else if (!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n      errors.email = 'Must be a valid email address';\n    }\n\n    ;\n    setAddEmployeeErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      if (customer.employees.length === 0) {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [employee]\n        });\n      } else {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [...customer.employees, employee]\n        });\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const handleAddTaskSubmit = e => {\n    e.preventDefault();\n    dispatch(addTask(task));\n  };\n\n  const handleAddNoteSubmit = e => {\n    e.preventDefault();\n    console.log(\"Note Submitted\");\n  };\n\n  const handleEditCustomerSubmit = e => {\n    e.preventDefault();\n    console.log(\"Edit Submitted\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 21\n    }\n  }, customer.businessName), /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggleTab('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 29\n    }\n  }, \"Info\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: () => {\n      toggleTab('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 29\n    }\n  }, \"Tasks\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '3'\n    }),\n    onClick: () => {\n      toggleTab('3');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 29\n    }\n  }, \"Appointments\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '4'\n    }),\n    onClick: () => {\n      toggleTab('4');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 29\n    }\n  }, \"Notes\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '5'\n    }),\n    onClick: () => {\n      toggleTab('5');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 29\n    }\n  }, \"Employees\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '6'\n    }),\n    onClick: () => {\n      toggleTab('6');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 29\n    }\n  }, \"Lifts\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '7'\n    }),\n    onClick: () => {\n      toggleTab('7');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 29\n    }\n  }, \"Documents\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-info-page-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"customer-page-info-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 45\n    }\n  }, \"Primary Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 49\n    }\n  }, \"Name: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 58\n    }\n  }, customer.primaryContact ? customer.primaryContact.firstName : null, \" \", customer.primaryContact ? customer.primaryContact.lastName : null)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 49\n    }\n  }, \"Job Title: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 63\n    }\n  }, customer.primaryJobTitle)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 49\n    }\n  }, \"Office: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: customer.primaryExt ? `tel:+1-${customer.primaryOfficeNumber},${customer.primaryExt}` : `tel:+1-${customer.primaryOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 60\n    }\n  }, customer.primaryExt ? `${customer.primaryOfficeNumber}, .ext ${customer.primaryExt}` : `${customer.primaryOfficeNumber}`)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 49\n    }\n  }, \"Cell: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 58\n    }\n  }, customer.primaryCellNumber)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 49\n    }\n  }, \"Email: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.primaryEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 59\n    }\n  }, customer.primaryEmail)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 45\n    }\n  }, \"Billing Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 49\n    }\n  }, \"Name: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 58\n    }\n  }, customer.billingContact ? customer.billingContact.firstName : null, \" \", customer.billingContact ? customer.billingContact.lastName : null)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 49\n    }\n  }, \"Job Title: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 63\n    }\n  }, customer.billingJobTitle)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 49\n    }\n  }, \"Office: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: customer.billingExt ? `tel:+1-${customer.billingOfficeNumber},${customer.billingExt}` : `tel:+1-${customer.billingOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 60\n    }\n  }, customer.billingExt ? `${customer.billingOfficeNumber}, .ext ${customer.billingExt}` : `${customer.billingOfficeNumber}`)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 49\n    }\n  }, \"Cell: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 58\n    }\n  }, customer.billingCellNumber)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 49\n    }\n  }, \"Email: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.billingEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 59\n    }\n  }, customer.billingEmail))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-addresses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 45\n    }\n  }, \"Shop Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://maps.google.com/?q=${customer.shopAddress ? customer.shopAddress.address : null}, ${customer.shopAddress ? customer.shopAddress.city : null}, ${customer.shopAddress ? customer.shopAddress.state : null} ${customer.shopAddress ? customer.shopAddress.zipcode : null}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"address-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 49\n    }\n  }, customer.shopAddress ? customer.shopAddress.address : null, \",\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 49\n    }\n  }, customer.shopAddress ? customer.shopAddress.city : null, \", \", customer.shopAddress ? customer.shopAddress.state : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 49\n    }\n  }, customer.shopAddress ? customer.shopAddress.zipcode : null))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 45\n    }\n  }, \"Billing Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://maps.google.com/?q=${customer.billingAddress ? customer.billingAddress.address : null}, ${customer.billingAddress ? customer.billingAddress.city : null}, ${customer.billingAddress ? customer.billingAddress.state : null} ${customer.billingAddress ? customer.billingAddress.zipcode : null}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"address-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 49\n    }\n  }, customer.billingAddress ? customer.billingAddress.address : null, \",\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 49\n    }\n  }, customer.billingAddress ? customer.billingAddress.city : null, \", \", customer.billingAddress ? customer.billingAddress.state : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 49\n    }\n  }, customer.billingAddress ? customer.billingAddress.zipcode : null))))), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    className: \"info-edit-button\",\n    onClick: toggleEditCustomerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-pen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 128\n    }\n  }), \" Edit\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-task-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    className: \"task-table-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-headers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 45\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 45\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 45\n    }\n  }, \"Time\")))), tasks ? tasks.tasks ? tasks.tasks.map(task => /*#__PURE__*/React.createElement(Card, {\n    className: \"task-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    className: \"task-card-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 53\n    }\n  }, task.taskDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 53\n    }\n  }, dateConverter(task.taskDate)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 53\n    }\n  }, timeConverter(task.taskTime))))))) : null : null, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleAddTaskModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 33\n    }\n  }, \"Add Task\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 29\n    }\n  }, \"Appointments\")), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-note-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 29\n    }\n  }, notes ? notes.notes ? notes.notes.map(note => /*#__PURE__*/React.createElement(Card, {\n    className: \"note-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 41\n    }\n  }, note.note), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 45\n    }\n  }, \"Created By: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 60\n    }\n  }, note => {\n    const name = employeeFinder(note.createdBy);\n    console.log(name);\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 45\n    }\n  }, \"Created At: \", note.createdAt)))) : null : null, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleAddNoteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 33\n    }\n  }, \"Add Note\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"sm\",\n    hover: true,\n    className: \"customer-page-employees-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 41\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 41\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 41\n    }\n  }, \"Office Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 41\n    }\n  }, \"Cell Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 41\n    }\n  }, \"Email\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 41\n    }\n  }, customer.primaryContact ? customer.primaryContact.firstName : null, \" \", customer.primaryContact ? customer.primaryContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 41\n    }\n  }, customer.primaryJobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 45\n    }\n  }, customer.primaryOfficeNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 45\n    }\n  }, customer.primaryCellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.primaryEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 45\n    }\n  }, customer.primaryEmail))), customer.billingJobTitle !== '' ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 45\n    }\n  }, customer.billingContact ? customer.billingContact.firstName : null, \" \", customer.billingContact ? customer.billingContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 45\n    }\n  }, customer.billingJobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 49\n    }\n  }, customer.billingOfficeNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 49\n    }\n  }, customer.billingCellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.billingEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 49\n    }\n  }, customer.billingEmail))) : null, customer.employees ? customer.employees.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 45\n    }\n  }, employee.firstName, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 45\n    }\n  }, employee.jobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.officeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 49\n    }\n  }, employee.officeNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.cellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 49\n    }\n  }, employee.cellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${employee.email}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 49\n    }\n  }, employee.email)))) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 33\n    }\n  }, \"Add Employee\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 29\n    }\n  }, \"Lifts\")), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 29\n    }\n  }, \"Coming Soon!!!\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: addEmployeeModalOpen,\n    toggle: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 21\n    }\n  }, \"Add Employee\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddEmployeeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-name-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeFirstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 37\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.firstName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 37\n    }\n  }, addEmployeeErrors.firstName)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeLastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 37\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.lastName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 37\n    }\n  }, addEmployeeErrors.lastName))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeJobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 33\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"jobTitle\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.jobTitle ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.jobTitle)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeOfficeNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 33\n    }\n  }, \"Office Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"officeNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.officeNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.officeNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeCellNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 33\n    }\n  }, \"Cell Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"cellNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.cellNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.cellNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"example@example.com\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.email ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.email)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleAddEmployeeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: addTaskModalOpen,\n    toggle: toggleAddTaskModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleAddTaskModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 21\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddTaskSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task-date-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 37\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"taskDate\",\n    placeholder: \"date placeholder\",\n    onChange: handleAddTaskChange,\n    invalid: addTaskErrors.taskDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 37\n    }\n  }, addTaskErrors.taskDate)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 37\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"taskTime\",\n    placeholder: \"time placeholder\",\n    onChange: handleAddTaskChange,\n    invalid: addTaskErrors.taskTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 37\n    }\n  }, addTaskErrors.taskTime))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 33\n    }\n  }, \"Task Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"taskDescription\",\n    onChange: handleAddTaskChange,\n    invalid: addTaskErrors.taskDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 33\n    }\n  }, addTaskErrors.taskDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 33\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"employeeId\",\n    options: employees,\n    onChange: handleAddTaskSelectChange,\n    className: addTaskErrors.employeeId ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: addTaskErrors.employeeId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 33\n    }\n  }, addTaskErrors.employeeId)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleAddTaskSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: addNoteModalOpen,\n    toggle: toggleAddNoteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleAddNoteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 21\n    }\n  }, \"Add Note\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddNoteSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 33\n    }\n  }, \"Note\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"note\",\n    onChange: handleAddNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleAddNoteSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 25\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: editCustomerModalOpen,\n    toggle: toggleEditCustomerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleEditCustomerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 17\n    }\n  }, \"Edit Customer\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleEditCustomerSubmit,\n    className: \"add-customer-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"businessName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 29\n    }\n  }, \"Business Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"businessName\",\n    onChange: handleEditCustomerChange,\n    invalid: editCustomerErrors.businessName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 29\n    }\n  }, editCustomerErrors.businessName)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"industry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 29\n    }\n  }, \"Industry\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"industry\",\n    onChange: handleEditCustomerChange,\n    invalid: editCustomerErrors.industry ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 29\n    }\n  }, editCustomerErrors.industry)), /*#__PURE__*/React.createElement(Label, {\n    for: \"primary-contact\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 25\n    }\n  }, \"Primary Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"primary-contact-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 33\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handlePrimaryContactChange,\n    invalid: editCustomerErrors.primaryContact ? editCustomerErrors.primaryContact.firstName ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 33\n    }\n  }, editCustomerErrors.primaryContact ? editCustomerErrors.primaryContact.firstName ? editCustomerErrors.primaryContact.firstName : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 33\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handlePrimaryContactChange,\n    invalid: editCustomerErrors.primaryContact ? editCustomerErrors.primaryContact.lastName ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 33\n    }\n  }, editCustomerErrors.primaryContact ? editCustomerErrors.primaryContact.lastName ? editCustomerErrors.primaryContact.lastName : null : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"primary-phone-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"primary-office-phone-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"primary-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"primaryOfficeNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 37\n    }\n  }, \"Office Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"primaryOfficeNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    invalid: editCustomerErrors.primaryOfficeNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 37\n    }\n  }, editCustomerErrors.primaryOfficeNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"primary-ext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"primaryExt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 37\n    }\n  }, \"ext.\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"primaryExt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"primaryCellNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 33\n    }\n  }, \"Cell Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"primaryCellNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    invalid: editCustomerErrors.primaryCellNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 33\n    }\n  }, editCustomerErrors.primaryCellNumber))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"primary-email-jobTitle-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"primaryEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"primaryEmail\",\n    placeholder: \"example@example.com\",\n    onChange: handleChange,\n    invalid: editCustomerErrors.primaryEmail ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 33\n    }\n  }, editCustomerErrors.primaryEmail)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"primaryJobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 33\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"primaryJobTitle\",\n    onChange: handleChange,\n    invalid: editCustomerErrors.primaryJobTitle ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 33\n    }\n  }, editCustomerErrors.primaryJobTitle))), /*#__PURE__*/React.createElement(Label, {\n    for: \"shop-address\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 25\n    }\n  }, \"Shop Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-address-city-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 37\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"address\",\n    onChange: handleShopAddressChange,\n    invalid: editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.address ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 37\n    }\n  }, editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.address ? editCustomerErrors.shopAddress.address : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 37\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"city\",\n    onChange: handleShopAddressChange,\n    invalid: editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.city ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 37\n    }\n  }, editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.city ? editCustomerErrors.shopAddress.city : null : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-state-zipcode-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 37\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"state\",\n    onChange: handleShopAddressChange,\n    invalid: editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.state ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 37\n    }\n  }, editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.state ? editCustomerErrors.shopAddress.state : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"zipcode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 37\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"zipcode\",\n    onChange: handleShopAddressChange,\n    invalid: editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.zipcode ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 37\n    }\n  }, editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.zipcode ? editCustomerErrors.shopAddress.zipcode : null : null)))), /*#__PURE__*/React.createElement(Label, {\n    for: \"billing-contact\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 25\n    }\n  }, \"Billing Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-contact-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 33\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handleBillingContactChange,\n    invalid: editCustomerErrors.billingContact ? editCustomerErrors.billingContact.firstName ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 33\n    }\n  }, editCustomerErrors.billingContact ? editCustomerErrors.billingContact.firstName ? editCustomerErrors.billingContact.firstName : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 33\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handleBillingContactChange,\n    invalid: editCustomerErrors.billingContact ? editCustomerErrors.billingContact.lastName ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 33\n    }\n  }, editCustomerErrors.billingContact ? editCustomerErrors.billingContact.lastName ? editCustomerErrors.billingContact.lastName : null : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-phone-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-office-phone-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"billing-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billingOfficeNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 37\n    }\n  }, \"Office Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"billingOfficeNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    invalid: editCustomerErrors.billingOfficeNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 37\n    }\n  }, editCustomerErrors.billingOfficeNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"billing-ext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billingExt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 37\n    }\n  }, \"ext.\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"billingExt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billingCellNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 33\n    }\n  }, \"Cell Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"billingCellNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    invalid: editCustomerErrors.billingCellNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 33\n    }\n  }, editCustomerErrors.billingCellNumber))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-email-jobTitle-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billingEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"billingEmail\",\n    placeholder: \"example@example.com\",\n    onChange: handleChange,\n    invalid: editCustomerErrors.billingEmail ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 33\n    }\n  }, editCustomerErrors.billingEmail)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billingJobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 33\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"billingJobTitle\",\n    onChange: handleChange,\n    invalid: editCustomerErrors.billingJobTitle ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 33\n    }\n  }, editCustomerErrors.billingJobTitle))), /*#__PURE__*/React.createElement(Label, {\n    for: \"billing-address\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 25\n    }\n  }, \"Billing Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-address-city-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 37\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"address\",\n    onChange: handleBillingAddressChange,\n    invalid: editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.address ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 37\n    }\n  }, editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.address ? editCustomerErrors.billingAddress.address : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 37\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"city\",\n    onChange: handleBillingAddressChange,\n    invalid: editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.city ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 37\n    }\n  }, editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.city ? editCustomerErrors.billingAddress.city : null : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-state-zipcode-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 37\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"state\",\n    onChange: handleBillingAddressChange,\n    invalid: editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.state ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 37\n    }\n  }, editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.state ? editCustomerErrors.billingAddress.state : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"zipcode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 37\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"zipcode\",\n    onChange: handleBillingAddressChange,\n    invalid: editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.zipcode ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 37\n    }\n  }, editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.zipcode ? editCustomerErrors.billingAddress.zipcode : null : null)))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"checkbox-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    onClick: toggleBillingContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 33\n    }\n  }), ' ', \"No Billing Contact\"))))));\n};\n\nexport default CustomerPage;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLocation","TabContent","TabPane","Nav","NavItem","NavLink","Form","FormGroup","Label","Input","FormFeedback","Button","Modal","ModalHeader","ModalBody","ModalFooter","Table","Card","Select","EmployeeNavbar","EmployeeSidebar","Footer","getCustomer","addEmployeeToCustomer","getCustomerTasks","getUsers","addTask","getCustomerNotes","classnames","CustomerPage","customer","setCustomer","getCustomerFromState","state","getCustomerReducer","activeTab","setActiveTab","addEmployeeModalOpen","setAddEmployeeModalOpen","employee","setEmployee","firstName","lastName","jobTitle","officeNumber","cellNumber","email","addEmployeeErrors","setAddEmployeeErrors","flag","setFlag","tasks","setTasks","getTasksFromState","getCustomerTasksReducer","addTaskModalOpen","setAddTaskModalOpen","task","setTask","taskDate","taskTime","taskDescription","customerId","employeeId","employees","setEmployees","employeeArray","getUsersFromState","getUsersReducer","users","getAddTaskSuccess","addTaskReducer","success","addTaskErrors","setAddTaskErrors","getAddTaskErrors","errors","notes","setNotes","getNotesFromState","getCustomerNotesReducer","addNoteModalOpen","setAddNoteModalOpen","note","setNote","createdAt","createdBy","editCustomer","setEditCustomer","businessName","industry","primaryContact","billingContact","primaryOfficeNumber","primaryExt","primaryCellNumber","primaryEmail","primaryJobTitle","billingOfficeNumber","billingExt","billingCellNumber","billingEmail","billingJobTitle","shopAddress","address","city","zipcode","billingAddress","noBillingContact","editCustomerErrors","setEditCustomerErrors","editCustomerModalOpen","setEditCustomerModalOpen","dispatch","location","pathArray","pathname","split","length","userId","console","log","toggleAddEmployeeModal","map","user","userType","active","push","label","value","name","toggleAddTaskModal","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","employeeFinder","forEach","toggleTab","tab","toggleAddNoteModal","toggleEditCustomerModal","handleAddEmployeeChange","e","target","handleAddTaskChange","handleAddTaskSelectChange","handleAddNoteChange","handleEditCustomerChange","handleAddEmployeeSubmit","preventDefault","match","Object","keys","handleAddTaskSubmit","handleAddNoteSubmit","handleEditCustomerSubmit","handlePrimaryContactChange","handleChange","handleShopAddressChange","handleBillingContactChange","handleBillingAddressChange","toggleBillingContact"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    TabContent,\n    TabPane,\n    Nav,\n    NavItem,\n    NavLink,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Table,\n    Card\n} from 'reactstrap';\nimport Select from 'react-select';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getCustomer } from '../../actions/getCustomer';\nimport { addEmployeeToCustomer } from '../../actions/addEmployeeToCustomer';\nimport { getCustomerTasks } from '../../actions/getCustomerTasks';\nimport { getUsers } from '../../actions/getUsers';\nimport { addTask } from '../../actions/addTask';\nimport { getCustomerNotes } from '../../actions/getCustomerNotes';\n\nimport '../../styles/employee-dashboard.scss'\nimport classnames from 'classnames';\n\nconst CustomerPage = () => {\n    const [customer, setCustomer] = useState({});\n    const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n    const [activeTab, setActiveTab] = useState('1');\n    const [addEmployeeModalOpen, setAddEmployeeModalOpen] = useState(false);\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        officeNumber: '',\n        cellNumber: '',\n        email: ''\n    });\n    const [addEmployeeErrors, setAddEmployeeErrors] = useState({});\n    const [flag, setFlag] = useState(false);\n    const [tasks, setTasks] = useState([]);\n    const getTasksFromState = useSelector(state => state.getCustomerTasksReducer.tasks);\n    const [addTaskModalOpen, setAddTaskModalOpen] = useState(false);\n    const [task, setTask] = useState({\n        taskDate: '',\n        taskTime: '',\n        taskDescription: '',\n        customerId: '',\n        employeeId: ''\n    });\n    const [employees, setEmployees] = useState([]);\n    const employeeArray = [];\n    const getUsersFromState = useSelector(state => state.getUsersReducer.users);\n    const getAddTaskSuccess = useSelector(state => state.addTaskReducer.success);\n    const [addTaskErrors, setAddTaskErrors] = useState({});\n    const getAddTaskErrors = useSelector(state => state.addTaskReducer.errors);\n    const [notes, setNotes] = useState([]);\n    const getNotesFromState = useSelector(state => state.getCustomerNotesReducer.notes);\n    const [addNoteModalOpen, setAddNoteModalOpen] = useState(false);\n    const [note, setNote] = useState({\n        note: '',\n        createdAt: '',\n        createdBy: ''\n    });\n    const [editCustomer, setEditCustomer] = useState({\n        businessName: '',\n        industry: '',\n        primaryContact: {\n            firstName: '',\n            lastName: ''\n        },\n        billingContact: {\n            firstName: '',\n            lastName: ''\n        },\n        primaryOfficeNumber: '',\n        primaryExt: '',\n        primaryCellNumber: '',\n        primaryEmail: '',\n        primaryJobTitle: '',\n        billingOfficeNumber: '',\n        billingExt: '',\n        billingCellNumber: '',\n        billingEmail: '',\n        billingJobTitle: '',\n        shopAddress: {\n            address: '',\n            city: '',\n            state: '',\n            zipcode: ''\n        },\n        billingAddress: {\n            address: '',\n            city: '',\n            state: '',\n            zipcode: ''\n        },\n        noBillingContact: false\n    });\n    const [editCustomerErrors, setEditCustomerErrors] = useState({});\n    const [editCustomerModalOpen, setEditCustomerModalOpen] = useState(false);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const customerId = pathArray[pathArray.length - 1];\n        dispatch(getCustomer(customerId));\n        dispatch(getCustomerTasks(customerId));\n        dispatch(getUsers());\n        dispatch(getCustomerNotes(customerId));\n    }, []);\n\n    useEffect(() => {\n        if(getCustomerFromState) {\n            setCustomer(getCustomerFromState);\n            setTask({\n                ...task,\n                customerId: getCustomerFromState.userId\n            })\n        };\n    }, [getCustomerFromState]);\n\n    useEffect(() => {\n        if(getTasksFromState) {\n            setTasks(getTasksFromState);\n        };\n    }, [getTasksFromState]);\n\n    useEffect(() => {\n        if(getNotesFromState) {\n            console.log(getNotesFromState)\n            setNotes(getNotesFromState);\n        };\n    }, [getNotesFromState]);\n\n    useEffect(() => {\n        if(flag) {\n            setFlag(false);\n            dispatch(addEmployeeToCustomer(customer));\n            toggleAddEmployeeModal();\n        };\n    }, [flag]);\n\n    useEffect(() => {\n        if(getUsersFromState.users) {\n            getUsersFromState.users.map(user => {\n                if(user.userType === 'employee' && user.active === true) {\n                    employeeArray.push({\n                        label: `${user.firstName} ${user.lastName}`,\n                        value: user.userId,\n                        name: 'employeeId',\n                        jobTitle: user.jobTitle\n                    });\n                };\n            });\n\n            setEmployees(employeeArray);\n        };\n    }, [getUsersFromState]);\n\n    useEffect(() => {\n        if(getAddTaskSuccess) {\n            console.log(getAddTaskSuccess)\n            toggleAddTaskModal();\n        };\n    }, [getAddTaskSuccess]);\n\n    useEffect(() => {\n        if(getAddTaskErrors) {\n            setAddTaskErrors(getAddTaskErrors);\n        };\n    }, [getAddTaskErrors]);\n\n    const dateConverter = date => {\n        const dateArray = date.split('-');\n        return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    };\n\n    const timeConverter = time => {\n        const timeArray = time.split(':');\n        const hour = parseInt(timeArray[0]);\n        let m;\n\n        if(hour <= 11) {\n            m = 'AM';\n        } else {\n            m = 'PM';\n        };\n\n        if(hour === 0) {\n            const newHour = '12';\n            timeArray[0] = newHour;\n        } else if(hour <= 12) {\n            const newHour = hour.toString();\n            timeArray[0] = newHour;\n        } else {\n            const newHour = (hour - 12).toString();\n            timeArray[0] = newHour;\n        };\n\n        return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    };\n\n    const employeeFinder = employeeId => {\n        employees.forEach(employee => {\n            if(employee.value === employeeId) {\n                return employee.label;\n            };\n        });\n    };\n\n    const toggleTab = tab => {\n        if(activeTab !== tab) {\n            setActiveTab(tab);\n        };\n    };\n\n    const toggleAddEmployeeModal = () => {\n        if(addEmployeeModalOpen) {\n            setEmployee({\n                firstName: '',\n                lastName: '',\n                jobTitle: '',\n                officeNumber: '',\n                cellNumber: '',\n                email: ''\n            });\n            setAddEmployeeErrors({});\n        };\n        setAddEmployeeModalOpen(!addEmployeeModalOpen);\n    };\n\n    const toggleAddTaskModal = () => {\n        if(addTaskModalOpen) {\n            setTask({\n                ...task,\n                taskDate: '',\n                taskTime: '',\n                taskDescription: '',\n                employeeId: ''\n            });\n            setAddTaskErrors({});\n        };\n        setAddTaskModalOpen(!addTaskModalOpen);\n    };\n\n    const toggleAddNoteModal = () => {\n        if(addNoteModalOpen) {\n            setNote({\n                note: '',\n                createdAt: '',\n                createdBy: ''\n            });\n        };\n        setAddNoteModalOpen(!addNoteModalOpen);\n    };\n\n    const toggleEditCustomerModal = () => {\n        if(editCustomerModalOpen) {\n            setEditCustomer({\n                businessName: '',\n                industry: '',\n                primaryContact: {\n                    firstName: '',\n                    lastName: ''\n                },\n                billingContact: {\n                    firstName: '',\n                    lastName: ''\n                },\n                primaryOfficeNumber: '',\n                primaryExt: '',\n                primaryCellNumber: '',\n                primaryEmail: '',\n                primaryJobTitle: '',\n                billingOfficeNumber: '',\n                billingExt: '',\n                billingCellNumber: '',\n                billingEmail: '',\n                billingJobTitle: '',\n                shopAddress: {\n                    address: '',\n                    city: '',\n                    state: '',\n                    zipcode: ''\n                },\n                billingAddress: {\n                    address: '',\n                    city: '',\n                    state: '',\n                    zipcode: ''\n                },\n                noBillingContact: false\n            });\n            setEditCustomerErrors({});\n        };\n        setEditCustomerModalOpen(!editCustomerModalOpen);\n    };\n\n    const handleAddEmployeeChange = e => {\n        setEmployee({\n            ...employee,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleAddTaskChange = e => {\n        setTask({\n            ...task,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleAddTaskSelectChange = e => {\n        setTask({\n            ...task,\n            [e.name]: e.value\n        });\n    };\n\n    const handleAddNoteChange = e => {\n        setNote({\n            ...note,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleEditCustomerChange = e => {\n        setEditCustomer({\n            ...editCustomer,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleAddEmployeeSubmit = e => {\n        e.preventDefault();\n        \n        let errors = {};\n\n        if(employee.firstName === '') {\n            errors.firstName = 'Must not be empty';\n        };\n        if(employee.lastName === '') {\n            errors.lastName = 'Must not be empty';\n        };\n        if(employee.jobTitle === '') {\n            errors.jobTitle = 'Must not be empty';\n        };\n        if(employee.officeNumber === '' && employee.cellNumber === '') {\n            errors.officeNumber = 'Must not be empty';\n            errors.cellNumber = 'Must not be empty'\n        } else if(employee.officeNumber !== '' && !employee.officeNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n            errors.officeNumber = 'Must be a valid phone number';\n        } else if(employee.cellNumber !== '' && !employee.cellNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n            errors.cellNumber = 'Must be a valid phone number';\n        };\n        if(employee.email === '') {\n            errors.email = 'Must not be empty';\n        } else if(!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n            errors.email = 'Must be a valid email address';\n        };\n\n        setAddEmployeeErrors(errors);\n\n        if(Object.keys(errors).length === 0) {\n            if(customer.employees.length === 0) {\n                setFlag(true);\n                setCustomer({\n                    ...customer,\n                    employees: [employee]\n                });\n            } else {\n                setFlag(true);\n                setCustomer({\n                    ...customer,\n                    employees: [...customer.employees, employee]\n                });\n            };\n        };\n    };\n\n    const handleAddTaskSubmit = e => {\n        e.preventDefault();\n        dispatch(addTask(task));\n    };\n\n    const handleAddNoteSubmit = e => {\n        e.preventDefault();\n        console.log(\"Note Submitted\");\n    };\n\n    const handleEditCustomerSubmit = e => {\n        e.preventDefault();\n        console.log(\"Edit Submitted\");\n    };\n    \n    return (\n        <div>\n            <EmployeeNavbar />\n            <div className=\"customer-page\">\n                <EmployeeSidebar />\n                <div className=\"customer-page-content\">\n                    <h1>{customer.businessName}</h1>\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { toggleTab('1'); }}>\n                                Info\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { toggleTab('2') }}>\n                                Tasks\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '3' })} onClick={() => { toggleTab('3') }}>\n                                Appointments\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '4' })} onClick={() => { toggleTab('4') }}>\n                                Notes\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '5' })} onClick={() => { toggleTab('5') }}>\n                                Employees\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '6' })} onClick={() => { toggleTab('6') }}>\n                                Lifts\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '7' })} onClick={() => { toggleTab('7') }}>\n                                Documents\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                            <div className=\"customer-info-page-div\">\n                                <Form className=\"customer-page-info-tab\">\n                                    <div className=\"customer-page-contacts\">\n                                        <FormGroup>\n                                            <h3>Primary Contact</h3>\n                                            <div>\n                                                <p>Name: <span>{customer.primaryContact ? customer.primaryContact.firstName : null} {customer.primaryContact ? customer.primaryContact.lastName : null}</span></p>\n                                                <p>Job Title: <span>{customer.primaryJobTitle}</span></p>\n                                                <p>Office: <a href={customer.primaryExt ? `tel:+1-${customer.primaryOfficeNumber},${customer.primaryExt}` : `tel:+1-${customer.primaryOfficeNumber}`}>{customer.primaryExt ? `${customer.primaryOfficeNumber}, .ext ${customer.primaryExt}` : `${customer.primaryOfficeNumber}`}</a></p>\n                                                <p>Cell: <a href={`tel:+1-${customer.primaryCellNumber}`}>{customer.primaryCellNumber}</a></p>\n                                                <p>Email: <a href={`mailto:${customer.primaryEmail}`}>{customer.primaryEmail}</a></p>\n                                            </div>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <h3>Billing Contact</h3>\n                                            <div>\n                                                <p>Name: <span>{customer.billingContact ? customer.billingContact.firstName : null} {customer.billingContact ? customer.billingContact.lastName : null}</span></p>\n                                                <p>Job Title: <span>{customer.billingJobTitle}</span></p>\n                                                <p>Office: <a href={customer.billingExt ? `tel:+1-${customer.billingOfficeNumber},${customer.billingExt}` : `tel:+1-${customer.billingOfficeNumber}`}>{customer.billingExt ? `${customer.billingOfficeNumber}, .ext ${customer.billingExt}` : `${customer.billingOfficeNumber}`}</a></p>\n                                                <p>Cell: <a href={`tel:+1-${customer.billingCellNumber}`}>{customer.billingCellNumber}</a></p>\n                                                <p>Email: <a href={`mailto:${customer.billingEmail}`}>{customer.billingEmail}</a></p>\n                                            </div>\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"customer-page-addresses\">\n                                        <FormGroup>\n                                            <h3>Shop Address</h3>\n                                            <a href={`http://maps.google.com/?q=${customer.shopAddress ? customer.shopAddress.address : null}, ${customer.shopAddress ? customer.shopAddress.city : null}, ${customer.shopAddress ? customer.shopAddress.state : null} ${customer.shopAddress ? customer.shopAddress.zipcode : null}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"address-link\">\n                                                <p>{customer.shopAddress ? customer.shopAddress.address : null},</p>\n                                                <p>{customer.shopAddress ? customer.shopAddress.city : null}, {customer.shopAddress ? customer.shopAddress.state : null}</p>\n                                                <p>{customer.shopAddress ? customer.shopAddress.zipcode : null}</p>\n                                            </a>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <h3>Billing Address</h3>\n                                            <a href={`http://maps.google.com/?q=${customer.billingAddress ? customer.billingAddress.address : null}, ${customer.billingAddress ? customer.billingAddress.city : null}, ${customer.billingAddress ? customer.billingAddress.state : null} ${customer.billingAddress ? customer.billingAddress.zipcode : null}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"address-link\">\n                                                <p>{customer.billingAddress ? customer.billingAddress.address : null},</p>\n                                                <p>{customer.billingAddress ? customer.billingAddress.city : null}, {customer.billingAddress ? customer.billingAddress.state : null}</p>\n                                                <p>{customer.billingAddress ? customer.billingAddress.zipcode : null}</p>\n                                            </a>\n                                        </FormGroup>\n                                    </div>\n                                </Form>\n                                <Button outline color=\"success\" className=\"info-edit-button\" onClick={toggleEditCustomerModal}><i className=\"fad fa-pen\" /> Edit</Button>\n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            <div className=\"customer-page-task-tab\">\n                                <Table borderless className=\"task-table-header\">\n                                    <thead>\n                                        <tr className=\"table-headers\">\n                                            <th>Task</th>\n                                            <th>Date</th>\n                                            <th>Time</th>\n                                        </tr>\n                                    </thead>\n                                </Table>\n                                    {tasks ? tasks.tasks ? tasks.tasks.map(task => (\n                                        <Card className=\"task-card\">\n                                            <Table borderless className=\"task-card-table\">\n                                            <tbody>\n                                                <tr className=\"table-data\">\n                                                    <td>{task.taskDescription}</td>\n                                                    <td>{dateConverter(task.taskDate)}</td>\n                                                    <td>{timeConverter(task.taskTime)}</td>\n                                                </tr>\n                                            </tbody>\n                                            </Table>\n                                        </Card>\n                                    )) : null : null}\n                                <Button outline color=\"success\" onClick={toggleAddTaskModal}>Add Task</Button>\n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                            <span>Appointments</span>\n                        </TabPane>\n                        <TabPane tabId=\"4\">\n                            <div className=\"customer-page-note-tab\">\n                                {notes ? notes.notes ? notes.notes.map(note => (\n                                    <Card className=\"note-card\">\n                                        <p>{note.note}</p>\n                                        <div>\n                                            <p>Created By: <span>{(note) => {\n                                                const name = employeeFinder(note.createdBy);\n                                                console.log(name)\n                                            }}</span></p>\n                                            <p>Created At: {note.createdAt}</p>\n                                        </div>\n                                    </Card>\n                                )) : null : null}\n                                <Button outline color=\"success\" onClick={toggleAddNoteModal}>Add Note</Button> \n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"5\">\n                            <Table size=\"sm\" hover className=\"customer-page-employees-table\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Job Title</th>\n                                        <th>Office Number</th>\n                                        <th>Cell Number</th>\n                                        <th>Email</th> \n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>{customer.primaryContact ? customer.primaryContact.firstName : null} {customer.primaryContact ? customer.primaryContact.lastName : null}</td>\n                                        <td>{customer.primaryJobTitle}</td>\n                                        <td><a href={`tel:+1-${customer.primaryOfficeNumber}`}>{customer.primaryOfficeNumber}</a></td>\n                                        <td><a href={`tel:+1-${customer.primaryCellNumber}`}>{customer.primaryCellNumber}</a></td>\n                                        <td><a href={`mailto:${customer.primaryEmail}`}>{customer.primaryEmail}</a></td>\n                                    </tr>\n                                    {customer.billingJobTitle !== '' ?\n                                        <tr>\n                                            <td>{customer.billingContact ? customer.billingContact.firstName : null} {customer.billingContact ? customer.billingContact.lastName : null}</td>\n                                            <td>{customer.billingJobTitle}</td>\n                                            <td><a href={`tel:+1-${customer.billingOfficeNumber}`}>{customer.billingOfficeNumber}</a></td>\n                                            <td><a href={`tel:+1-${customer.billingCellNumber}`}>{customer.billingCellNumber}</a></td>\n                                            <td><a href={`mailto:${customer.billingEmail}`}>{customer.billingEmail}</a></td>\n                                        </tr>\n                                    : null }\n                                    {customer.employees ? customer.employees.map(employee => (\n                                        <tr>\n                                            <td>{employee.firstName} {employee.lastName}</td>\n                                            <td>{employee.jobTitle}</td>\n                                            <td><a href={`tel:+1-${employee.officeNumber}`}>{employee.officeNumber}</a></td>\n                                            <td><a href={`tel:+1-${employee.cellNumber}`}>{employee.cellNumber}</a></td>\n                                            <td><a href={`mailto:${employee.email}`}>{employee.email}</a></td>\n                                        </tr>\n                                    )) : null}\n                                </tbody>\n                            </Table>\n                            <div className=\"add-employee-div\">\n                                <Button outline color=\"success\" onClick={toggleAddEmployeeModal}>Add Employee</Button>\n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"6\">\n                            <span>Lifts</span>\n                        </TabPane>\n                        <TabPane tabId=\"7\">\n                            <span>Coming Soon!!!</span>\n                        </TabPane>\n                    </TabContent>\n                </div>\n                <Modal isOpen={addEmployeeModalOpen} toggle={toggleAddEmployeeModal}>\n                    <ModalHeader toggle={toggleAddEmployeeModal}>Add Employee</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleAddEmployeeSubmit}>\n                            <div className=\"add-employee-name-div\">\n                                <FormGroup>\n                                    <Label for=\"employeeFirstName\">First Name</Label>\n                                    <Input type=\"text\" name=\"firstName\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.firstName ? true : false} />\n                                    <FormFeedback>{addEmployeeErrors.firstName}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"employeeLastName\">Last Name</Label>\n                                    <Input type=\"text\" name=\"lastName\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.lastName ? true : false} />\n                                    <FormFeedback>{addEmployeeErrors.lastName}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"employeeJobTitle\">Job Title</Label>\n                                <Input type=\"text\" name=\"jobTitle\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.jobTitle ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.jobTitle}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeOfficeNumber\">Office Phone Number</Label>\n                                <Input type=\"text\" name=\"officeNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.officeNumber ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.officeNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeCellNumber\">Cell Phone Number</Label>\n                                <Input type=\"text\" name=\"cellNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.cellNumber ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.cellNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeEmail\">Email</Label>\n                                <Input type=\"text\" name=\"email\" placeholder=\"example@example.com\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.email ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.email}</FormFeedback>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleAddEmployeeSubmit}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={addTaskModalOpen} toggle={toggleAddTaskModal}>\n                    <ModalHeader toggle={toggleAddTaskModal}>Add Task</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleAddTaskSubmit}>\n                            <div className=\"add-task-date-div\">\n                                <FormGroup>\n                                    <Label for=\"taskDate\">Date</Label>\n                                    <Input type=\"date\" name=\"taskDate\" placeholder=\"date placeholder\" onChange={handleAddTaskChange} invalid={addTaskErrors.taskDate ? true : false} />\n                                    <FormFeedback>{addTaskErrors.taskDate}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"taskTime\">Time</Label>\n                                    <Input type=\"time\" name=\"taskTime\" placeholder=\"time placeholder\" onChange={handleAddTaskChange} invalid={addTaskErrors.taskTime ? true : false} />\n                                    <FormFeedback>{addTaskErrors.taskTime}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"taskDescription\">Task Description</Label>\n                                <Input type=\"textarea\" name=\"taskDescription\" onChange={handleAddTaskChange} invalid={addTaskErrors.taskDescription ? true : false} />\n                                <FormFeedback>{addTaskErrors.taskDescription}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeId\">Assigned To</Label>\n                                <Select name=\"employeeId\" options={employees} onChange={handleAddTaskSelectChange} className={addTaskErrors.employeeId ? 'invalid' : ''} />\n                                <Input type=\"hidden\" disabled invalid={addTaskErrors.employeeId ? true : false} />\n                                <FormFeedback>{addTaskErrors.employeeId}</FormFeedback>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleAddTaskSubmit}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={addNoteModalOpen} toggle={toggleAddNoteModal}>\n                    <ModalHeader toggle={toggleAddNoteModal}>Add Note</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleAddNoteSubmit}>\n                            <FormGroup>\n                                <Label for=\"note\">Note</Label>\n                                <Input type=\"textarea\" name=\"note\" onChange={handleAddNoteChange} />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleAddNoteSubmit}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n            <Footer />\n            <Modal isOpen={editCustomerModalOpen} toggle={toggleEditCustomerModal}>\n                <ModalHeader toggle={toggleEditCustomerModal}>Edit Customer</ModalHeader>\n                <ModalBody>\n                <Form onSubmit={handleEditCustomerSubmit} className=\"add-customer-form\">\n                        <FormGroup>\n                            <Label for=\"businessName\">Business Name</Label>\n                            <Input type=\"text\" name=\"businessName\" onChange={handleEditCustomerChange} invalid={editCustomerErrors.businessName ? true : false} />\n                            <FormFeedback>{editCustomerErrors.businessName}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"industry\">Industry</Label>\n                            <Input type=\"text\" name=\"industry\" onChange={handleEditCustomerChange} invalid={editCustomerErrors.industry ? true : false} />\n                            <FormFeedback>{editCustomerErrors.industry}</FormFeedback>\n                        </FormGroup>\n                        <Label for=\"primary-contact\" className=\"form-label\">Primary Contact</Label>\n                        <div className=\"primary-contact-name\">\n                            <FormGroup>\n                                <Label for=\"firstName\">First Name</Label>\n                                <Input type=\"text\" name=\"firstName\" onChange={handlePrimaryContactChange} invalid={editCustomerErrors.primaryContact ? editCustomerErrors.primaryContact.firstName ? true : false : false}  />\n                                <FormFeedback>{editCustomerErrors.primaryContact ? editCustomerErrors.primaryContact.firstName ? editCustomerErrors.primaryContact.firstName : null : null}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name</Label>\n                                <Input type=\"text\" name=\"lastName\" onChange={handlePrimaryContactChange} invalid={editCustomerErrors.primaryContact ? editCustomerErrors.primaryContact.lastName ? true : false : false} />\n                                <FormFeedback>{editCustomerErrors.primaryContact ? editCustomerErrors.primaryContact.lastName ? editCustomerErrors.primaryContact.lastName : null : null}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <div className=\"primary-phone-div\">\n                            <div className=\"primary-office-phone-div\">\n                                <FormGroup className=\"primary-number\">\n                                    <Label for=\"primaryOfficeNumber\">Office Phone Number</Label>\n                                    <Input type=\"text\" name=\"primaryOfficeNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleChange} invalid={editCustomerErrors.primaryOfficeNumber ? true : false} />\n                                    <FormFeedback>{editCustomerErrors.primaryOfficeNumber}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup className=\"primary-ext\">\n                                    <Label for=\"primaryExt\">ext.</Label>\n                                    <Input type=\"text\" name=\"primaryExt\" onChange={handleChange} />\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"primaryCellNumber\">Cell Phone Number</Label>\n                                <Input type=\"text\" name=\"primaryCellNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleChange} invalid={editCustomerErrors.primaryCellNumber ? true : false} />\n                                <FormFeedback>{editCustomerErrors.primaryCellNumber}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <div className=\"primary-email-jobTitle-div\">\n                            <FormGroup>\n                                <Label for=\"primaryEmail\">Email</Label>\n                                <Input type=\"text\" name=\"primaryEmail\" placeholder=\"example@example.com\" onChange={handleChange} invalid={editCustomerErrors.primaryEmail ? true : false} />\n                                <FormFeedback>{editCustomerErrors.primaryEmail}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"primaryJobTitle\">Job Title</Label>\n                                <Input type=\"text\" name=\"primaryJobTitle\" onChange={handleChange} invalid={editCustomerErrors.primaryJobTitle ? true : false} />\n                                <FormFeedback>{editCustomerErrors.primaryJobTitle}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <Label for=\"shop-address\" className=\"form-label\">Shop Address</Label>\n                        <div className=\"shop-address\">\n                            <div className=\"shop-address-city-div\">\n                                <FormGroup>\n                                    <Label for=\"address\">Address</Label>\n                                    <Input type=\"text\" name=\"address\" onChange={handleShopAddressChange} invalid={editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.address ? true : false : false} />\n                                    <FormFeedback>{editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.address ? editCustomerErrors.shopAddress.address : null : null}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"city\">City</Label>\n                                    <Input type=\"text\" name=\"city\" onChange={handleShopAddressChange} invalid={editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.city ? true : false : false} />\n                                    <FormFeedback>{editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.city ? editCustomerErrors.shopAddress.city : null : null}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <div className=\"shop-state-zipcode-div\">\n                                <FormGroup>\n                                    <Label for=\"state\">State</Label>\n                                    <Input type=\"text\" name=\"state\" onChange={handleShopAddressChange} invalid={editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.state ? true : false : false} />\n                                    <FormFeedback>{editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.state ? editCustomerErrors.shopAddress.state : null : null}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"zipcode\">Zip Code</Label>\n                                    <Input type=\"text\" name=\"zipcode\" onChange={handleShopAddressChange} invalid={editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.zipcode ? true : false : false} />\n                                    <FormFeedback>{editCustomerErrors.shopAddress ? editCustomerErrors.shopAddress.zipcode ? editCustomerErrors.shopAddress.zipcode : null : null}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                        </div>\n                        <Label for=\"billing-contact\" className=\"form-label\">Billing Contact</Label>\n                        <div className=\"billing-contact-name\">\n                            <FormGroup>\n                                <Label for=\"firstName\">First Name</Label>\n                                <Input type=\"text\" name=\"firstName\" onChange={handleBillingContactChange} invalid={editCustomerErrors.billingContact ? editCustomerErrors.billingContact.firstName ? true : false : false} />\n                                <FormFeedback>{editCustomerErrors.billingContact ? editCustomerErrors.billingContact.firstName ? editCustomerErrors.billingContact.firstName : null : null}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name</Label>\n                                <Input type=\"text\" name=\"lastName\" onChange={handleBillingContactChange} invalid={editCustomerErrors.billingContact ? editCustomerErrors.billingContact.lastName ? true : false : false} />\n                                <FormFeedback>{editCustomerErrors.billingContact ? editCustomerErrors.billingContact.lastName ? editCustomerErrors.billingContact.lastName : null : null}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <div className=\"billing-phone-div\">\n                            <div className=\"billing-office-phone-div\">\n                                <FormGroup className=\"billing-number\">\n                                    <Label for=\"billingOfficeNumber\">Office Phone Number</Label>\n                                    <Input type=\"text\" name=\"billingOfficeNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleChange} invalid={editCustomerErrors.billingOfficeNumber ? true : false} />\n                                    <FormFeedback>{editCustomerErrors.billingOfficeNumber}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup className=\"billing-ext\">\n                                    <Label for=\"billingExt\">ext.</Label>\n                                    <Input type=\"text\" name=\"billingExt\" onChange={handleChange} />\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"billingCellNumber\">Cell Phone Number</Label>\n                                <Input type=\"text\" name=\"billingCellNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleChange} invalid={editCustomerErrors.billingCellNumber ? true : false} />\n                                <FormFeedback>{editCustomerErrors.billingCellNumber}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <div className=\"billing-email-jobTitle-div\">\n                            <FormGroup>\n                                <Label for=\"billingEmail\">Email</Label>\n                                <Input type=\"text\" name=\"billingEmail\" placeholder=\"example@example.com\" onChange={handleChange} invalid={editCustomerErrors.billingEmail ? true : false} />\n                                <FormFeedback>{editCustomerErrors.billingEmail}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"billingJobTitle\">Job Title</Label>\n                                <Input type=\"text\" name=\"billingJobTitle\" onChange={handleChange} invalid={editCustomerErrors.billingJobTitle ? true : false} />\n                                <FormFeedback>{editCustomerErrors.billingJobTitle}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <Label for=\"billing-address\" className=\"form-label\">Billing Address</Label>\n                        <div className=\"billing-address\">\n                            <div className=\"billing-address-city-div\">\n                                <FormGroup>\n                                    <Label for=\"address\">Address</Label>\n                                    <Input type=\"text\" name=\"address\" onChange={handleBillingAddressChange} invalid={editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.address ? true : false : false} />\n                                    <FormFeedback>{editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.address ? editCustomerErrors.billingAddress.address : null : null}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"city\">City</Label>\n                                    <Input type=\"text\" name=\"city\" onChange={handleBillingAddressChange} invalid={editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.city ? true : false : false} />\n                                    <FormFeedback>{editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.city ? editCustomerErrors.billingAddress.city : null : null}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <div className=\"billing-state-zipcode-div\">\n                                <FormGroup>\n                                    <Label for=\"state\">State</Label>\n                                    <Input type=\"text\" name=\"state\" onChange={handleBillingAddressChange} invalid={editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.state ? true : false : false} />\n                                    <FormFeedback>{editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.state ? editCustomerErrors.billingAddress.state : null : null}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"zipcode\">Zip Code</Label>\n                                    <Input type=\"text\" name=\"zipcode\" onChange={handleBillingAddressChange} invalid={editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.zipcode ? true : false : false} />\n                                    <FormFeedback>{editCustomerErrors.billingAddress ? editCustomerErrors.billingAddress.zipcode ? editCustomerErrors.billingAddress.zipcode : null : null}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                        </div>\n                        <FormGroup className=\"checkbox-div\">\n                            <Label check>\n                                <Input type=\"checkbox\" onClick={toggleBillingContact} />{' '}\n                                No Billing Contact\n                            </Label>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CustomerPage;"]},"metadata":{},"sourceType":"module"}