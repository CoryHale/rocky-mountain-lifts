{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/WorkOrderPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, FormFeedback, Button, Modal, ModalHeader, ModalBody, ModalFooter, Table } from 'reactstrap';\nimport SignatureCanvas from 'react-signature-canvas';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getWorkOrder } from '../../actions/getWorkOrder';\nimport '../../styles/employee-dashboard.scss';\n\nconst WorkOrderPage = () => {\n  const [workOrder, setWorkOrder] = useState({});\n  const [customer, setCustomer] = useState({});\n  const [mapsAddress, setMapsAddress] = useState('');\n  const [employees, setEmployees] = useState([]);\n  const getWorkOrderFromState = useSelector(state => state.getWorkOrderReducer.workOrder);\n  const getUsers = useSelector(state => state.getWorkOrderReducer.users);\n  const [isOpenServiceModal, setIsOpenServiceModal] = useState(false);\n  const [service, setService] = useState({\n    make: '',\n    type: '',\n    model: '',\n    serialNumber: '',\n    bayNumber: '',\n    serviceDone: '',\n    partsUsed: [],\n    partsNeeded: []\n  });\n  const [serviceErrors, setServiceErrors] = useState({});\n  const [partUsed, setPartUsed] = useState({\n    quantity: '',\n    partDescription: '',\n    partNumber: '',\n    images: []\n  });\n  const [partUsedErrors, setPartUsedErrors] = useState({});\n  const [partNeeded, setPartNeeded] = useState({\n    quantity: '',\n    partDescription: '',\n    partNumber: '',\n    images: []\n  });\n  const [partNeededErrors, setPartNeededErrors] = useState({});\n  const [isOpenPartUsed, setIsOpenPartUsed] = useState(false);\n  const [isOpenPartNeeded, setIsOpenPartNeeded] = useState(false);\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n  const [hideClockIn, setHideClockIn] = useState(false);\n  const [hideOfficeNotes, setHideOfficeNotes] = useState(false);\n  const [hideSignaturePad, setHideSignaturePad] = useState(true);\n  const [hideSubmitForSignatureButton, setHideSubmitForSignatureButton] = useState(false);\n  const [hideSubmitForReviewButton, setHideSubmitForReviewButton] = useState(true);\n  let sigPad = {};\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split('/');\n    const jobId = pathArray[pathArray.length - 1];\n    dispatch(getWorkOrder(jobId));\n  }, []);\n  useEffect(() => {\n    if (getWorkOrderFromState) {\n      setWorkOrder(getWorkOrderFromState);\n    }\n\n    ;\n  }, [getWorkOrderFromState]);\n  useEffect(() => {\n    let crewMembers = [];\n\n    if (getUsers) {\n      getUsers.forEach(user => {\n        if (user.userType === 'customer') {\n          setCustomer(user);\n        } else {\n          crewMembers.push(user);\n        }\n\n        ;\n      });\n      setEmployees(crewMembers);\n    }\n  }, [getUsers]);\n  useEffect(() => {\n    if (customer) {\n      addressConverter(customer);\n    }\n\n    ;\n  }, [customer]);\n  useEffect(() => {\n    if (startTime !== 0 && endTime !== 0) {\n      jobTimeConverter();\n    }\n\n    ;\n  }, [endTime]);\n\n  const typeConverter = types => {\n    if (types) {\n      if (types.length === 1) {\n        return types;\n      } else {\n        return types.join(', ');\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const dateConverter = date => {\n    if (date) {\n      const dateArray = date.split('-');\n      return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    }\n\n    ;\n  };\n\n  const timeConverter = time => {\n    if (time) {\n      const timeArray = time.split(':');\n      const hour = parseInt(timeArray[0]);\n      let m;\n\n      if (hour <= 11) {\n        m = 'AM';\n      } else {\n        m = 'PM';\n      }\n\n      ;\n\n      if (hour <= 12) {\n        const newHour = hour.toString();\n        timeArray[0] = newHour;\n      } else {\n        const newHour = (hour - 12).toString();\n        timeArray[0] = newHour;\n      }\n\n      ;\n      return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    }\n\n    ;\n  };\n\n  const addressConverter = customer => {\n    const address = customer.address;\n    const city = customer.city;\n    const state = customer.state;\n    const zipcode = customer.zipcode;\n    let newAddress = '';\n    let newCity = '';\n\n    if (address) {\n      newAddress = address.split(' ').join('+');\n    }\n\n    ;\n\n    if (city) {\n      newCity = city.split(' ').join('+');\n    }\n\n    const searchableAddress = `${newAddress},+${newCity},+${state}+${zipcode}`;\n    setMapsAddress(searchableAddress);\n  };\n\n  const crewConverter = members => {\n    let crewNames = [];\n\n    if (members) {\n      members.forEach(member => {\n        crewNames.push(`${member.firstName} ${member.lastName}`);\n      });\n\n      if (crewNames.length === 1) {\n        return crewNames;\n      } else {\n        return crewNames.join(', ');\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const clockIn = () => {\n    const date = new Date();\n    const time = date.getTime();\n    setStartTime(time);\n  };\n\n  const clockOut = () => {\n    if (startTime === 0) {\n      alert('Please clock in first');\n    } else {\n      const date = new Date();\n      const time = date.getTime();\n      setEndTime(time);\n    }\n\n    ;\n  };\n\n  const jobTimeConverter = () => {\n    if (startTime && endTime) {\n      const totalTime = endTime - startTime;\n      const seconds = Math.floor(totalTime / 1000 % 60);\n      const minutes = Math.floor(totalTime / (1000 * 60) % 60);\n      const hours = Math.floor(totalTime / (1000 * 60 * 60) % 24);\n      const trueHours = hours < 10 ? \"0\" + hours : hours;\n      const trueMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n      const trueSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n      const timeAtJob = trueHours + ':' + trueMinutes + ':' + trueSeconds;\n      console.log(timeAtJob);\n      setWorkOrder({ ...workOrder,\n        timeAtJob: timeAtJob\n      });\n      setHideClockIn(true);\n    }\n\n    ;\n  };\n\n  const toggleServiceModal = () => {\n    setIsOpenServiceModal(!isOpenServiceModal);\n  };\n\n  const handleChangeService = e => {\n    setService({ ...service,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitService = e => {\n    e.preventDefault();\n    const errors = {};\n\n    if (service.make.trim() === '') {\n      errors.make = 'Must not be empty';\n    }\n\n    ;\n\n    if (service.type.trim() === '') {\n      errors.type = 'Must not be empty';\n    }\n\n    ;\n\n    if (service.model.trim() === '') {\n      errors.model = 'Must not be empty';\n    }\n\n    ;\n\n    if (service.serialNumber.trim() === '') {\n      errors.serialNumber = 'Must not be empty';\n    }\n\n    ;\n\n    if (service.serviceDone.trim() === '') {\n      errors.serviceDone = 'Must not be empty';\n    }\n\n    ;\n\n    if (Object.keys(errors).length !== 0) {\n      setServiceErrors(errors);\n    } else {\n      if (!workOrder.serviceDone) {\n        setWorkOrder({ ...workOrder,\n          serviceDone: [service]\n        });\n      } else {\n        setWorkOrder({ ...workOrder,\n          serviceDone: [...workOrder.serviceDone, service]\n        });\n      }\n\n      ;\n      setService({\n        make: '',\n        type: '',\n        model: '',\n        serialNumber: '',\n        bayNumber: '',\n        serviceDone: '',\n        partsUsed: [],\n        partsNeeded: []\n      });\n      setIsOpenServiceModal(false);\n      setServiceErrors({});\n    }\n\n    ;\n  };\n\n  const togglePartUsed = () => {\n    setIsOpenPartUsed(!isOpenPartUsed);\n  };\n\n  const togglePartNeeded = () => {\n    setIsOpenPartNeeded(!isOpenPartNeeded);\n  };\n\n  const handleChangePartUsed = e => {\n    setPartUsed({ ...partUsed,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitPartUsed = e => {\n    e.preventDefault();\n    const errors = {};\n\n    if (partUsed.quantity.trim() === '') {\n      errors.quantity = 'Must not be empty';\n    }\n\n    ;\n\n    if (partUsed.partDescription.trim() === '') {\n      errors.partDescription = 'Must not be empty';\n    }\n\n    ;\n\n    if (partUsed.partNumber.trim() === '') {\n      errors.partNumber = 'Must not be empty';\n    }\n\n    ;\n\n    if (Object.keys(errors).length !== 0) {\n      setPartUsedErrors(errors);\n    } else {\n      setService({ ...service,\n        partsUsed: [...service.partsUsed, partUsed]\n      });\n      setPartUsed({\n        quantity: '',\n        partDescription: '',\n        partNumber: '',\n        images: []\n      });\n      setIsOpenPartUsed(false);\n      setPartUsedErrors({});\n    }\n\n    ;\n  };\n\n  const handleChangePartNeeded = e => {\n    setPartNeeded({ ...partNeeded,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitPartNeeded = e => {\n    e.preventDefault();\n    const errors = {};\n\n    if (partNeeded.quantity.trim() === '') {\n      errors.quantity = 'Must not be empty';\n    }\n\n    ;\n\n    if (partNeeded.partDescription.trim() === '') {\n      errors.partDescription = 'Must not be empty';\n    }\n\n    ;\n\n    if (partNeeded.partNumber.trim() === '') {\n      errors.partNumber = 'Must not be empty';\n    }\n\n    ;\n\n    if (Object.keys(errors).length !== 0) {\n      setPartNeededErrors(errors);\n    } else {\n      setService({ ...service,\n        partsNeeded: [...service.partsNeeded, partNeeded]\n      });\n      setPartNeeded({\n        quantity: '',\n        partDescription: '',\n        partNumber: '',\n        images: []\n      });\n      setIsOpenPartNeeded(false);\n      setPartNeededErrors({});\n    }\n\n    ;\n  };\n\n  const handleSubmitForSignature = e => {\n    e.preventDefault();\n    setHideOfficeNotes(true);\n    setHideSignaturePad(false);\n    setHideSubmitForSignatureButton(true);\n    setHideSubmitForReviewButton(false);\n  };\n\n  const clearSignaturePad = e => {\n    sigPad.clear();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-order-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }\n  }), workOrder ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-order-page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }\n  }, `Work Order #${workOrder.jobNumber}`), /*#__PURE__*/React.createElement(Form, {\n    className: \"work-order-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 29\n    }\n  }, \"Customer Name\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: `${customer.firstName} ${customer.lastName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customerAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 29\n    }\n  }, \"Customer Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://maps.google.com/maps?q=${mapsAddress}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: `${customer.address}, ${customer.city}, ${customer.state} ${customer.zipcode}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"type-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 29\n    }\n  }, \"Service Type(s)\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: typeConverter(workOrder.serviceType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 33\n    }\n  }, \"Service Date\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: dateConverter(workOrder.serviceDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 33\n    }\n  }, \"Service Time\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: timeConverter(workOrder.serviceTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"crewMembers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 29\n    }\n  }, \"Crew Members\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: crewConverter(employees),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"description-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 29\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    type: \"textarea\",\n    value: workOrder.serviceDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 29\n    }\n  })), hideClockIn ? /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"timeOnJob\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 29\n    }\n  }, \"Time At Job\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    type: \"text\",\n    value: workOrder.timeAtJob ? workOrder.timeAtJob : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 25\n    }\n  }, !hideClockIn ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secondary-button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 33\n    }\n  }, startTime === 0 ? /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: clockIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 37\n    }\n  }, \"Clock In\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 37\n    }\n  }, \"Clock In\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 33\n    }\n  }, endTime === 0 ? /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: clockOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 37\n    }\n  }, \"Clock Out\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 37\n    }\n  }, \"Clock Out\"))) : null, workOrder.serviceDone ? workOrder.serviceDone.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"service-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 33\n    }\n  }, \"Services\"), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 41\n    }\n  }, \"Service Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 41\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 41\n    }\n  }, \"Parts Needed\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 37\n    }\n  }, workOrder.serviceDone.map(service => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 45\n    }\n  }, service.type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 45\n    }\n  }, service.serviceDone), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 45\n    }\n  }, service.partsNeeded.length > 0 ? 'Y' : 'N')))))) : null : null, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 33\n    }\n  }, \"Add Service\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secondary-button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 37\n    }\n  }, \"Add Inspection\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"warning\",\n    className: \"training-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 37\n    }\n  }, \"Add Training\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"travel-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"travelTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 33\n    }\n  }, \"Travel Time (Roundtrip)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"travelTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"travelMileage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 33\n    }\n  }, \"Travel Mileage (Roundtrip)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 29\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    value: workOrder.notes ? workOrder.notes : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 29\n    }\n  })), hideOfficeNotes ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"officeNotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 29\n    }\n  }, \"Office Notes (NOT FOR CUSTOMER)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    value: workOrder.officeNotes ? workOrder.officeNotes : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 29\n    }\n  })), hideSignaturePad ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 52\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signature-pad-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"signature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 33\n    }\n  }, \"Signature\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-times clear-button\",\n    onClick: e => clearSignaturePad(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(SignatureCanvas, {\n    canvasProps: {\n      className: \"signature-pad\"\n    },\n    ref: ref => {\n      sigPad = ref;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 29\n    }\n  })), hideSubmitForSignatureButton ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 64\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitForSignature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 29\n    }\n  }, \"Submit for Signature\")), hideSubmitForReviewButton ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 29\n    }\n  }, \"Submit for Review\")))) : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenServiceModal,\n    toggle: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 21\n    }\n  }, \"Add Service\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equipment-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"make\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 37\n    }\n  }, \"Make\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"make\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.make ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 37\n    }\n  }, serviceErrors.make)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 37\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"type\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.type ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 37\n    }\n  }, serviceErrors.type))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equipment-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"model\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 37\n    }\n  }, \"Model\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"model\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.model ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 37\n    }\n  }, serviceErrors.model)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serialNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 37\n    }\n  }, \"Serial Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"serialNumber\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.serialNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 37\n    }\n  }, serviceErrors.serialNumber))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"bayNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 33\n    }\n  }, \"Bay Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"bayNumber\",\n    onChange: handleChangeService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 33\n    }\n  }, \"What work was done?\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"serviceDone\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.serviceDone ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 33\n    }\n  }, serviceErrors.serviceDone)), service.partsUsed.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"part-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 33\n    }\n  }, \"Parts Used\"), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    size: \"sm\",\n    className: \"part-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 41\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 41\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 41\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 41\n    }\n  }, \"Images\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 37\n    }\n  }, service.partsUsed.map(part => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 45\n    }\n  }, part.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 45\n    }\n  }, part.partDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 45\n    }\n  }, part.partNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 45\n    }\n  }, part.images)))))) : null, service.partsNeeded.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"part-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 33\n    }\n  }, \"Parts Needed\"), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    size: \"sm\",\n    className: \"part-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 41\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 41\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 41\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 41\n    }\n  }, \"Images\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 37\n    }\n  }, service.partsNeeded.map(part => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 45\n    }\n  }, part.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 45\n    }\n  }, part.partDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 45\n    }\n  }, part.partNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 45\n    }\n  }, part.images)))))) : null, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"parts-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 33\n    }\n  }, \"Add Part Used\"), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"danger\",\n    onClick: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 33\n    }\n  }, \"Add Part Needed\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenPartUsed,\n    toggle: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 21\n    }\n  }, \"Add Part Used\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitPartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 33\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"quantity\",\n    onChange: handleChangePartUsed,\n    invalid: partUsedErrors.quantity ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 33\n    }\n  }, partUsedErrors.quantity)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 33\n    }\n  }, \"Part Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partDescription\",\n    onChange: handleChangePartUsed,\n    invalid: partUsedErrors.partDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 33\n    }\n  }, partUsedErrors.partDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 33\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partNumber\",\n    onChange: handleChangePartUsed,\n    invalid: partUsedErrors.partNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 33\n    }\n  }, partUsedErrors.partNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 33\n    }\n  }, \"Picture(s)\"), /*#__PURE__*/React.createElement(Input, {\n    multiple: true,\n    type: \"file\",\n    name: \"images\",\n    onChange: handleChangePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitPartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenPartNeeded,\n    toggle: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 21\n    }\n  }, \"Add Part Needed\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitPartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 33\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"quantity\",\n    onChange: handleChangePartNeeded,\n    invalid: partNeededErrors.quantity ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 33\n    }\n  }, partNeededErrors.quantity)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 33\n    }\n  }, \"Part Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partDescription\",\n    onChange: handleChangePartNeeded,\n    invalid: partNeededErrors.partDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 33\n    }\n  }, partNeededErrors.partDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 33\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partNumber\",\n    onChange: handleChangePartNeeded,\n    invalid: partNeededErrors.partNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 33\n    }\n  }, partNeededErrors.partNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 33\n    }\n  }, \"Picture(s)\"), /*#__PURE__*/React.createElement(Input, {\n    multiple: true,\n    type: \"file\",\n    name: \"images\",\n    onChange: handleChangePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitPartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 25\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default WorkOrderPage;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/WorkOrderPage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLocation","Form","FormGroup","Label","Input","FormFeedback","Button","Modal","ModalHeader","ModalBody","ModalFooter","Table","SignatureCanvas","EmployeeNavbar","EmployeeSidebar","Footer","getWorkOrder","WorkOrderPage","workOrder","setWorkOrder","customer","setCustomer","mapsAddress","setMapsAddress","employees","setEmployees","getWorkOrderFromState","state","getWorkOrderReducer","getUsers","users","isOpenServiceModal","setIsOpenServiceModal","service","setService","make","type","model","serialNumber","bayNumber","serviceDone","partsUsed","partsNeeded","serviceErrors","setServiceErrors","partUsed","setPartUsed","quantity","partDescription","partNumber","images","partUsedErrors","setPartUsedErrors","partNeeded","setPartNeeded","partNeededErrors","setPartNeededErrors","isOpenPartUsed","setIsOpenPartUsed","isOpenPartNeeded","setIsOpenPartNeeded","startTime","setStartTime","endTime","setEndTime","hideClockIn","setHideClockIn","hideOfficeNotes","setHideOfficeNotes","hideSignaturePad","setHideSignaturePad","hideSubmitForSignatureButton","setHideSubmitForSignatureButton","hideSubmitForReviewButton","setHideSubmitForReviewButton","sigPad","dispatch","location","pathArray","pathname","split","jobId","length","crewMembers","forEach","user","userType","push","addressConverter","jobTimeConverter","typeConverter","types","join","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","address","city","zipcode","newAddress","newCity","searchableAddress","crewConverter","members","crewNames","member","firstName","lastName","clockIn","Date","getTime","clockOut","alert","totalTime","seconds","Math","floor","minutes","hours","trueHours","trueMinutes","trueSeconds","timeAtJob","console","log","toggleServiceModal","handleChangeService","e","target","name","value","handleSubmitService","preventDefault","errors","trim","Object","keys","togglePartUsed","togglePartNeeded","handleChangePartUsed","handleSubmitPartUsed","handleChangePartNeeded","handleSubmitPartNeeded","handleSubmitForSignature","clearSignaturePad","clear","jobNumber","serviceType","serviceDate","serviceTime","serviceDescription","map","notes","officeNotes","className","ref","part"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Table\n} from 'reactstrap';\nimport SignatureCanvas from 'react-signature-canvas';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getWorkOrder } from '../../actions/getWorkOrder';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst WorkOrderPage = () => {\n    const [workOrder, setWorkOrder] = useState({});\n    const [customer, setCustomer] = useState({});\n    const [mapsAddress, setMapsAddress] = useState('');\n    const [employees, setEmployees] = useState([]);\n    const getWorkOrderFromState = useSelector(state => state.getWorkOrderReducer.workOrder);\n    const getUsers = useSelector(state => state.getWorkOrderReducer.users);\n    const [isOpenServiceModal, setIsOpenServiceModal] = useState(false);\n    const [service, setService] = useState({\n        make: '',\n        type: '',\n        model: '',\n        serialNumber: '',\n        bayNumber: '',\n        serviceDone: '',\n        partsUsed: [],\n        partsNeeded: []\n    });\n    const [serviceErrors, setServiceErrors] = useState({});\n    const [partUsed, setPartUsed] = useState({\n        quantity: '',\n        partDescription: '',\n        partNumber: '',\n        images: []\n    });\n    const [partUsedErrors, setPartUsedErrors] = useState({});\n    const [partNeeded, setPartNeeded] = useState({\n        quantity: '',\n        partDescription: '',\n        partNumber: '',\n        images: []\n    });\n    const [partNeededErrors, setPartNeededErrors] = useState({});\n    const [isOpenPartUsed, setIsOpenPartUsed] = useState(false);\n    const [isOpenPartNeeded, setIsOpenPartNeeded] = useState(false);\n    const [startTime, setStartTime] = useState(0);\n    const [endTime, setEndTime] = useState(0);\n    const [hideClockIn, setHideClockIn] = useState(false);\n    const [hideOfficeNotes, setHideOfficeNotes] = useState(false);\n    const [hideSignaturePad, setHideSignaturePad] = useState(true);\n    const [hideSubmitForSignatureButton, setHideSubmitForSignatureButton] = useState(false);\n    const [hideSubmitForReviewButton, setHideSubmitForReviewButton] = useState(true);\n    let sigPad = {};\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const jobId = pathArray[pathArray.length - 1];\n        dispatch(getWorkOrder(jobId));\n    }, []);\n\n    useEffect(() => {\n        if(getWorkOrderFromState) {\n            setWorkOrder(getWorkOrderFromState);\n        };\n    }, [getWorkOrderFromState]);\n\n    useEffect(() => {\n        let crewMembers = [];\n\n        if(getUsers) {\n            getUsers.forEach(user => {\n                if(user.userType === 'customer') {\n                    setCustomer(user);\n                } else {\n                    crewMembers.push(user);\n                };\n            });\n            setEmployees(crewMembers);\n        }\n    }, [getUsers]);\n\n    useEffect(() => {\n        if(customer) {\n            addressConverter(customer);\n        };\n    }, [customer]);\n\n    useEffect(() => {\n        if(startTime !== 0 && endTime !== 0) {\n            jobTimeConverter();\n        };\n    }, [endTime]);\n\n    const typeConverter = types => {\n        if(types) {\n            if(types.length === 1) {\n                return types;\n            } else {\n                return types.join(', ');\n            };\n        };\n    };\n\n    const dateConverter = date => {\n        if(date) {\n            const dateArray = date.split('-');\n            return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n        };\n    };\n\n    const timeConverter = time => {\n        if(time) {\n            const timeArray = time.split(':');\n            const hour = parseInt(timeArray[0]);\n            let m;\n    \n            if(hour <= 11) {\n                m = 'AM';\n            } else {\n                m = 'PM';\n            };\n    \n            if(hour <= 12) {\n                const newHour = hour.toString();\n                timeArray[0] = newHour;\n            } else {\n                const newHour = (hour - 12).toString();\n                timeArray[0] = newHour;\n            };\n    \n            return `${timeArray[0]}:${timeArray[1]} ${m}`;\n        };\n    };\n\n    const addressConverter = customer => {\n        const address = customer.address;\n        const city = customer.city;\n        const state = customer.state;\n        const zipcode = customer.zipcode;\n\n        let newAddress = ''\n        let newCity = '';\n\n        if(address) {\n            newAddress = address.split(' ').join('+');\n        };\n        if(city) {\n            newCity = city.split(' ').join('+');\n        }\n\n        const searchableAddress = `${newAddress},+${newCity},+${state}+${zipcode}`;\n        setMapsAddress(searchableAddress);\n    };\n\n    const crewConverter = members => {\n        let crewNames = [];\n\n        if(members) {\n            members.forEach(member => {\n                crewNames.push(`${member.firstName} ${member.lastName}`);\n            });\n\n            if(crewNames.length === 1) {\n                return crewNames;\n            } else {\n                return crewNames.join(', ');\n            };\n        };\n    };\n\n    const clockIn = () => {\n        const date = new Date();\n        const time = date.getTime();\n\n        setStartTime(time);\n    };\n\n    const clockOut = () => {\n        if(startTime === 0) {\n            alert('Please clock in first');\n        } else {\n            const date = new Date();\n            const time = date.getTime();\n    \n            setEndTime(time);\n        };\n    };\n\n    const jobTimeConverter = () => {\n        if(startTime && endTime) {\n          const totalTime = endTime - startTime;\n          \n          const seconds = Math.floor((totalTime / 1000) % 60);\n          const minutes = Math.floor((totalTime / (1000 * 60)) % 60);\n          const hours = Math.floor((totalTime / (1000 * 60 * 60)) % 24);\n          \n          const trueHours = hours < 10 ? \"0\" + hours : hours;\n          const trueMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n          const trueSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n          const timeAtJob = trueHours + ':' + trueMinutes + ':' + trueSeconds;\n\n          console.log(timeAtJob)\n          \n          setWorkOrder({\n              ...workOrder,\n              timeAtJob: timeAtJob\n          });\n          setHideClockIn(true);\n        };\n    };\n\n    const toggleServiceModal = () => {\n        setIsOpenServiceModal(!isOpenServiceModal);\n    };\n\n    const handleChangeService = e => {\n        setService({\n            ...service,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmitService = e => {\n        e.preventDefault();\n        const errors = {};\n\n        if(service.make.trim() === '') {\n            errors.make = 'Must not be empty';\n        };\n        if(service.type.trim() === '') {\n            errors.type = 'Must not be empty';\n        };\n        if(service.model.trim() === '') {\n            errors.model = 'Must not be empty';\n        };\n        if(service.serialNumber.trim() === '') {\n            errors.serialNumber = 'Must not be empty';\n        };\n        if(service.serviceDone.trim() === '') {\n            errors.serviceDone = 'Must not be empty';\n        };\n\n        if(Object.keys(errors).length !== 0) {\n            setServiceErrors(errors);\n        } else {\n            if(!workOrder.serviceDone) {\n                setWorkOrder({\n                    ...workOrder,\n                    serviceDone: [service]\n                });\n            } else {\n                setWorkOrder({\n                    ...workOrder,\n                    serviceDone: [...workOrder.serviceDone, service]\n                });\n            };\n\n            setService({\n                make: '',\n                type: '',\n                model: '',\n                serialNumber: '',\n                bayNumber: '',\n                serviceDone: '',\n                partsUsed: [],\n                partsNeeded: []\n            });\n\n            setIsOpenServiceModal(false);\n            setServiceErrors({});\n        };\n    };\n\n    const togglePartUsed = () => {\n        setIsOpenPartUsed(!isOpenPartUsed);\n    };\n\n    const togglePartNeeded = () => {\n        setIsOpenPartNeeded(!isOpenPartNeeded);\n    };\n\n    const handleChangePartUsed = e => {\n        setPartUsed({\n            ...partUsed,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmitPartUsed = e => {\n        e.preventDefault();\n        const errors = {};\n\n        if(partUsed.quantity.trim() === '') {\n            errors.quantity = 'Must not be empty';\n        };\n        if(partUsed.partDescription.trim() === '') {\n            errors.partDescription = 'Must not be empty';\n        };\n        if(partUsed.partNumber.trim() === '') {\n            errors.partNumber = 'Must not be empty';\n        };\n\n        if(Object.keys(errors).length !== 0) {\n            setPartUsedErrors(errors);\n        } else {\n            setService({\n                ...service,\n                partsUsed: [...service.partsUsed, partUsed]\n            });\n\n            setPartUsed({\n                quantity: '',\n                partDescription: '',\n                partNumber: '',\n                images: []\n            });\n\n            setIsOpenPartUsed(false);\n            setPartUsedErrors({});\n        };\n    };\n\n    const handleChangePartNeeded = e => {\n        setPartNeeded({\n            ...partNeeded,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmitPartNeeded = e => {\n        e.preventDefault();\n        const errors = {};\n\n        if(partNeeded.quantity.trim() === '') {\n            errors.quantity = 'Must not be empty';\n        };\n        if(partNeeded.partDescription.trim() === '') {\n            errors.partDescription = 'Must not be empty';\n        };\n        if(partNeeded.partNumber.trim() === '') {\n            errors.partNumber = 'Must not be empty';\n        };\n\n        if(Object.keys(errors).length !== 0) {\n            setPartNeededErrors(errors);\n        } else {\n            setService({\n                ...service,\n                partsNeeded: [...service.partsNeeded, partNeeded]\n            });\n\n            setPartNeeded({\n                quantity: '',\n                partDescription: '',\n                partNumber: '',\n                images: []\n            });\n\n            setIsOpenPartNeeded(false);\n            setPartNeededErrors({});\n        };\n    };\n\n    const handleSubmitForSignature = e => {\n        e.preventDefault();\n        setHideOfficeNotes(true);\n        setHideSignaturePad(false);\n        setHideSubmitForSignatureButton(true);\n        setHideSubmitForReviewButton(false);\n    };\n\n    const clearSignaturePad = e => {\n        sigPad.clear();\n    };\n\n    return (\n        <div>\n            <EmployeeNavbar />\n            <div className=\"work-order-page\">\n                <EmployeeSidebar />\n                {workOrder ? <div className=\"work-order-page-content\">\n                    <h1>{`Work Order #${workOrder.jobNumber}`}</h1>\n                    <Form className=\"work-order-info\">\n                        <FormGroup>\n                            <Label for=\"customerName\">Customer Name</Label>\n                            <Input disabled value={`${customer.firstName} ${customer.lastName}`} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"customerAddress\">Customer Address</Label>\n                            <a href={`http://maps.google.com/maps?q=${mapsAddress}`}>\n                                <Input disabled value={`${customer.address}, ${customer.city}, ${customer.state} ${customer.zipcode}`} />\n                            </a>\n                        </FormGroup>        \n                        <FormGroup className=\"type-input\">\n                            <Label for=\"serviceType\">Service Type(s)</Label>\n                            <Input disabled value={typeConverter(workOrder.serviceType)} />\n                        </FormGroup>\n                        <div className=\"date-div\">\n                            <FormGroup>\n                                <Label for=\"serviceDate\">Service Date</Label>\n                                <Input disabled value={dateConverter(workOrder.serviceDate)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"serviceTime\">Service Time</Label>\n                                <Input disabled value={timeConverter(workOrder.serviceTime)} />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"crewMembers\">Crew Members</Label>\n                            <Input disabled value={crewConverter(employees)} />\n                        </FormGroup>\n                        <FormGroup className=\"description-input\">\n                            <Label for=\"serviceDescription\">Service Description</Label>\n                            <Input disabled type=\"textarea\" value={workOrder.serviceDescription} />\n                        </FormGroup>\n                        {hideClockIn ? \n                        <FormGroup>\n                            <Label for=\"timeOnJob\">Time At Job</Label>\n                            <Input disabled type=\"text\" value={workOrder.timeAtJob ? workOrder.timeAtJob : null} />\n                        </FormGroup>\n                        : null}\n                        <div className=\"button-div\">\n                            {!hideClockIn ? \n                            <div className=\"secondary-button-div\">\n                                <FormGroup>\n                                    {startTime === 0 ?\n                                    <Button color=\"primary\" onClick={clockIn}>Clock In</Button>\n                                    :\n                                    <Button disabled color=\"primary\">Clock In</Button>}\n                                </FormGroup>\n                                <FormGroup>\n                                    {endTime === 0 ?\n                                    <Button color=\"primary\" onClick={clockOut}>Clock Out</Button>\n                                    :\n                                    <Button disabled color=\"primary\">Clock Out</Button>}\n                                </FormGroup>\n                            </div> : null}\n                            {workOrder.serviceDone ? workOrder.serviceDone.length > 0 ?\n                            <div className=\"service-table\">\n                                <h5>Services</h5>\n                                <Table hover size=\"sm\">\n                                    <thead>\n                                        <th>Service Type</th>\n                                        <th>Service Description</th>\n                                        <th>Parts Needed</th>\n                                    </thead>\n                                    <tbody>\n                                    {workOrder.serviceDone.map(service => (\n                                        <tr>\n                                            <td scope=\"row\">{service.type}</td>\n                                            <td>{service.serviceDone}</td>\n                                            <td>{service.partsNeeded.length > 0 ? 'Y' : 'N'}</td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </Table>\n                            </div>\n                            : null : null}\n                            <FormGroup>\n                                <Button outline color=\"success\" onClick={toggleServiceModal}>Add Service</Button>\n                            </FormGroup>\n                            <div className=\"secondary-button-div\">\n                                <FormGroup>\n                                    <Button outline color=\"info\">Add Inspection</Button>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Button outline color=\"warning\" className=\"training-button\">Add Training</Button>\n                                </FormGroup>\n                            </div>\n                        </div>\n                        <div className=\"travel-div\">\n                            <FormGroup>\n                                <Label for=\"travelTime\">Travel Time (Roundtrip)</Label>\n                                <Input type=\"text\" name=\"travelTime\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"travelMileage\">Travel Mileage (Roundtrip)</Label>\n                                <Input type=\"text\" />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"notes\">Notes</Label>\n                            <Input type=\"textarea\" value={workOrder.notes ? workOrder.notes : null} />\n                        </FormGroup>\n                        {hideOfficeNotes ? null : <FormGroup>\n                            <Label for=\"officeNotes\">Office Notes (NOT FOR CUSTOMER)</Label>\n                            <Input type=\"textarea\" value={workOrder.officeNotes ? workOrder.officeNotes : null} />\n                        </FormGroup>}\n                        {hideSignaturePad ? null : <FormGroup>\n                            <div className=\"signature-pad-header\">\n                                <Label for=\"signature\">Signature</Label>\n                                <i className=\"far fa-times clear-button\" onClick={e => clearSignaturePad(e)} />\n                            </div>\n                            <SignatureCanvas canvasProps={{className: \"signature-pad\"}} ref={(ref) => { sigPad = ref }} />\n                        </FormGroup>}\n                        {hideSubmitForSignatureButton ? null : <FormGroup className=\"submit-button\">\n                            <Button color=\"success\" onClick={handleSubmitForSignature}>Submit for Signature</Button>\n                        </FormGroup>}\n                        {hideSubmitForReviewButton ? null : <FormGroup className=\"submit-button\">\n                            <Button color=\"success\">Submit for Review</Button>\n                        </FormGroup>}\n                    </Form>\n                </div> : null}\n                <Modal isOpen={isOpenServiceModal} toggle={toggleServiceModal}>\n                    <ModalHeader toggle={toggleServiceModal}>Add Service</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleSubmitService}>\n                            <div className=\"equipment-div\">\n                                <FormGroup>\n                                    <Label for=\"make\">Make</Label>\n                                    <Input type=\"text\" name=\"make\" onChange={handleChangeService} invalid={serviceErrors.make ? true : false} />\n                                    <FormFeedback>{serviceErrors.make}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"type\">Type</Label>\n                                    <Input type=\"text\" name=\"type\" onChange={handleChangeService} invalid={serviceErrors.type ? true : false} />\n                                    <FormFeedback>{serviceErrors.type}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <div className=\"equipment-div\">\n                                <FormGroup>\n                                    <Label for=\"model\">Model</Label>\n                                    <Input type=\"text\" name=\"model\" onChange={handleChangeService} invalid={serviceErrors.model ? true : false} />\n                                    <FormFeedback>{serviceErrors.model}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"serialNumber\">Serial Number</Label>\n                                    <Input type=\"text\" name=\"serialNumber\" onChange={handleChangeService} invalid={serviceErrors.serialNumber ? true : false} />\n                                    <FormFeedback>{serviceErrors.serialNumber}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"bayNumber\">Bay Number</Label>\n                                <Input type=\"text\" name=\"bayNumber\" onChange={handleChangeService} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"serviceDone\">What work was done?</Label>\n                                <Input type=\"textarea\" name=\"serviceDone\" onChange={handleChangeService} invalid={serviceErrors.serviceDone ? true : false} />\n                                <FormFeedback>{serviceErrors.serviceDone}</FormFeedback>\n                            </FormGroup>\n                            {service.partsUsed.length > 0 ? \n                            <div className=\"part-div\">\n                                <h5>Parts Used</h5>\n                                <Table hover size=\"sm\" className=\"part-table\">\n                                    <thead>\n                                        <th>Quantity</th>\n                                        <th>Description</th>\n                                        <th>Part Number</th>\n                                        <th>Images</th>\n                                    </thead>\n                                    <tbody>\n                                    {service.partsUsed.map(part => (\n                                        <tr>\n                                            <td scope=\"row\">{part.quantity}</td>\n                                            <td>{part.partDescription}</td>\n                                            <td>{part.partNumber}</td>\n                                            <td>{part.images}</td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </Table>\n                            </div>\n                            : null}\n                            {service.partsNeeded.length > 0 ? \n                            <div className=\"part-div\">\n                                <h5>Parts Needed</h5>\n                                <Table hover size=\"sm\" className=\"part-table\">\n                                    <thead>\n                                        <th>Quantity</th>\n                                        <th>Description</th>\n                                        <th>Part Number</th>\n                                        <th>Images</th>\n                                    </thead>\n                                    <tbody>\n                                    {service.partsNeeded.map(part => (\n                                        <tr>\n                                            <td scope=\"row\">{part.quantity}</td>\n                                            <td>{part.partDescription}</td>\n                                            <td>{part.partNumber}</td>\n                                            <td>{part.images}</td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </Table>\n                            </div>\n                            : null}\n                            <FormGroup className=\"parts-group\">\n                                <Button outline color=\"success\" onClick={togglePartUsed}>Add Part Used</Button>\n                                <Button outline color=\"danger\" onClick={togglePartNeeded}>Add Part Needed</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleSubmitService}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={isOpenPartUsed} toggle={togglePartUsed}>\n                    <ModalHeader toggle={togglePartUsed}>Add Part Used</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleSubmitPartUsed}>\n                            <FormGroup>\n                                <Label>Quantity</Label>\n                                <Input type=\"text\" name=\"quantity\" onChange={handleChangePartUsed} invalid={partUsedErrors.quantity ? true : false} />\n                                <FormFeedback>{partUsedErrors.quantity}</FormFeedback>                              \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Description</Label>\n                                <Input type=\"text\" name=\"partDescription\" onChange={handleChangePartUsed} invalid={partUsedErrors.partDescription ? true : false} />\n                                <FormFeedback>{partUsedErrors.partDescription}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Number</Label>\n                                <Input type=\"text\" name=\"partNumber\" onChange={handleChangePartUsed} invalid={partUsedErrors.partNumber ? true : false} />\n                                <FormFeedback>{partUsedErrors.partNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Picture(s)</Label>\n                                <Input multiple type=\"file\" name=\"images\" onChange={handleChangePartUsed} />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleSubmitPartUsed}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={isOpenPartNeeded} toggle={togglePartNeeded}>\n                    <ModalHeader toggle={togglePartNeeded}>Add Part Needed</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleSubmitPartNeeded}>\n                            <FormGroup>\n                                <Label>Quantity</Label>\n                                <Input type=\"text\" name=\"quantity\" onChange={handleChangePartNeeded} invalid={partNeededErrors.quantity ? true : false} />\n                                <FormFeedback>{partNeededErrors.quantity}</FormFeedback>                               \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Description</Label>\n                                <Input type=\"text\" name=\"partDescription\" onChange={handleChangePartNeeded} invalid={partNeededErrors.partDescription ? true : false} />\n                                <FormFeedback>{partNeededErrors.partDescription}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Number</Label>\n                                <Input type=\"text\" name=\"partNumber\" onChange={handleChangePartNeeded} invalid={partNeededErrors.partNumber ? true : false} />\n                                <FormFeedback>{partNeededErrors.partNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Picture(s)</Label>\n                                <Input multiple type=\"file\" name=\"images\" onChange={handleChangePartNeeded} />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleSubmitPartNeeded}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default WorkOrderPage;"]},"metadata":{},"sourceType":"module"}