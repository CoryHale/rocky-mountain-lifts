{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/TaskCalendar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport { getTasks } from '../../actions/getTasks';\nimport { getWorkOrders } from '../../actions/getWorkOrders';\nimport '../../styles/employee-dashboard.scss';\nimport '@fullcalendar/daygrid/main.css';\nimport '@fullcalendar/timegrid/main.css';\nimport '../../styles/calendar.scss';\n\nconst TaskCalendar = () => {\n  const [events, setEvents] = useState([]);\n  const eventsArray = [];\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector(state => state.getTasksReducer.tasks);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getWorkOrders();\n    getTasks();\n  }, []);\n  useEffect(() => {\n    if (fetchWorkOrders) {\n      fetchWorkOrders.map(workOrder => {\n        eventsArray.push({\n          title: workOrder.serviceDescription,\n          date: workOrder.serviceDate\n        });\n      });\n    }\n  }, [fetchWorkOrders]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Calendar\"), /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, bootstrapPlugin],\n    initialView: \"dayGridMonth\",\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,timeGridWeek,timeGridDay'\n    },\n    themeSystem: \"bootstrap\",\n    height: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default TaskCalendar;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/TaskCalendar.js"],"names":["React","useState","useEffect","useDispatch","useSelector","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","bootstrapPlugin","getTasks","getWorkOrders","TaskCalendar","events","setEvents","eventsArray","workOrders","setWorkOrders","fetchWorkOrders","state","getWorkOrdersReducer","tasks","setTasks","fetchTasks","getTasksReducer","dispatch","map","workOrder","push","title","serviceDescription","date","serviceDate","left","center","right"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,OAAO,sCAAP;AACA,OAAO,gCAAP;AACA,OAAO,iCAAP;AACA,OAAO,4BAAP;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMc,WAAW,GAAG,EAApB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMiB,eAAe,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BJ,UAArC,CAAnC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMsB,UAAU,GAAGnB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACK,eAAN,CAAsBH,KAAhC,CAA9B;AACA,QAAMI,QAAQ,GAAGtB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,aAAa;AACbD,IAAAA,QAAQ;AACX,GAHQ,EAGN,EAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGgB,eAAH,EAAoB;AAChBA,MAAAA,eAAe,CAACQ,GAAhB,CAAoBC,SAAS,IAAI;AAC7BZ,QAAAA,WAAW,CAACa,IAAZ,CAAiB;AACbC,UAAAA,KAAK,EAAEF,SAAS,CAACG,kBADJ;AAEbC,UAAAA,IAAI,EAAEJ,SAAS,CAACK;AAFH,SAAjB;AAIH,OALD;AAMH;AACJ,GATQ,EASN,CAACd,eAAD,CATM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAE,CAACZ,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,EAAmDC,eAAnD,CADb;AAEI,IAAA,WAAW,EAAC,cAFhB;AAGI,IAAA,aAAa,EAAE;AACXwB,MAAAA,IAAI,EAAE,iBADK;AAEXC,MAAAA,MAAM,EAAE,OAFG;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAHnB;AAQI,IAAA,WAAW,EAAC,WARhB;AASI,IAAA,MAAM,EAAC,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAiBH,CA1CD;;AA4CA,eAAevB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport { getTasks } from '../../actions/getTasks';\nimport { getWorkOrders } from '../../actions/getWorkOrders';\n\nimport '../../styles/employee-dashboard.scss';\nimport '@fullcalendar/daygrid/main.css';\nimport '@fullcalendar/timegrid/main.css';\nimport '../../styles/calendar.scss';\n\nconst TaskCalendar = () => {\n    const [events, setEvents] = useState([]);\n    const eventsArray = [];\n    const [workOrders, setWorkOrders] = useState([]);\n    const fetchWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n    const [tasks, setTasks] = useState([]);\n    const fetchTasks = useSelector(state => state.getTasksReducer.tasks);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        getWorkOrders();\n        getTasks();\n    }, []);\n\n    useEffect(() => {\n        if(fetchWorkOrders) {\n            fetchWorkOrders.map(workOrder => {\n                eventsArray.push({\n                    title: workOrder.serviceDescription,\n                    date: workOrder.serviceDate\n                })\n            })\n        }\n    }, [fetchWorkOrders]);\n\n    return (\n        <div className=\"calendar-page\">\n            <h1>Calendar</h1>\n            <FullCalendar\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, bootstrapPlugin]}\n                initialView=\"dayGridMonth\"\n                headerToolbar={{\n                    left: 'prev,next today',\n                    center: 'title',\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                }}\n                themeSystem=\"bootstrap\"\n                height=\"auto\"\n            />\n        </div>\n        \n    );\n};\n\nexport default TaskCalendar;"]},"metadata":{},"sourceType":"module"}