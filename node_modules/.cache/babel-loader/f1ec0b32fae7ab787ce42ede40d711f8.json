{"ast":null,"code":"import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\nexport const ADD_WORK_ORDER_START = \"ADD_WORK_ORDER_START\";\nexport const ADD_WORK_ORDER_SUCCESS = \"ADD_WORK_ORDER_SUCCESS\";\nexport const ADD_WORK_ORDER_FAILURE = \"ADD_WORK_ORDER_FAILURE\";\nexport const addWorkOrder = workOrder => async dispatch => {\n  dispatch({\n    type: ADD_WORK_ORDER_START\n  });\n  const axiosAuth = await axiosWithAuth();\n  return axiosAuth.post(`${dbUrl}/work_orders`, workOrder).then(() => {\n    dispatch({\n      type: ADD_WORK_ORDER_SUCCESS,\n      payload: \"SUCCESS\"\n    });\n  }).catch(err => {\n    dispatch({\n      type: ADD_WORK_ORDER_FAILURE,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts/src/actions/addWorkOrder.js"],"names":["axiosWithAuth","dbUrl","ADD_WORK_ORDER_START","ADD_WORK_ORDER_SUCCESS","ADD_WORK_ORDER_FAILURE","addWorkOrder","workOrder","dispatch","type","axiosAuth","post","then","payload","catch","err","response","data"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMC,YAAY,GAAIC,SAAD,IAAe,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AAEA,QAAMO,SAAS,GAAG,MAAMT,aAAa,EAArC;AAEA,SAAOS,SAAS,CACbC,IADI,CACE,GAAET,KAAM,cADV,EACyBK,SADzB,EAEJK,IAFI,CAEC,MAAM;AACVJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,sBADC;AAEPS,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPI,EAQJC,KARI,CAQGC,GAAD,IAAS;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,sBADC;AAEPQ,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID,GAbI,CAAP;AAcD,CAnBM","sourcesContent":["import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const ADD_WORK_ORDER_START = \"ADD_WORK_ORDER_START\";\nexport const ADD_WORK_ORDER_SUCCESS = \"ADD_WORK_ORDER_SUCCESS\";\nexport const ADD_WORK_ORDER_FAILURE = \"ADD_WORK_ORDER_FAILURE\";\n\nexport const addWorkOrder = (workOrder) => async (dispatch) => {\n  dispatch({ type: ADD_WORK_ORDER_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .post(`${dbUrl}/work_orders`, workOrder)\n    .then(() => {\n      dispatch({\n        type: ADD_WORK_ORDER_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ADD_WORK_ORDER_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}