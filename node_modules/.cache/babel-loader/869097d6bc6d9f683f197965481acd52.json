{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/customer-page-components/InfoTab.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { Form, FormGroup, Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Input, FormFeedback } from \"reactstrap\";\nimport { getCustomer } from \"../../actions/getCustomer\"; // import { editCustomer } from \"../../actions/editCustomer\";\n// import \"../../styles/employee-dashboard.scss\";\n\nconst InfoTab = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n  const [isOpen, setIsOpen] = useState(false);\n  const [editedCustomer, setEditedCustomer] = useState({\n    businessName: \"\",\n    industry: \"\",\n    primaryContact: {\n      firstName: \"\",\n      lastName: \"\"\n    },\n    billingContact: {\n      firstName: \"\",\n      lastName: \"\"\n    },\n    primaryOfficeNumber: \"\",\n    primaryExt: \"\",\n    primaryCellNumber: \"\",\n    primaryEmail: \"\",\n    primaryJobTitle: \"\",\n    billingOfficeNumber: \"\",\n    billingExt: \"\",\n    billingCellNumber: \"\",\n    billingEmail: \"\",\n    billingJobTitle: \"\",\n    shopAddress: {\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\"\n    },\n    billingAddress: {\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\"\n    },\n    noBillingContact: false\n  });\n  const success = useSelector(state => state.editCustomerReducer.success);\n  const [errors, setErrors] = useState({});\n  const getErrorsFromState = useSelector(state => state.editCustomerReducer.errors);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomer(customerId));\n  }, []);\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n    }\n  }, [getCustomerFromState]);\n  useEffect(() => {\n    if (success) {\n      setErrors({});\n      toggle();\n    }\n  }, [success]);\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    setErrors(getErrorsFromState);\n  }, [getErrorsFromState]);\n\n  const toggle = () => {\n    if (!isOpen) {\n      setEditedCustomer({\n        businessName: customer.businessName,\n        industry: customer.industry,\n        primaryContact: {\n          firstName: customer.primaryContact.firstName,\n          lastName: customer.primaryContact.lastName\n        },\n        billingContact: {\n          firstName: customer.billingContact.firstName,\n          lastName: customer.billingContact.lastName\n        },\n        primaryOfficeNumber: customer.primaryOfficeNumber,\n        primaryExt: customer.primaryExt,\n        primaryCellNumber: customer.primaryCellNumber,\n        primaryEmail: customer.primaryEmail,\n        primaryJobTitle: customer.primaryJobTitle,\n        billingOfficeNumber: customer.billingOfficeNumber,\n        billingExt: customer.billingExt,\n        billingCellNumber: customer.billingCellNumber,\n        billingEmail: customer.billingEmail,\n        billingJobTitle: customer.billingJobTitle,\n        shopAddress: {\n          address: customer.shopAddress.address,\n          city: customer.shopAddress.city,\n          state: customer.shopAddress.state,\n          zipcode: customer.shopAddress.zipcode\n        },\n        billingAddress: {\n          address: customer.billingAddress.address,\n          city: customer.billingAddress.city,\n          state: customer.billingAddress.state,\n          zipcode: customer.billingAddress.zipcode\n        },\n        userId: customer.userId\n      });\n    }\n\n    if (isOpen) {\n      setEditedCustomer({\n        businessName: \"\",\n        industry: \"\",\n        primaryContact: {\n          firstName: \"\",\n          lastName: \"\"\n        },\n        billingContact: {\n          firstName: \"\",\n          lastName: \"\"\n        },\n        primaryOfficeNumber: \"\",\n        primaryExt: \"\",\n        primaryCellNumber: \"\",\n        primaryEmail: \"\",\n        primaryJobTitle: \"\",\n        billingOfficeNumber: \"\",\n        billingExt: \"\",\n        billingCellNumber: \"\",\n        billingEmail: \"\",\n        billingJobTitle: \"\",\n        shopAddress: {\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\"\n        },\n        billingAddress: {\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\"\n        },\n        noBillingContact: false\n      });\n      setErrors({});\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = e => {\n    setEditedCustomer({ ...editedCustomer,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handlePrimaryContactChange = e => {\n    setEditedCustomer({ ...editedCustomer,\n      primaryContact: { ...editedCustomer.primaryContact,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  const handleBillingContactChange = e => {\n    setEditedCustomer({ ...editedCustomer,\n      billingContact: { ...editedCustomer.billingContact,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  const handleShopAddressChange = e => {\n    setEditedCustomer({ ...editedCustomer,\n      shopAddress: { ...editedCustomer.shopAddress,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  const handleBillingAddressChange = e => {\n    setEditedCustomer({ ...editedCustomer,\n      billingAddress: { ...editedCustomer.billingAddress,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  const toggleBillingContact = e => {\n    setEditedCustomer({ ...editedCustomer,\n      noBillingContact: !editedCustomer.noBillingContact\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // dispatch(editCustomer(editedCustomer));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-info-page-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"customer-page-info-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"Primary Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, \"Name:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, customer.primaryContact ? customer.primaryContact.firstName : null, \" \", customer.primaryContact ? customer.primaryContact.lastName : null)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, \"Job Title: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 28\n    }\n  }, customer.primaryJobTitle)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, \"Office:\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: customer.primaryExt ? `tel:+1-${customer.primaryOfficeNumber},${customer.primaryExt}` : `tel:+1-${customer.primaryOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, customer.primaryExt ? `${customer.primaryOfficeNumber}, .ext ${customer.primaryExt}` : `${customer.primaryOfficeNumber}`)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, \"Cell:\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, customer.primaryCellNumber)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, \"Email:\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.primaryEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, customer.primaryEmail)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, \"Billing Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, \"Name:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, customer.billingContact ? customer.billingContact.firstName : null, \" \", customer.billingContact ? customer.billingContact.lastName : null)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, \"Job Title: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 28\n    }\n  }, customer.billingJobTitle)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, \"Office:\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: customer.billingExt ? `tel:+1-${customer.billingOfficeNumber},${customer.billingExt}` : `tel:+1-${customer.billingOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, customer.billingExt ? `${customer.billingOfficeNumber}, .ext ${customer.billingExt}` : `${customer.billingOfficeNumber}`)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, \"Cell:\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, customer.billingCellNumber)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }, \"Email:\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.billingEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  }, customer.billingEmail))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-addresses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, \"Shop Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://maps.google.com/?q=${customer.shopAddress ? customer.shopAddress.address : null}, ${customer.shopAddress ? customer.shopAddress.city : null}, ${customer.shopAddress ? customer.shopAddress.state : null} ${customer.shopAddress ? customer.shopAddress.zipcode : null}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"address-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 15\n    }\n  }, customer.shopAddress ? customer.shopAddress.address : null, \",\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, customer.shopAddress ? customer.shopAddress.city : null, \",\", \" \", customer.shopAddress ? customer.shopAddress.state : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }, customer.shopAddress ? customer.shopAddress.zipcode : null))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, \"Billing Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://maps.google.com/?q=${customer.billingAddress ? customer.billingAddress.address : null}, ${customer.billingAddress ? customer.billingAddress.city : null}, ${customer.billingAddress ? customer.billingAddress.state : null} ${customer.billingAddress ? customer.billingAddress.zipcode : null}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"address-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, customer.billingAddress ? customer.billingAddress.address : null, \",\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }, customer.billingAddress ? customer.billingAddress.city : null, \",\", \" \", customer.billingAddress ? customer.billingAddress.state : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }, customer.billingAddress ? customer.billingAddress.zipcode : null))))), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    className: \"info-edit-button\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-pen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  }), \" Edit\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }\n  }, \"Edit Customer\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    className: \"add-customer-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"businessName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 15\n    }\n  }, \"Business Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"businessName\",\n    onChange: handleChange,\n    value: editedCustomer.businessName,\n    invalid: errors.businessName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  }, errors.businessName)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"industry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 15\n    }\n  }, \"Industry\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"industry\",\n    onChange: handleChange,\n    value: editedCustomer.industry,\n    invalid: errors.industry ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  }, errors.industry)), /*#__PURE__*/React.createElement(Label, {\n    for: \"primary-contact\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  }, \"Primary Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"primary-contact-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handlePrimaryContactChange,\n    value: editedCustomer.primaryContact ? editedCustomer.primaryContact.firstName : null,\n    invalid: errors.primaryContact ? errors.primaryContact.firstName ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 17\n    }\n  }, errors.primaryContact ? errors.primaryContact.firstName ? errors.primaryContact.firstName : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handlePrimaryContactChange,\n    value: editedCustomer.primaryContact ? editedCustomer.primaryContact.lastName : null,\n    invalid: errors.primaryContact ? errors.primaryContact.lastName ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 17\n    }\n  }, errors.primaryContact ? errors.primaryContact.lastName ? errors.primaryContact.lastName : null : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"primary-phone-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"primary-office-phone-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"primary-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"primaryOfficeNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 19\n    }\n  }, \"Office Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"primaryOfficeNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    value: editedCustomer.primaryOfficeNumber,\n    invalid: errors.primaryOfficeNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 19\n    }\n  }, errors.primaryOfficeNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"primary-ext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"primaryExt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 19\n    }\n  }, \"ext.\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"primaryExt\",\n    onChange: handleChange,\n    value: editedCustomer.primaryExt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"primaryCellNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 17\n    }\n  }, \"Cell Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"primaryCellNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    value: editedCustomer.primaryCellNumber,\n    invalid: errors.primaryCellNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 17\n    }\n  }, errors.primaryCellNumber))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"primary-email-jobTitle-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"primaryEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"primaryEmail\",\n    placeholder: \"example@example.com\",\n    onChange: handleChange,\n    value: editedCustomer.primaryEmail,\n    invalid: errors.primaryEmail ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 17\n    }\n  }, errors.primaryEmail)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"primaryJobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 17\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"primaryJobTitle\",\n    onChange: handleChange,\n    value: editedCustomer.primaryJobTitle,\n    invalid: errors.primaryJobTitle ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 17\n    }\n  }, errors.primaryJobTitle))), /*#__PURE__*/React.createElement(Label, {\n    for: \"shop-address\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 13\n    }\n  }, \"Shop Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-address-city-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 19\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"address\",\n    onChange: handleShopAddressChange,\n    value: editedCustomer.shopAddress ? editedCustomer.shopAddress.address : null,\n    invalid: errors.shopAddress ? errors.shopAddress.address ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 19\n    }\n  }, errors.shopAddress ? errors.shopAddress.address ? errors.shopAddress.address : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 19\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"city\",\n    onChange: handleShopAddressChange,\n    value: editedCustomer.shopAddress ? editedCustomer.shopAddress.city : null,\n    invalid: errors.shopAddress ? errors.shopAddress.city ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 19\n    }\n  }, errors.shopAddress ? errors.shopAddress.city ? errors.shopAddress.city : null : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-state-zipcode-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 19\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"state\",\n    onChange: handleShopAddressChange,\n    value: editedCustomer.shopAddress ? editedCustomer.shopAddress.state : null,\n    invalid: errors.shopAddress ? errors.shopAddress.state ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 19\n    }\n  }, errors.shopAddress ? errors.shopAddress.state ? errors.shopAddress.state : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"zipcode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 19\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"zipcode\",\n    onChange: handleShopAddressChange,\n    value: editedCustomer.shopAddress ? editedCustomer.shopAddress.zipcode : null,\n    invalid: errors.shopAddress ? errors.shopAddress.zipcode ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 19\n    }\n  }, errors.shopAddress ? errors.shopAddress.zipcode ? errors.shopAddress.zipcode : null : null)))), /*#__PURE__*/React.createElement(Label, {\n    for: \"billing-contact\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 13\n    }\n  }, \"Billing Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-contact-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handleBillingContactChange,\n    value: editedCustomer.billingContact ? editedCustomer.billingContact.firstname : null,\n    invalid: errors.billingContact ? errors.billingContact.firstName ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 17\n    }\n  }, errors.billingContact ? errors.billingContact.firstName ? errors.billingContact.firstName : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handleBillingContactChange,\n    value: editedCustomer.billingContact ? editedCustomer.billingContact.lastName : null,\n    invalid: errors.billingContact ? errors.billingContact.lastName ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 17\n    }\n  }, errors.billingContact ? errors.billingContact.lastName ? errors.billingContact.lastName : null : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-phone-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-office-phone-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"billing-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billingOfficeNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 19\n    }\n  }, \"Office Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"billingOfficeNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    value: editedCustomer.billingOfficeNumber,\n    invalid: errors.billingOfficeNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 19\n    }\n  }, errors.billingOfficeNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"billing-ext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billingExt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 19\n    }\n  }, \"ext.\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"billingExt\",\n    onChange: handleChange,\n    value: editedCustomer.billingExt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billingCellNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 17\n    }\n  }, \"Cell Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"billingCellNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    value: editedCustomer.billingCellNumber,\n    invalid: errors.billingCellNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 17\n    }\n  }, errors.billingCellNumber))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-email-jobTitle-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billingEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"billingEmail\",\n    placeholder: \"example@example.com\",\n    onChange: handleChange,\n    value: editedCustomer.billingEmail,\n    invalid: errors.billingEmail ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 17\n    }\n  }, errors.billingEmail)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billingJobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 17\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"billingJobTitle\",\n    onChange: handleChange,\n    value: editedCustomer.billingJobTitle,\n    invalid: errors.billingJobTitle ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 17\n    }\n  }, errors.billingJobTitle))), /*#__PURE__*/React.createElement(Label, {\n    for: \"billing-address\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 13\n    }\n  }, \"Billing Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-address-city-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 19\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"address\",\n    onChange: handleBillingAddressChange,\n    value: editedCustomer.billingAddress ? editedCustomer.billingAddress.address : null,\n    invalid: errors.billingAddress ? errors.billingAddress.address ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 19\n    }\n  }, errors.billingAddress ? errors.billingAddress.address ? errors.billingAddress.address : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 19\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"city\",\n    onChange: handleBillingAddressChange,\n    value: editedCustomer.billingAddress ? editedCustomer.billingAddress.city : null,\n    invalid: errors.billingAddress ? errors.billingAddress.city ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 19\n    }\n  }, errors.billingAddress ? errors.billingAddress.city ? errors.billingAddress.city : null : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billing-state-zipcode-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 19\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"state\",\n    onChange: handleBillingAddressChange,\n    value: editedCustomer.billingAddress ? editedCustomer.billingAddress.state : null,\n    invalid: errors.billingAddress ? errors.billingAddress.state ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 19\n    }\n  }, errors.billingAddress ? errors.billingAddress.state ? errors.billingAddress.state : null : null)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"zipcode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 19\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"zipcode\",\n    onChange: handleBillingAddressChange,\n    value: editedCustomer.billingAddress ? editedCustomer.billingAddress.zipcode : null,\n    invalid: errors.billingAddress ? errors.billingAddress.zipcode ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 19\n    }\n  }, errors.billingAddress ? errors.billingAddress.zipcode ? errors.billingAddress.zipcode : null : null)))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"checkbox-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    value: editedCustomer.noBillingContact,\n    onClick: toggleBillingContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 17\n    }\n  }), \" \", \"No Billing Contact\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default InfoTab;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/customer-page-components/InfoTab.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","useLocation","Form","FormGroup","Button","Modal","ModalHeader","ModalBody","ModalFooter","Label","Input","FormFeedback","getCustomer","InfoTab","customer","setCustomer","getCustomerFromState","state","getCustomerReducer","isOpen","setIsOpen","editedCustomer","setEditedCustomer","businessName","industry","primaryContact","firstName","lastName","billingContact","primaryOfficeNumber","primaryExt","primaryCellNumber","primaryEmail","primaryJobTitle","billingOfficeNumber","billingExt","billingCellNumber","billingEmail","billingJobTitle","shopAddress","address","city","zipcode","billingAddress","noBillingContact","success","editCustomerReducer","errors","setErrors","getErrorsFromState","dispatch","location","pathArray","pathname","split","customerId","length","toggle","isFirstRun","current","userId","handleChange","e","target","name","value","handlePrimaryContactChange","handleBillingContactChange","handleShopAddressChange","handleBillingAddressChange","toggleBillingContact","handleSubmit","preventDefault","firstname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Form,\n  FormGroup,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport { getCustomer } from \"../../actions/getCustomer\";\n// import { editCustomer } from \"../../actions/editCustomer\";\n\n// import \"../../styles/employee-dashboard.scss\";\n\nconst InfoTab = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(\n    (state) => state.getCustomerReducer.customer\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [editedCustomer, setEditedCustomer] = useState({\n    businessName: \"\",\n    industry: \"\",\n    primaryContact: {\n      firstName: \"\",\n      lastName: \"\",\n    },\n    billingContact: {\n      firstName: \"\",\n      lastName: \"\",\n    },\n    primaryOfficeNumber: \"\",\n    primaryExt: \"\",\n    primaryCellNumber: \"\",\n    primaryEmail: \"\",\n    primaryJobTitle: \"\",\n    billingOfficeNumber: \"\",\n    billingExt: \"\",\n    billingCellNumber: \"\",\n    billingEmail: \"\",\n    billingJobTitle: \"\",\n    shopAddress: {\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\",\n    },\n    billingAddress: {\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\",\n    },\n    noBillingContact: false,\n  });\n  const success = useSelector((state) => state.editCustomerReducer.success);\n  const [errors, setErrors] = useState({});\n  const getErrorsFromState = useSelector(\n    (state) => state.editCustomerReducer.errors\n  );\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomer(customerId));\n  }, []);\n\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n    }\n  }, [getCustomerFromState]);\n\n  useEffect(() => {\n    if (success) {\n      setErrors({});\n      toggle();\n    }\n  }, [success]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    setErrors(getErrorsFromState);\n  }, [getErrorsFromState]);\n\n  const toggle = () => {\n    if (!isOpen) {\n      setEditedCustomer({\n        businessName: customer.businessName,\n        industry: customer.industry,\n        primaryContact: {\n          firstName: customer.primaryContact.firstName,\n          lastName: customer.primaryContact.lastName,\n        },\n        billingContact: {\n          firstName: customer.billingContact.firstName,\n          lastName: customer.billingContact.lastName,\n        },\n        primaryOfficeNumber: customer.primaryOfficeNumber,\n        primaryExt: customer.primaryExt,\n        primaryCellNumber: customer.primaryCellNumber,\n        primaryEmail: customer.primaryEmail,\n        primaryJobTitle: customer.primaryJobTitle,\n        billingOfficeNumber: customer.billingOfficeNumber,\n        billingExt: customer.billingExt,\n        billingCellNumber: customer.billingCellNumber,\n        billingEmail: customer.billingEmail,\n        billingJobTitle: customer.billingJobTitle,\n        shopAddress: {\n          address: customer.shopAddress.address,\n          city: customer.shopAddress.city,\n          state: customer.shopAddress.state,\n          zipcode: customer.shopAddress.zipcode,\n        },\n        billingAddress: {\n          address: customer.billingAddress.address,\n          city: customer.billingAddress.city,\n          state: customer.billingAddress.state,\n          zipcode: customer.billingAddress.zipcode,\n        },\n        userId: customer.userId,\n      });\n    }\n    if (isOpen) {\n      setEditedCustomer({\n        businessName: \"\",\n        industry: \"\",\n        primaryContact: {\n          firstName: \"\",\n          lastName: \"\",\n        },\n        billingContact: {\n          firstName: \"\",\n          lastName: \"\",\n        },\n        primaryOfficeNumber: \"\",\n        primaryExt: \"\",\n        primaryCellNumber: \"\",\n        primaryEmail: \"\",\n        primaryJobTitle: \"\",\n        billingOfficeNumber: \"\",\n        billingExt: \"\",\n        billingCellNumber: \"\",\n        billingEmail: \"\",\n        billingJobTitle: \"\",\n        shopAddress: {\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\",\n        },\n        billingAddress: {\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\",\n        },\n        noBillingContact: false,\n      });\n      setErrors({});\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handlePrimaryContactChange = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      primaryContact: {\n        ...editedCustomer.primaryContact,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const handleBillingContactChange = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      billingContact: {\n        ...editedCustomer.billingContact,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const handleShopAddressChange = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      shopAddress: {\n        ...editedCustomer.shopAddress,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const handleBillingAddressChange = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      billingAddress: {\n        ...editedCustomer.billingAddress,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const toggleBillingContact = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      noBillingContact: !editedCustomer.noBillingContact,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // dispatch(editCustomer(editedCustomer));\n  };\n\n  return (\n    <div className=\"customer-info-page-div\">\n      <Form className=\"customer-page-info-tab\">\n        <div className=\"customer-page-contacts\">\n          <FormGroup>\n            <h3>Primary Contact</h3>\n            <div>\n              <p>\n                Name:{\" \"}\n                <span>\n                  {customer.primaryContact\n                    ? customer.primaryContact.firstName\n                    : null}{\" \"}\n                  {customer.primaryContact\n                    ? customer.primaryContact.lastName\n                    : null}\n                </span>\n              </p>\n              <p>\n                Job Title: <span>{customer.primaryJobTitle}</span>\n              </p>\n              <p>\n                Office:{\" \"}\n                <a\n                  href={\n                    customer.primaryExt\n                      ? `tel:+1-${customer.primaryOfficeNumber},${customer.primaryExt}`\n                      : `tel:+1-${customer.primaryOfficeNumber}`\n                  }\n                >\n                  {customer.primaryExt\n                    ? `${customer.primaryOfficeNumber}, .ext ${customer.primaryExt}`\n                    : `${customer.primaryOfficeNumber}`}\n                </a>\n              </p>\n              <p>\n                Cell:{\" \"}\n                <a href={`tel:+1-${customer.primaryCellNumber}`}>\n                  {customer.primaryCellNumber}\n                </a>\n              </p>\n              <p>\n                Email:{\" \"}\n                <a href={`mailto:${customer.primaryEmail}`}>\n                  {customer.primaryEmail}\n                </a>\n              </p>\n            </div>\n          </FormGroup>\n          <FormGroup>\n            <h3>Billing Contact</h3>\n            <div>\n              <p>\n                Name:{\" \"}\n                <span>\n                  {customer.billingContact\n                    ? customer.billingContact.firstName\n                    : null}{\" \"}\n                  {customer.billingContact\n                    ? customer.billingContact.lastName\n                    : null}\n                </span>\n              </p>\n              <p>\n                Job Title: <span>{customer.billingJobTitle}</span>\n              </p>\n              <p>\n                Office:{\" \"}\n                <a\n                  href={\n                    customer.billingExt\n                      ? `tel:+1-${customer.billingOfficeNumber},${customer.billingExt}`\n                      : `tel:+1-${customer.billingOfficeNumber}`\n                  }\n                >\n                  {customer.billingExt\n                    ? `${customer.billingOfficeNumber}, .ext ${customer.billingExt}`\n                    : `${customer.billingOfficeNumber}`}\n                </a>\n              </p>\n              <p>\n                Cell:{\" \"}\n                <a href={`tel:+1-${customer.billingCellNumber}`}>\n                  {customer.billingCellNumber}\n                </a>\n              </p>\n              <p>\n                Email:{\" \"}\n                <a href={`mailto:${customer.billingEmail}`}>\n                  {customer.billingEmail}\n                </a>\n              </p>\n            </div>\n          </FormGroup>\n        </div>\n        <div className=\"customer-page-addresses\">\n          <FormGroup>\n            <h3>Shop Address</h3>\n            <a\n              href={`http://maps.google.com/?q=${\n                customer.shopAddress ? customer.shopAddress.address : null\n              }, ${customer.shopAddress ? customer.shopAddress.city : null}, ${\n                customer.shopAddress ? customer.shopAddress.state : null\n              } ${customer.shopAddress ? customer.shopAddress.zipcode : null}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"address-link\"\n            >\n              <p>\n                {customer.shopAddress ? customer.shopAddress.address : null},\n              </p>\n              <p>\n                {customer.shopAddress ? customer.shopAddress.city : null},{\" \"}\n                {customer.shopAddress ? customer.shopAddress.state : null}\n              </p>\n              <p>\n                {customer.shopAddress ? customer.shopAddress.zipcode : null}\n              </p>\n            </a>\n          </FormGroup>\n          <FormGroup>\n            <h3>Billing Address</h3>\n            <a\n              href={`http://maps.google.com/?q=${\n                customer.billingAddress ? customer.billingAddress.address : null\n              }, ${\n                customer.billingAddress ? customer.billingAddress.city : null\n              }, ${\n                customer.billingAddress ? customer.billingAddress.state : null\n              } ${\n                customer.billingAddress ? customer.billingAddress.zipcode : null\n              }`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"address-link\"\n            >\n              <p>\n                {customer.billingAddress\n                  ? customer.billingAddress.address\n                  : null}\n                ,\n              </p>\n              <p>\n                {customer.billingAddress ? customer.billingAddress.city : null},{\" \"}\n                {customer.billingAddress ? customer.billingAddress.state : null}\n              </p>\n              <p>\n                {customer.billingAddress\n                  ? customer.billingAddress.zipcode\n                  : null}\n              </p>\n            </a>\n          </FormGroup>\n        </div>\n      </Form>\n      <Button\n        outline\n        color=\"success\"\n        className=\"info-edit-button\"\n        onClick={toggle}\n      >\n        <i className=\"fad fa-pen\" /> Edit\n      </Button>\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Edit Customer</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit} className=\"add-customer-form\">\n            <FormGroup>\n              <Label for=\"businessName\">Business Name</Label>\n              <Input\n                type=\"text\"\n                name=\"businessName\"\n                onChange={handleChange}\n                value={editedCustomer.businessName}\n                invalid={errors.businessName ? true : false}\n              />\n              <FormFeedback>{errors.businessName}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"industry\">Industry</Label>\n              <Input\n                type=\"text\"\n                name=\"industry\"\n                onChange={handleChange}\n                value={editedCustomer.industry}\n                invalid={errors.industry ? true : false}\n              />\n              <FormFeedback>{errors.industry}</FormFeedback>\n            </FormGroup>\n            <Label for=\"primary-contact\" className=\"form-label\">\n              Primary Contact\n            </Label>\n            <div className=\"primary-contact-name\">\n              <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={handlePrimaryContactChange}\n                  value={\n                    editedCustomer.primaryContact\n                      ? editedCustomer.primaryContact.firstName\n                      : null\n                  }\n                  invalid={\n                    errors.primaryContact\n                      ? errors.primaryContact.firstName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.primaryContact\n                    ? errors.primaryContact.firstName\n                      ? errors.primaryContact.firstName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  onChange={handlePrimaryContactChange}\n                  value={\n                    editedCustomer.primaryContact\n                      ? editedCustomer.primaryContact.lastName\n                      : null\n                  }\n                  invalid={\n                    errors.primaryContact\n                      ? errors.primaryContact.lastName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.primaryContact\n                    ? errors.primaryContact.lastName\n                      ? errors.primaryContact.lastName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"primary-phone-div\">\n              <div className=\"primary-office-phone-div\">\n                <FormGroup className=\"primary-number\">\n                  <Label for=\"primaryOfficeNumber\">Office Phone Number</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"primaryOfficeNumber\"\n                    placeholder=\"XXX-XXX-XXXX\"\n                    onChange={handleChange}\n                    value={editedCustomer.primaryOfficeNumber}\n                    invalid={errors.primaryOfficeNumber ? true : false}\n                  />\n                  <FormFeedback>{errors.primaryOfficeNumber}</FormFeedback>\n                </FormGroup>\n                <FormGroup className=\"primary-ext\">\n                  <Label for=\"primaryExt\">ext.</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"primaryExt\"\n                    onChange={handleChange}\n                    value={editedCustomer.primaryExt}\n                  />\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"primaryCellNumber\">Cell Phone Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"primaryCellNumber\"\n                  placeholder=\"XXX-XXX-XXXX\"\n                  onChange={handleChange}\n                  value={editedCustomer.primaryCellNumber}\n                  invalid={errors.primaryCellNumber ? true : false}\n                />\n                <FormFeedback>{errors.primaryCellNumber}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"primary-email-jobTitle-div\">\n              <FormGroup>\n                <Label for=\"primaryEmail\">Email</Label>\n                <Input\n                  type=\"text\"\n                  name=\"primaryEmail\"\n                  placeholder=\"example@example.com\"\n                  onChange={handleChange}\n                  value={editedCustomer.primaryEmail}\n                  invalid={errors.primaryEmail ? true : false}\n                />\n                <FormFeedback>{errors.primaryEmail}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"primaryJobTitle\">Job Title</Label>\n                <Input\n                  type=\"text\"\n                  name=\"primaryJobTitle\"\n                  onChange={handleChange}\n                  value={editedCustomer.primaryJobTitle}\n                  invalid={errors.primaryJobTitle ? true : false}\n                />\n                <FormFeedback>{errors.primaryJobTitle}</FormFeedback>\n              </FormGroup>\n            </div>\n            <Label for=\"shop-address\" className=\"form-label\">\n              Shop Address\n            </Label>\n            <div className=\"shop-address\">\n              <div className=\"shop-address-city-div\">\n                <FormGroup>\n                  <Label for=\"address\">Address</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"address\"\n                    onChange={handleShopAddressChange}\n                    value={\n                      editedCustomer.shopAddress\n                        ? editedCustomer.shopAddress.address\n                        : null\n                    }\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.address\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.address\n                        ? errors.shopAddress.address\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    onChange={handleShopAddressChange}\n                    value={\n                      editedCustomer.shopAddress\n                        ? editedCustomer.shopAddress.city\n                        : null\n                    }\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.city\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.city\n                        ? errors.shopAddress.city\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n              <div className=\"shop-state-zipcode-div\">\n                <FormGroup>\n                  <Label for=\"state\">State</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"state\"\n                    onChange={handleShopAddressChange}\n                    value={\n                      editedCustomer.shopAddress\n                        ? editedCustomer.shopAddress.state\n                        : null\n                    }\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.state\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.state\n                        ? errors.shopAddress.state\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"zipcode\">Zip Code</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"zipcode\"\n                    onChange={handleShopAddressChange}\n                    value={\n                      editedCustomer.shopAddress\n                        ? editedCustomer.shopAddress.zipcode\n                        : null\n                    }\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.zipcode\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.zipcode\n                        ? errors.shopAddress.zipcode\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n            </div>\n            <Label for=\"billing-contact\" className=\"form-label\">\n              Billing Contact\n            </Label>\n            <div className=\"billing-contact-name\">\n              <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={handleBillingContactChange}\n                  value={\n                    editedCustomer.billingContact\n                      ? editedCustomer.billingContact.firstname\n                      : null\n                  }\n                  invalid={\n                    errors.billingContact\n                      ? errors.billingContact.firstName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.billingContact\n                    ? errors.billingContact.firstName\n                      ? errors.billingContact.firstName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  onChange={handleBillingContactChange}\n                  value={\n                    editedCustomer.billingContact\n                      ? editedCustomer.billingContact.lastName\n                      : null\n                  }\n                  invalid={\n                    errors.billingContact\n                      ? errors.billingContact.lastName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.billingContact\n                    ? errors.billingContact.lastName\n                      ? errors.billingContact.lastName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"billing-phone-div\">\n              <div className=\"billing-office-phone-div\">\n                <FormGroup className=\"billing-number\">\n                  <Label for=\"billingOfficeNumber\">Office Phone Number</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"billingOfficeNumber\"\n                    placeholder=\"XXX-XXX-XXXX\"\n                    onChange={handleChange}\n                    value={editedCustomer.billingOfficeNumber}\n                    invalid={errors.billingOfficeNumber ? true : false}\n                  />\n                  <FormFeedback>{errors.billingOfficeNumber}</FormFeedback>\n                </FormGroup>\n                <FormGroup className=\"billing-ext\">\n                  <Label for=\"billingExt\">ext.</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"billingExt\"\n                    onChange={handleChange}\n                    value={editedCustomer.billingExt}\n                  />\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"billingCellNumber\">Cell Phone Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"billingCellNumber\"\n                  placeholder=\"XXX-XXX-XXXX\"\n                  onChange={handleChange}\n                  value={editedCustomer.billingCellNumber}\n                  invalid={errors.billingCellNumber ? true : false}\n                />\n                <FormFeedback>{errors.billingCellNumber}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"billing-email-jobTitle-div\">\n              <FormGroup>\n                <Label for=\"billingEmail\">Email</Label>\n                <Input\n                  type=\"text\"\n                  name=\"billingEmail\"\n                  placeholder=\"example@example.com\"\n                  onChange={handleChange}\n                  value={editedCustomer.billingEmail}\n                  invalid={errors.billingEmail ? true : false}\n                />\n                <FormFeedback>{errors.billingEmail}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"billingJobTitle\">Job Title</Label>\n                <Input\n                  type=\"text\"\n                  name=\"billingJobTitle\"\n                  onChange={handleChange}\n                  value={editedCustomer.billingJobTitle}\n                  invalid={errors.billingJobTitle ? true : false}\n                />\n                <FormFeedback>{errors.billingJobTitle}</FormFeedback>\n              </FormGroup>\n            </div>\n            <Label for=\"billing-address\" className=\"form-label\">\n              Billing Address\n            </Label>\n            <div className=\"billing-address\">\n              <div className=\"billing-address-city-div\">\n                <FormGroup>\n                  <Label for=\"address\">Address</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"address\"\n                    onChange={handleBillingAddressChange}\n                    value={\n                      editedCustomer.billingAddress\n                        ? editedCustomer.billingAddress.address\n                        : null\n                    }\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.address\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.address\n                        ? errors.billingAddress.address\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    onChange={handleBillingAddressChange}\n                    value={\n                      editedCustomer.billingAddress\n                        ? editedCustomer.billingAddress.city\n                        : null\n                    }\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.city\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.city\n                        ? errors.billingAddress.city\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n              <div className=\"billing-state-zipcode-div\">\n                <FormGroup>\n                  <Label for=\"state\">State</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"state\"\n                    onChange={handleBillingAddressChange}\n                    value={\n                      editedCustomer.billingAddress\n                        ? editedCustomer.billingAddress.state\n                        : null\n                    }\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.state\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.state\n                        ? errors.billingAddress.state\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"zipcode\">Zip Code</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"zipcode\"\n                    onChange={handleBillingAddressChange}\n                    value={\n                      editedCustomer.billingAddress\n                        ? editedCustomer.billingAddress.zipcode\n                        : null\n                    }\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.zipcode\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.zipcode\n                        ? errors.billingAddress.zipcode\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n            </div>\n            <FormGroup className=\"checkbox-div\">\n              <Label check>\n                <Input\n                  type=\"checkbox\"\n                  value={editedCustomer.noBillingContact}\n                  onClick={toggleBillingContact}\n                />{\" \"}\n                No Billing Contact\n              </Label>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default InfoTab;\n"]},"metadata":{},"sourceType":"module"}