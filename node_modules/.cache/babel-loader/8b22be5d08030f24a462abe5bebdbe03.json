{"ast":null,"code":"import _objectSpread from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{DELETE_TASK_START,DELETE_TASK_SUCCESS,DELETE_TASK_FAILURE}from\"../actions\";var initialState={deleting:false,success:false,errors:null};export var deleteTaskReducer=function deleteTaskReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case DELETE_TASK_START:return _objectSpread(_objectSpread({},state),{},{deleting:true});case DELETE_TASK_SUCCESS:return _objectSpread(_objectSpread({},state),{},{deleting:false,success:true});case DELETE_TASK_FAILURE:return _objectSpread(_objectSpread({},state),{},{deleting:false,errors:action.payload});default:return state;}};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/reducers/deleteTaskReducer.js"],"names":["DELETE_TASK_START","DELETE_TASK_SUCCESS","DELETE_TASK_FAILURE","initialState","deleting","success","errors","deleteTaskReducer","state","action","type","payload"],"mappings":"8LAAA,OACIA,iBADJ,CAEIC,mBAFJ,CAGIC,mBAHJ,KAIS,YAJT,CAME,GAAMC,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,KADS,CAEnBC,OAAO,CAAE,KAFU,CAGnBC,MAAM,CAAE,IAHW,CAArB,CAMA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CACjE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKV,CAAAA,iBAAL,CACE,sCACKQ,KADL,MAEEJ,QAAQ,CAAE,IAFZ,GAIF,IAAKH,CAAAA,mBAAL,CACE,sCACKO,KADL,MAEEJ,QAAQ,CAAE,KAFZ,CAGEC,OAAO,CAAE,IAHX,GAKF,IAAKH,CAAAA,mBAAL,CACE,sCACKM,KADL,MAEEJ,QAAQ,CAAE,KAFZ,CAGEE,MAAM,CAAEG,MAAM,CAACE,OAHjB,GAKF,QACE,MAAOH,CAAAA,KAAP,CAnBJ,CAqBD,CAtBM","sourcesContent":["import {\n    DELETE_TASK_START,\n    DELETE_TASK_SUCCESS,\n    DELETE_TASK_FAILURE,\n  } from \"../actions\";\n  \n  const initialState = {\n    deleting: false,\n    success: false,\n    errors: null,\n  };\n  \n  export const deleteTaskReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case DELETE_TASK_START:\n        return {\n          ...state,\n          deleting: true,\n        };\n      case DELETE_TASK_SUCCESS:\n        return {\n          ...state,\n          deleting: false,\n          success: true,\n        };\n      case DELETE_TASK_FAILURE:\n        return {\n          ...state,\n          deleting: false,\n          errors: action.payload,\n        };\n      default:\n        return state;\n    }\n  };"]},"metadata":{},"sourceType":"module"}