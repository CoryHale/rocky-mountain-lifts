{"ast":null,"code":"import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\nexport const ADD_NOTE_START = \"ADD_NOTE_START\";\nexport const ADD_NOTE_SUCCESS = \"ADD_NOTE_SUCCESS\";\nexport const ADD_NOTE_FAILURE = \"ADD_NOTE_FAILURE\";\nexport const addNote = note => async dispatch => {\n  dispatch({\n    type: ADD_NOTE_START\n  });\n  const axiosAuth = await axiosWithAuth();\n  return axiosAuth.post(`${dbUrl}/notes`, note).then(() => {\n    dispatch({\n      type: ADD_NOTE_SUCCESS,\n      payload: \"SUCCESS\"\n    });\n  }).catch(err => {\n    dispatch({\n      type: ADD_NOTE_FAILURE,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/actions/addNote.js"],"names":["axiosWithAuth","dbUrl","ADD_NOTE_START","ADD_NOTE_SUCCESS","ADD_NOTE_FAILURE","addNote","note","dispatch","type","axiosAuth","post","then","payload","catch","err","response","data"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACnDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AAEA,QAAMO,SAAS,GAAG,MAAMT,aAAa,EAArC;AAEA,SAAOS,SAAS,CACbC,IADI,CACE,GAAET,KAAM,QADV,EACmBK,IADnB,EAEJK,IAFI,CAEC,MAAM;AACVJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,gBADC;AAEPS,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPI,EAQJC,KARI,CAQGC,GAAD,IAAS;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,gBADC;AAEPQ,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID,GAbI,CAAP;AAcD,CAnBM","sourcesContent":["import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const ADD_NOTE_START = \"ADD_NOTE_START\";\nexport const ADD_NOTE_SUCCESS = \"ADD_NOTE_SUCCESS\";\nexport const ADD_NOTE_FAILURE = \"ADD_NOTE_FAILURE\";\n\nexport const addNote = (note) => async (dispatch) => {\n  dispatch({ type: ADD_NOTE_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .post(`${dbUrl}/notes`, note)\n    .then(() => {\n      dispatch({\n        type: ADD_NOTE_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ADD_NOTE_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};"]},"metadata":{},"sourceType":"module"}