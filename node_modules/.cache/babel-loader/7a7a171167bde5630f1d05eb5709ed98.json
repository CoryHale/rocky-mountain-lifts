{"ast":null,"code":"import _toConsumableArray from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{useLocation}from'react-router-dom';import{Form,FormGroup,Label,Input,FormFeedback,Button,Modal,ModalHeader,ModalBody,ModalFooter,Table}from'reactstrap';import EmployeeNavbar from'./EmployeeNavbar';import EmployeeSidebar from'./EmployeeSidebar';import Footer from'./Footer';import{getWorkOrder}from'../../actions/getWorkOrder';import'../../styles/employee-dashboard.scss';var WorkOrderPage=function WorkOrderPage(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),workOrder=_useState2[0],setWorkOrder=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),customer=_useState4[0],setCustomer=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),mapsAddress=_useState6[0],setMapsAddress=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),employees=_useState8[0],setEmployees=_useState8[1];var getWorkOrderFromState=useSelector(function(state){return state.getWorkOrderReducer.workOrder;});var getUsers=useSelector(function(state){return state.getWorkOrderReducer.users;});var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isOpenServiceModal=_useState10[0],setIsOpenServiceModal=_useState10[1];var _useState11=useState({make:'',type:'',model:'',serialNumber:'',bayNumber:'',serviceDone:'',partsUsed:[],partsNeeded:[]}),_useState12=_slicedToArray(_useState11,2),service=_useState12[0],setService=_useState12[1];var _useState13=useState({}),_useState14=_slicedToArray(_useState13,2),serviceErrors=_useState14[0],setServiceErrors=_useState14[1];var _useState15=useState({quantity:'',partDescription:'',partNumber:'',images:[]}),_useState16=_slicedToArray(_useState15,2),partUsed=_useState16[0],setPartUsed=_useState16[1];var _useState17=useState({}),_useState18=_slicedToArray(_useState17,2),partUsedErrors=_useState18[0],setPartUsedErrors=_useState18[1];var _useState19=useState({quantity:'',partDescription:'',partNumber:'',images:[]}),_useState20=_slicedToArray(_useState19,2),partNeeded=_useState20[0],setPartNeeded=_useState20[1];var _useState21=useState({}),_useState22=_slicedToArray(_useState21,2),partNeededErrors=_useState22[0],setPartNeededErrors=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),isOpenPartUsed=_useState24[0],setIsOpenPartUsed=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),isOpenPartNeeded=_useState26[0],setIsOpenPartNeeded=_useState26[1];var _useState27=useState(0),_useState28=_slicedToArray(_useState27,2),startTime=_useState28[0],setStartTime=_useState28[1];var _useState29=useState(0),_useState30=_slicedToArray(_useState29,2),endTime=_useState30[0],setEndTime=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),hideClockIn=_useState32[0],setHideClockIn=_useState32[1];var dispatch=useDispatch();var location=useLocation();useEffect(function(){var pathArray=location.pathname.split('/');var jobId=pathArray[pathArray.length-1];dispatch(getWorkOrder(jobId));},[]);useEffect(function(){if(getWorkOrderFromState){setWorkOrder(getWorkOrderFromState);};},[getWorkOrderFromState]);useEffect(function(){var crewMembers=[];if(getUsers){getUsers.forEach(function(user){if(user.userType==='customer'){setCustomer(user);}else{crewMembers.push(user);};});setEmployees(crewMembers);}},[getUsers]);useEffect(function(){if(customer){addressConverter(customer);};},[customer]);useEffect(function(){if(startTime!==0&&endTime!==0){jobTimeConverter();};},[endTime]);var typeConverter=function typeConverter(types){if(types){if(types.length===1){return types;}else{return types.join(', ');};};};var dateConverter=function dateConverter(date){if(date){var dateArray=date.split('-');return\"\".concat(dateArray[1],\"/\").concat(dateArray[2],\"/\").concat(dateArray[0]);};};var timeConverter=function timeConverter(time){if(time){var timeArray=time.split(':');var hour=parseInt(timeArray[0]);var m;if(hour<=11){m='AM';}else{m='PM';};if(hour<=12){var newHour=hour.toString();timeArray[0]=newHour;}else{var _newHour=(hour-12).toString();timeArray[0]=_newHour;};return\"\".concat(timeArray[0],\":\").concat(timeArray[1],\" \").concat(m);};};var addressConverter=function addressConverter(customer){var address=customer.address;var city=customer.city;var state=customer.state;var zipcode=customer.zipcode;var newAddress='';var newCity='';if(address){newAddress=address.split(' ').join('+');};if(city){newCity=city.split(' ').join('+');}var searchableAddress=\"\".concat(newAddress,\",+\").concat(newCity,\",+\").concat(state,\"+\").concat(zipcode);setMapsAddress(searchableAddress);};var crewConverter=function crewConverter(members){var crewNames=[];if(members){members.forEach(function(member){crewNames.push(\"\".concat(member.firstName,\" \").concat(member.lastName));});if(crewNames.length===1){return crewNames;}else{return crewNames.join(', ');};};};var clockIn=function clockIn(){var date=new Date();var time=date.getTime();setStartTime(time);};var clockOut=function clockOut(){if(startTime===0){alert('Please clock in first');}else{var date=new Date();var time=date.getTime();setEndTime(time);};};var jobTimeConverter=function jobTimeConverter(){if(startTime&&endTime){var totalTime=endTime-startTime;var seconds=Math.floor(totalTime/1000%60);var minutes=Math.floor(totalTime/(1000*60)%60);var hours=Math.floor(totalTime/(1000*60*60)%24);var trueHours=hours<10?\"0\"+hours:hours;var trueMinutes=minutes<10?\"0\"+minutes:minutes;var trueSeconds=seconds<10?\"0\"+seconds:seconds;var timeAtJob=trueHours+':'+trueMinutes+':'+trueSeconds;console.log(timeAtJob);setWorkOrder(_objectSpread(_objectSpread({},workOrder),{},{timeAtJob:timeAtJob}));setHideClockIn(true);};};var toggleServiceModal=function toggleServiceModal(){setIsOpenServiceModal(!isOpenServiceModal);};var handleChangeService=function handleChangeService(e){setService(_objectSpread(_objectSpread({},service),{},_defineProperty({},e.target.name,e.target.value)));};var handleSubmitService=function handleSubmitService(e){e.preventDefault();var errors={};if(service.make.trim()===''){errors.make='Must not be empty';};if(service.type.trim()===''){errors.type='Must not be empty';};if(service.model.trim()===''){errors.model='Must not be empty';};if(service.serialNumber.trim()===''){errors.serialNumber='Must not be empty';};if(service.serviceDone.trim()===''){errors.serviceDone='Must not be empty';};if(Object.keys(errors).length!==0){setServiceErrors(errors);}else{if(!workOrder.serviceDone){setWorkOrder(_objectSpread(_objectSpread({},workOrder),{},{serviceDone:[service]}));}else{setWorkOrder(_objectSpread(_objectSpread({},workOrder),{},{serviceDone:[].concat(_toConsumableArray(workOrder.serviceDone),[service])}));};setService({make:'',type:'',model:'',serialNumber:'',bayNumber:'',serviceDone:'',partsUsed:[],partsNeeded:[]});setIsOpenServiceModal(false);setServiceErrors({});};};var togglePartUsed=function togglePartUsed(){setIsOpenPartUsed(!isOpenPartUsed);};var togglePartNeeded=function togglePartNeeded(){setIsOpenPartNeeded(!isOpenPartNeeded);};var handleChangePartUsed=function handleChangePartUsed(e){setPartUsed(_objectSpread(_objectSpread({},partUsed),{},_defineProperty({},e.target.name,e.target.value)));};var handleSubmitPartUsed=function handleSubmitPartUsed(e){e.preventDefault();var errors={};if(partUsed.quantity.trim()===''){errors.quantity='Must not be empty';};if(partUsed.partDescription.trim()===''){errors.partDescription='Must not be empty';};if(partUsed.partNumber.trim()===''){errors.partNumber='Must not be empty';};if(Object.keys(errors).length!==0){setPartUsedErrors(errors);}else{setService(_objectSpread(_objectSpread({},service),{},{partsUsed:[].concat(_toConsumableArray(service.partsUsed),[partUsed])}));setPartUsed({quantity:'',partDescription:'',partNumber:'',images:[]});setIsOpenPartUsed(false);setPartUsedErrors({});};};var handleChangePartNeeded=function handleChangePartNeeded(e){setPartNeeded(_objectSpread(_objectSpread({},partNeeded),{},_defineProperty({},e.target.name,e.target.value)));};var handleSubmitPartNeeded=function handleSubmitPartNeeded(e){e.preventDefault();var errors={};if(partNeeded.quantity.trim()===''){errors.quantity='Must not be empty';};if(partNeeded.partDescription.trim()===''){errors.partDescription='Must not be empty';};if(partNeeded.partNumber.trim()===''){errors.partNumber='Must not be empty';};if(Object.keys(errors).length!==0){setPartNeededErrors(errors);}else{setService(_objectSpread(_objectSpread({},service),{},{partsNeeded:[].concat(_toConsumableArray(service.partsNeeded),[partNeeded])}));setPartNeeded({quantity:'',partDescription:'',partNumber:'',images:[]});setIsOpenPartNeeded(false);setPartNeededErrors({});};};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(EmployeeNavbar,null),/*#__PURE__*/React.createElement(\"div\",{className:\"work-order-page\"},/*#__PURE__*/React.createElement(EmployeeSidebar,null),workOrder?/*#__PURE__*/React.createElement(\"div\",{className:\"work-order-page-content\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Work Order #\".concat(workOrder.jobNumber)),/*#__PURE__*/React.createElement(Form,{className:\"work-order-info\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"customerName\"},\"Customer Name\"),/*#__PURE__*/React.createElement(Input,{disabled:true,value:\"\".concat(customer.firstName,\" \").concat(customer.lastName)})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"customerAddress\"},\"Customer Address\"),/*#__PURE__*/React.createElement(\"a\",{href:\"http://maps.google.com/maps?q=\".concat(mapsAddress)},/*#__PURE__*/React.createElement(Input,{disabled:true,value:\"\".concat(customer.address,\", \").concat(customer.city,\", \").concat(customer.state,\" \").concat(customer.zipcode)}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"type-input\"},/*#__PURE__*/React.createElement(Label,{for:\"serviceType\"},\"Service Type(s)\"),/*#__PURE__*/React.createElement(Input,{disabled:true,value:typeConverter(workOrder.serviceType)})),/*#__PURE__*/React.createElement(\"div\",{className:\"date-div\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"serviceDate\"},\"Service Date\"),/*#__PURE__*/React.createElement(Input,{disabled:true,value:dateConverter(workOrder.serviceDate)})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"serviceTime\"},\"Service Time\"),/*#__PURE__*/React.createElement(Input,{disabled:true,value:timeConverter(workOrder.serviceTime)}))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"crewMembers\"},\"Crew Members\"),/*#__PURE__*/React.createElement(Input,{disabled:true,value:crewConverter(employees)})),/*#__PURE__*/React.createElement(FormGroup,{className:\"description-input\"},/*#__PURE__*/React.createElement(Label,{for:\"serviceDescription\"},\"Service Description\"),/*#__PURE__*/React.createElement(Input,{disabled:true,type:\"textarea\",value:workOrder.serviceDescription})),hideClockIn?/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"timeOnJob\"},\"Time At Job\"),/*#__PURE__*/React.createElement(Input,{disabled:true,type:\"text\",value:workOrder.timeAtJob?workOrder.timeAtJob:null})):null,/*#__PURE__*/React.createElement(\"div\",{className:\"button-div\"},!hideClockIn?/*#__PURE__*/React.createElement(\"div\",{className:\"secondary-button-div\"},/*#__PURE__*/React.createElement(FormGroup,null,startTime===0?/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:clockIn},\"Clock In\"):/*#__PURE__*/React.createElement(Button,{disabled:true,color:\"primary\"},\"Clock In\")),/*#__PURE__*/React.createElement(FormGroup,null,endTime===0?/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:clockOut},\"Clock Out\"):/*#__PURE__*/React.createElement(Button,{disabled:true,color:\"primary\"},\"Clock Out\"))):null,workOrder.serviceDone?workOrder.serviceDone.length>0?/*#__PURE__*/React.createElement(\"div\",{className:\"service-table\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Services\"),/*#__PURE__*/React.createElement(Table,{hover:true,size:\"sm\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Service Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Service Description\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parts Needed\")),/*#__PURE__*/React.createElement(\"tbody\",null,workOrder.serviceDone.map(function(service){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{scope:\"row\"},service.type),/*#__PURE__*/React.createElement(\"td\",null,service.serviceDone),/*#__PURE__*/React.createElement(\"td\",null,service.partsNeeded.length>0?'Y':'N'));})))):null:null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Button,{outline:true,color:\"success\",onClick:toggleServiceModal},\"Add Service\")),/*#__PURE__*/React.createElement(\"div\",{className:\"secondary-button-div\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Button,{outline:true,color:\"info\"},\"Add Inspection\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Button,{outline:true,color:\"warning\",className:\"training-button\"},\"Add Training\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"travel-div\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"travelTime\"},\"Travel Time (Roundtrip)\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"travelTime\"})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"travelMileage\"},\"Travel Mileage (Roundtrip)\"),/*#__PURE__*/React.createElement(Input,{type:\"text\"}))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"notes\"},\"Notes\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",value:workOrder.notes?workOrder.notes:null})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"officeNotes\"},\"Office Notes (NOT FOR CUSTOMER)\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",value:workOrder.officeNotes?workOrder.officeNotes:null})),/*#__PURE__*/React.createElement(FormGroup,{className:\"submit-button\"},/*#__PURE__*/React.createElement(Button,{color:\"success\"},\"Submit for Signature\")))):null,/*#__PURE__*/React.createElement(Modal,{isOpen:isOpenServiceModal,toggle:toggleServiceModal},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggleServiceModal},\"Add Service\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmitService},/*#__PURE__*/React.createElement(\"div\",{className:\"equipment-div\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"make\"},\"Make\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"make\",onChange:handleChangeService,invalid:serviceErrors.make?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,serviceErrors.make)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"type\"},\"Type\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"type\",onChange:handleChangeService,invalid:serviceErrors.type?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,serviceErrors.type))),/*#__PURE__*/React.createElement(\"div\",{className:\"equipment-div\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"model\"},\"Model\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"model\",onChange:handleChangeService,invalid:serviceErrors.model?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,serviceErrors.model)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"serialNumber\"},\"Serial Number\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"serialNumber\",onChange:handleChangeService,invalid:serviceErrors.serialNumber?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,serviceErrors.serialNumber))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"bayNumber\"},\"Bay Number\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"bayNumber\",onChange:handleChangeService})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"serviceDone\"},\"What work was done?\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",name:\"serviceDone\",onChange:handleChangeService,invalid:serviceErrors.serviceDone?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,serviceErrors.serviceDone)),service.partsUsed.length>0?/*#__PURE__*/React.createElement(\"div\",{className:\"part-div\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Parts Used\"),/*#__PURE__*/React.createElement(Table,{hover:true,size:\"sm\",className:\"part-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Quantity\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"),/*#__PURE__*/React.createElement(\"th\",null,\"Part Number\"),/*#__PURE__*/React.createElement(\"th\",null,\"Images\")),/*#__PURE__*/React.createElement(\"tbody\",null,service.partsUsed.map(function(part){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{scope:\"row\"},part.quantity),/*#__PURE__*/React.createElement(\"td\",null,part.partDescription),/*#__PURE__*/React.createElement(\"td\",null,part.partNumber),/*#__PURE__*/React.createElement(\"td\",null,part.images));})))):null,service.partsNeeded.length>0?/*#__PURE__*/React.createElement(\"div\",{className:\"part-div\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Parts Needed\"),/*#__PURE__*/React.createElement(Table,{hover:true,size:\"sm\",className:\"part-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Quantity\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"),/*#__PURE__*/React.createElement(\"th\",null,\"Part Number\"),/*#__PURE__*/React.createElement(\"th\",null,\"Images\")),/*#__PURE__*/React.createElement(\"tbody\",null,service.partsNeeded.map(function(part){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{scope:\"row\"},part.quantity),/*#__PURE__*/React.createElement(\"td\",null,part.partDescription),/*#__PURE__*/React.createElement(\"td\",null,part.partNumber),/*#__PURE__*/React.createElement(\"td\",null,part.images));})))):null,/*#__PURE__*/React.createElement(FormGroup,{className:\"parts-group\"},/*#__PURE__*/React.createElement(Button,{outline:true,color:\"success\",onClick:togglePartUsed},\"Add Part Used\"),/*#__PURE__*/React.createElement(Button,{outline:true,color:\"danger\",onClick:togglePartNeeded},\"Add Part Needed\")))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"success\",onClick:handleSubmitService},\"Submit\"))),/*#__PURE__*/React.createElement(Modal,{isOpen:isOpenPartUsed,toggle:togglePartUsed},/*#__PURE__*/React.createElement(ModalHeader,{toggle:togglePartUsed},\"Add Part Used\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmitPartUsed},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Quantity\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"quantity\",onChange:handleChangePartUsed,invalid:partUsedErrors.quantity?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,partUsedErrors.quantity)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Part Description\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"partDescription\",onChange:handleChangePartUsed,invalid:partUsedErrors.partDescription?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,partUsedErrors.partDescription)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Part Number\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"partNumber\",onChange:handleChangePartUsed,invalid:partUsedErrors.partNumber?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,partUsedErrors.partNumber)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Picture(s)\"),/*#__PURE__*/React.createElement(Input,{multiple:true,type:\"file\",name:\"images\",onChange:handleChangePartUsed})))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"success\",onClick:handleSubmitPartUsed},\"Submit\"))),/*#__PURE__*/React.createElement(Modal,{isOpen:isOpenPartNeeded,toggle:togglePartNeeded},/*#__PURE__*/React.createElement(ModalHeader,{toggle:togglePartNeeded},\"Add Part Needed\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmitPartNeeded},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Quantity\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"quantity\",onChange:handleChangePartNeeded,invalid:partNeededErrors.quantity?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,partNeededErrors.quantity)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Part Description\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"partDescription\",onChange:handleChangePartNeeded,invalid:partNeededErrors.partDescription?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,partNeededErrors.partDescription)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Part Number\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"partNumber\",onChange:handleChangePartNeeded,invalid:partNeededErrors.partNumber?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,partNeededErrors.partNumber)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Picture(s)\"),/*#__PURE__*/React.createElement(Input,{multiple:true,type:\"file\",name:\"images\",onChange:handleChangePartNeeded})))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"success\",onClick:handleSubmitPartNeeded},\"Submit\")))),/*#__PURE__*/React.createElement(Footer,null));};export default WorkOrderPage;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/WorkOrderPage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLocation","Form","FormGroup","Label","Input","FormFeedback","Button","Modal","ModalHeader","ModalBody","ModalFooter","Table","EmployeeNavbar","EmployeeSidebar","Footer","getWorkOrder","WorkOrderPage","workOrder","setWorkOrder","customer","setCustomer","mapsAddress","setMapsAddress","employees","setEmployees","getWorkOrderFromState","state","getWorkOrderReducer","getUsers","users","isOpenServiceModal","setIsOpenServiceModal","make","type","model","serialNumber","bayNumber","serviceDone","partsUsed","partsNeeded","service","setService","serviceErrors","setServiceErrors","quantity","partDescription","partNumber","images","partUsed","setPartUsed","partUsedErrors","setPartUsedErrors","partNeeded","setPartNeeded","partNeededErrors","setPartNeededErrors","isOpenPartUsed","setIsOpenPartUsed","isOpenPartNeeded","setIsOpenPartNeeded","startTime","setStartTime","endTime","setEndTime","hideClockIn","setHideClockIn","dispatch","location","pathArray","pathname","split","jobId","length","crewMembers","forEach","user","userType","push","addressConverter","jobTimeConverter","typeConverter","types","join","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","address","city","zipcode","newAddress","newCity","searchableAddress","crewConverter","members","crewNames","member","firstName","lastName","clockIn","Date","getTime","clockOut","alert","totalTime","seconds","Math","floor","minutes","hours","trueHours","trueMinutes","trueSeconds","timeAtJob","console","log","toggleServiceModal","handleChangeService","e","target","name","value","handleSubmitService","preventDefault","errors","trim","Object","keys","togglePartUsed","togglePartNeeded","handleChangePartUsed","handleSubmitPartUsed","handleChangePartNeeded","handleSubmitPartNeeded","jobNumber","serviceType","serviceDate","serviceTime","serviceDescription","map","notes","officeNotes","part"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Table\n} from 'reactstrap';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getWorkOrder } from '../../actions/getWorkOrder';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst WorkOrderPage = () => {\n    const [workOrder, setWorkOrder] = useState({});\n    const [customer, setCustomer] = useState({});\n    const [mapsAddress, setMapsAddress] = useState('');\n    const [employees, setEmployees] = useState([]);\n    const getWorkOrderFromState = useSelector(state => state.getWorkOrderReducer.workOrder);\n    const getUsers = useSelector(state => state.getWorkOrderReducer.users);\n    const [isOpenServiceModal, setIsOpenServiceModal] = useState(false);\n    const [service, setService] = useState({\n        make: '',\n        type: '',\n        model: '',\n        serialNumber: '',\n        bayNumber: '',\n        serviceDone: '',\n        partsUsed: [],\n        partsNeeded: []\n    });\n    const [serviceErrors, setServiceErrors] = useState({});\n    const [partUsed, setPartUsed] = useState({\n        quantity: '',\n        partDescription: '',\n        partNumber: '',\n        images: []\n    });\n    const [partUsedErrors, setPartUsedErrors] = useState({});\n    const [partNeeded, setPartNeeded] = useState({\n        quantity: '',\n        partDescription: '',\n        partNumber: '',\n        images: []\n    });\n    const [partNeededErrors, setPartNeededErrors] = useState({});\n    const [isOpenPartUsed, setIsOpenPartUsed] = useState(false);\n    const [isOpenPartNeeded, setIsOpenPartNeeded] = useState(false);\n    const [startTime, setStartTime] = useState(0);\n    const [endTime, setEndTime] = useState(0);\n    const [hideClockIn, setHideClockIn] = useState(false);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const jobId = pathArray[pathArray.length - 1];\n        dispatch(getWorkOrder(jobId));\n    }, []);\n\n    useEffect(() => {\n        if(getWorkOrderFromState) {\n            setWorkOrder(getWorkOrderFromState);\n        };\n    }, [getWorkOrderFromState]);\n\n    useEffect(() => {\n        let crewMembers = [];\n\n        if(getUsers) {\n            getUsers.forEach(user => {\n                if(user.userType === 'customer') {\n                    setCustomer(user);\n                } else {\n                    crewMembers.push(user);\n                };\n            });\n            setEmployees(crewMembers);\n        }\n    }, [getUsers]);\n\n    useEffect(() => {\n        if(customer) {\n            addressConverter(customer);\n        };\n    }, [customer]);\n\n    useEffect(() => {\n        if(startTime !== 0 && endTime !== 0) {\n            jobTimeConverter();\n        };\n    }, [endTime]);\n\n    const typeConverter = types => {\n        if(types) {\n            if(types.length === 1) {\n                return types;\n            } else {\n                return types.join(', ');\n            };\n        };\n    };\n\n    const dateConverter = date => {\n        if(date) {\n            const dateArray = date.split('-');\n            return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n        };\n    };\n\n    const timeConverter = time => {\n        if(time) {\n            const timeArray = time.split(':');\n            const hour = parseInt(timeArray[0]);\n            let m;\n    \n            if(hour <= 11) {\n                m = 'AM';\n            } else {\n                m = 'PM';\n            };\n    \n            if(hour <= 12) {\n                const newHour = hour.toString();\n                timeArray[0] = newHour;\n            } else {\n                const newHour = (hour - 12).toString();\n                timeArray[0] = newHour;\n            };\n    \n            return `${timeArray[0]}:${timeArray[1]} ${m}`;\n        };\n    };\n\n    const addressConverter = customer => {\n        const address = customer.address;\n        const city = customer.city;\n        const state = customer.state;\n        const zipcode = customer.zipcode;\n\n        let newAddress = ''\n        let newCity = '';\n\n        if(address) {\n            newAddress = address.split(' ').join('+');\n        };\n        if(city) {\n            newCity = city.split(' ').join('+');\n        }\n\n        const searchableAddress = `${newAddress},+${newCity},+${state}+${zipcode}`;\n        setMapsAddress(searchableAddress);\n    };\n\n    const crewConverter = members => {\n        let crewNames = [];\n\n        if(members) {\n            members.forEach(member => {\n                crewNames.push(`${member.firstName} ${member.lastName}`);\n            });\n\n            if(crewNames.length === 1) {\n                return crewNames;\n            } else {\n                return crewNames.join(', ');\n            };\n        };\n    };\n\n    const clockIn = () => {\n        const date = new Date();\n        const time = date.getTime();\n\n        setStartTime(time);\n    };\n\n    const clockOut = () => {\n        if(startTime === 0) {\n            alert('Please clock in first');\n        } else {\n            const date = new Date();\n            const time = date.getTime();\n    \n            setEndTime(time);\n        };\n    };\n\n    const jobTimeConverter = () => {\n        if(startTime && endTime) {\n          const totalTime = endTime - startTime;\n          \n          const seconds = Math.floor((totalTime / 1000) % 60);\n          const minutes = Math.floor((totalTime / (1000 * 60)) % 60);\n          const hours = Math.floor((totalTime / (1000 * 60 * 60)) % 24);\n          \n          const trueHours = hours < 10 ? \"0\" + hours : hours;\n          const trueMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n          const trueSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n          const timeAtJob = trueHours + ':' + trueMinutes + ':' + trueSeconds;\n\n          console.log(timeAtJob)\n          \n          setWorkOrder({\n              ...workOrder,\n              timeAtJob: timeAtJob\n          });\n          setHideClockIn(true);\n        };\n    };\n\n    const toggleServiceModal = () => {\n        setIsOpenServiceModal(!isOpenServiceModal);\n    };\n\n    const handleChangeService = e => {\n        setService({\n            ...service,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmitService = e => {\n        e.preventDefault();\n        const errors = {};\n\n        if(service.make.trim() === '') {\n            errors.make = 'Must not be empty';\n        };\n        if(service.type.trim() === '') {\n            errors.type = 'Must not be empty';\n        };\n        if(service.model.trim() === '') {\n            errors.model = 'Must not be empty';\n        };\n        if(service.serialNumber.trim() === '') {\n            errors.serialNumber = 'Must not be empty';\n        };\n        if(service.serviceDone.trim() === '') {\n            errors.serviceDone = 'Must not be empty';\n        };\n\n        if(Object.keys(errors).length !== 0) {\n            setServiceErrors(errors);\n        } else {\n            if(!workOrder.serviceDone) {\n                setWorkOrder({\n                    ...workOrder,\n                    serviceDone: [service]\n                });\n            } else {\n                setWorkOrder({\n                    ...workOrder,\n                    serviceDone: [...workOrder.serviceDone, service]\n                });\n            };\n\n            setService({\n                make: '',\n                type: '',\n                model: '',\n                serialNumber: '',\n                bayNumber: '',\n                serviceDone: '',\n                partsUsed: [],\n                partsNeeded: []\n            });\n\n            setIsOpenServiceModal(false);\n            setServiceErrors({});\n        };\n    };\n\n    const togglePartUsed = () => {\n        setIsOpenPartUsed(!isOpenPartUsed);\n    };\n\n    const togglePartNeeded = () => {\n        setIsOpenPartNeeded(!isOpenPartNeeded);\n    };\n\n    const handleChangePartUsed = e => {\n        setPartUsed({\n            ...partUsed,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmitPartUsed = e => {\n        e.preventDefault();\n        const errors = {};\n\n        if(partUsed.quantity.trim() === '') {\n            errors.quantity = 'Must not be empty';\n        };\n        if(partUsed.partDescription.trim() === '') {\n            errors.partDescription = 'Must not be empty';\n        };\n        if(partUsed.partNumber.trim() === '') {\n            errors.partNumber = 'Must not be empty';\n        };\n\n        if(Object.keys(errors).length !== 0) {\n            setPartUsedErrors(errors);\n        } else {\n            setService({\n                ...service,\n                partsUsed: [...service.partsUsed, partUsed]\n            });\n\n            setPartUsed({\n                quantity: '',\n                partDescription: '',\n                partNumber: '',\n                images: []\n            });\n\n            setIsOpenPartUsed(false);\n            setPartUsedErrors({});\n        };\n    };\n\n    const handleChangePartNeeded = e => {\n        setPartNeeded({\n            ...partNeeded,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmitPartNeeded = e => {\n        e.preventDefault();\n        const errors = {};\n\n        if(partNeeded.quantity.trim() === '') {\n            errors.quantity = 'Must not be empty';\n        };\n        if(partNeeded.partDescription.trim() === '') {\n            errors.partDescription = 'Must not be empty';\n        };\n        if(partNeeded.partNumber.trim() === '') {\n            errors.partNumber = 'Must not be empty';\n        };\n\n        if(Object.keys(errors).length !== 0) {\n            setPartNeededErrors(errors);\n        } else {\n            setService({\n                ...service,\n                partsNeeded: [...service.partsNeeded, partNeeded]\n            });\n\n            setPartNeeded({\n                quantity: '',\n                partDescription: '',\n                partNumber: '',\n                images: []\n            });\n\n            setIsOpenPartNeeded(false);\n            setPartNeededErrors({});\n        };\n    };\n\n    return (\n        <div>\n            <EmployeeNavbar />\n            <div className=\"work-order-page\">\n                <EmployeeSidebar />\n                {workOrder ? <div className=\"work-order-page-content\">\n                    <h1>{`Work Order #${workOrder.jobNumber}`}</h1>\n                    <Form className=\"work-order-info\">\n                        <FormGroup>\n                            <Label for=\"customerName\">Customer Name</Label>\n                            <Input disabled value={`${customer.firstName} ${customer.lastName}`} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"customerAddress\">Customer Address</Label>\n                            <a href={`http://maps.google.com/maps?q=${mapsAddress}`}>\n                                <Input disabled value={`${customer.address}, ${customer.city}, ${customer.state} ${customer.zipcode}`} />\n                            </a>\n                        </FormGroup>        \n                        <FormGroup className=\"type-input\">\n                            <Label for=\"serviceType\">Service Type(s)</Label>\n                            <Input disabled value={typeConverter(workOrder.serviceType)} />\n                        </FormGroup>\n                        <div className=\"date-div\">\n                            <FormGroup>\n                                <Label for=\"serviceDate\">Service Date</Label>\n                                <Input disabled value={dateConverter(workOrder.serviceDate)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"serviceTime\">Service Time</Label>\n                                <Input disabled value={timeConverter(workOrder.serviceTime)} />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"crewMembers\">Crew Members</Label>\n                            <Input disabled value={crewConverter(employees)} />\n                        </FormGroup>\n                        <FormGroup className=\"description-input\">\n                            <Label for=\"serviceDescription\">Service Description</Label>\n                            <Input disabled type=\"textarea\" value={workOrder.serviceDescription} />\n                        </FormGroup>\n                        {hideClockIn ? \n                        <FormGroup>\n                            <Label for=\"timeOnJob\">Time At Job</Label>\n                            <Input disabled type=\"text\" value={workOrder.timeAtJob ? workOrder.timeAtJob : null} />\n                        </FormGroup>\n                        : null}\n                        <div className=\"button-div\">\n                            {!hideClockIn ? \n                            <div className=\"secondary-button-div\">\n                                <FormGroup>\n                                    {startTime === 0 ?\n                                    <Button color=\"primary\" onClick={clockIn}>Clock In</Button>\n                                    :\n                                    <Button disabled color=\"primary\">Clock In</Button>}\n                                </FormGroup>\n                                <FormGroup>\n                                    {endTime === 0 ?\n                                    <Button color=\"primary\" onClick={clockOut}>Clock Out</Button>\n                                    :\n                                    <Button disabled color=\"primary\">Clock Out</Button>}\n                                </FormGroup>\n                            </div> : null}\n                            {workOrder.serviceDone ? workOrder.serviceDone.length > 0 ?\n                            <div className=\"service-table\">\n                                <h5>Services</h5>\n                                <Table hover size=\"sm\">\n                                    <thead>\n                                        <th>Service Type</th>\n                                        <th>Service Description</th>\n                                        <th>Parts Needed</th>\n                                    </thead>\n                                    <tbody>\n                                    {workOrder.serviceDone.map(service => (\n                                        <tr>\n                                            <td scope=\"row\">{service.type}</td>\n                                            <td>{service.serviceDone}</td>\n                                            <td>{service.partsNeeded.length > 0 ? 'Y' : 'N'}</td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </Table>\n                            </div>\n                            : null : null}\n                            <FormGroup>\n                                <Button outline color=\"success\" onClick={toggleServiceModal}>Add Service</Button>\n                            </FormGroup>\n                            <div className=\"secondary-button-div\">\n                                <FormGroup>\n                                    <Button outline color=\"info\">Add Inspection</Button>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Button outline color=\"warning\" className=\"training-button\">Add Training</Button>\n                                </FormGroup>\n                            </div>\n                        </div>\n                        <div className=\"travel-div\">\n                            <FormGroup>\n                                <Label for=\"travelTime\">Travel Time (Roundtrip)</Label>\n                                <Input type=\"text\" name=\"travelTime\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"travelMileage\">Travel Mileage (Roundtrip)</Label>\n                                <Input type=\"text\" />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"notes\">Notes</Label>\n                            <Input type=\"textarea\" value={workOrder.notes ? workOrder.notes : null} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"officeNotes\">Office Notes (NOT FOR CUSTOMER)</Label>\n                            <Input type=\"textarea\" value={workOrder.officeNotes ? workOrder.officeNotes : null} />\n                        </FormGroup>\n                        <FormGroup className=\"submit-button\">\n                            <Button color=\"success\">Submit for Signature</Button>\n                        </FormGroup>\n                    </Form>\n                </div> : null}\n                <Modal isOpen={isOpenServiceModal} toggle={toggleServiceModal}>\n                    <ModalHeader toggle={toggleServiceModal}>Add Service</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleSubmitService}>\n                            <div className=\"equipment-div\">\n                                <FormGroup>\n                                    <Label for=\"make\">Make</Label>\n                                    <Input type=\"text\" name=\"make\" onChange={handleChangeService} invalid={serviceErrors.make ? true : false} />\n                                    <FormFeedback>{serviceErrors.make}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"type\">Type</Label>\n                                    <Input type=\"text\" name=\"type\" onChange={handleChangeService} invalid={serviceErrors.type ? true : false} />\n                                    <FormFeedback>{serviceErrors.type}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <div className=\"equipment-div\">\n                                <FormGroup>\n                                    <Label for=\"model\">Model</Label>\n                                    <Input type=\"text\" name=\"model\" onChange={handleChangeService} invalid={serviceErrors.model ? true : false} />\n                                    <FormFeedback>{serviceErrors.model}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"serialNumber\">Serial Number</Label>\n                                    <Input type=\"text\" name=\"serialNumber\" onChange={handleChangeService} invalid={serviceErrors.serialNumber ? true : false} />\n                                    <FormFeedback>{serviceErrors.serialNumber}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"bayNumber\">Bay Number</Label>\n                                <Input type=\"text\" name=\"bayNumber\" onChange={handleChangeService} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"serviceDone\">What work was done?</Label>\n                                <Input type=\"textarea\" name=\"serviceDone\" onChange={handleChangeService} invalid={serviceErrors.serviceDone ? true : false} />\n                                <FormFeedback>{serviceErrors.serviceDone}</FormFeedback>\n                            </FormGroup>\n                            {service.partsUsed.length > 0 ? \n                            <div className=\"part-div\">\n                                <h5>Parts Used</h5>\n                                <Table hover size=\"sm\" className=\"part-table\">\n                                    <thead>\n                                        <th>Quantity</th>\n                                        <th>Description</th>\n                                        <th>Part Number</th>\n                                        <th>Images</th>\n                                    </thead>\n                                    <tbody>\n                                    {service.partsUsed.map(part => (\n                                        <tr>\n                                            <td scope=\"row\">{part.quantity}</td>\n                                            <td>{part.partDescription}</td>\n                                            <td>{part.partNumber}</td>\n                                            <td>{part.images}</td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </Table>\n                            </div>\n                            : null}\n                            {service.partsNeeded.length > 0 ? \n                            <div className=\"part-div\">\n                                <h5>Parts Needed</h5>\n                                <Table hover size=\"sm\" className=\"part-table\">\n                                    <thead>\n                                        <th>Quantity</th>\n                                        <th>Description</th>\n                                        <th>Part Number</th>\n                                        <th>Images</th>\n                                    </thead>\n                                    <tbody>\n                                    {service.partsNeeded.map(part => (\n                                        <tr>\n                                            <td scope=\"row\">{part.quantity}</td>\n                                            <td>{part.partDescription}</td>\n                                            <td>{part.partNumber}</td>\n                                            <td>{part.images}</td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </Table>\n                            </div>\n                            : null}\n                            <FormGroup className=\"parts-group\">\n                                <Button outline color=\"success\" onClick={togglePartUsed}>Add Part Used</Button>\n                                <Button outline color=\"danger\" onClick={togglePartNeeded}>Add Part Needed</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleSubmitService}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={isOpenPartUsed} toggle={togglePartUsed}>\n                    <ModalHeader toggle={togglePartUsed}>Add Part Used</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleSubmitPartUsed}>\n                            <FormGroup>\n                                <Label>Quantity</Label>\n                                <Input type=\"text\" name=\"quantity\" onChange={handleChangePartUsed} invalid={partUsedErrors.quantity ? true : false} />\n                                <FormFeedback>{partUsedErrors.quantity}</FormFeedback>                              \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Description</Label>\n                                <Input type=\"text\" name=\"partDescription\" onChange={handleChangePartUsed} invalid={partUsedErrors.partDescription ? true : false} />\n                                <FormFeedback>{partUsedErrors.partDescription}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Number</Label>\n                                <Input type=\"text\" name=\"partNumber\" onChange={handleChangePartUsed} invalid={partUsedErrors.partNumber ? true : false} />\n                                <FormFeedback>{partUsedErrors.partNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Picture(s)</Label>\n                                <Input multiple type=\"file\" name=\"images\" onChange={handleChangePartUsed} />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleSubmitPartUsed}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={isOpenPartNeeded} toggle={togglePartNeeded}>\n                    <ModalHeader toggle={togglePartNeeded}>Add Part Needed</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleSubmitPartNeeded}>\n                            <FormGroup>\n                                <Label>Quantity</Label>\n                                <Input type=\"text\" name=\"quantity\" onChange={handleChangePartNeeded} invalid={partNeededErrors.quantity ? true : false} />\n                                <FormFeedback>{partNeededErrors.quantity}</FormFeedback>                               \n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Description</Label>\n                                <Input type=\"text\" name=\"partDescription\" onChange={handleChangePartNeeded} invalid={partNeededErrors.partDescription ? true : false} />\n                                <FormFeedback>{partNeededErrors.partDescription}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Part Number</Label>\n                                <Input type=\"text\" name=\"partNumber\" onChange={handleChangePartNeeded} invalid={partNeededErrors.partNumber ? true : false} />\n                                <FormFeedback>{partNeededErrors.partNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Picture(s)</Label>\n                                <Input multiple type=\"file\" name=\"images\" onChange={handleChangePartNeeded} />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleSubmitPartNeeded}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default WorkOrderPage;"]},"metadata":{},"sourceType":"module"}