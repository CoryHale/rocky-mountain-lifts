{"ast":null,"code":"import _regeneratorRuntime from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{dbUrl}from'./index';import axiosWithAuth from'../components/Login/withAuth';export var GET_WORK_ORDERS_START='GET_WORK_ORDERS_START';export var GET_WORK_ORDERS_SUCCESS='GET_WORK_ORDERS_SUCCESS';export var GET_WORK_ORDERS_FAILURE='GET_WORK_ORDERS_FAILURE';export var getWorkOrders=function getWorkOrders(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:GET_WORK_ORDERS_START});_context.next=3;return axiosWithAuth().get(\"\".concat(dbUrl,\"/work_orders\")).then(function(res){console.log(\"I am here\");console.log(res.data);dispatch({type:GET_WORK_ORDERS_SUCCESS,payload:res.data});}).catch(function(err){dispatch({type:GET_WORK_ORDERS_FAILURE,payload:err});});case 3:return _context.abrupt(\"return\",_context.sent);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/actions/getWorkOrders.js"],"names":["dbUrl","axiosWithAuth","GET_WORK_ORDERS_START","GET_WORK_ORDERS_SUCCESS","GET_WORK_ORDERS_FAILURE","getWorkOrders","dispatch","type","get","then","res","console","log","data","payload","catch","err"],"mappings":"yYAAA,OAASA,KAAT,KAAsB,SAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,8BAA1B,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,uBAA9B,CACP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,yBAAhC,CACP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,yBAAhC,CAEP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,kGAAM,iBAAMC,QAAN,kHAC/BA,QAAQ,CAAC,CAAEC,IAAI,CAAEL,qBAAR,CAAD,CAAR,CAD+B,sBAGlBD,CAAAA,aAAa,GACrBO,GADQ,WACDR,KADC,kBAERS,IAFQ,CAEH,SAAAC,GAAG,CAAI,CACTC,OAAO,CAACC,GAAR,CAAY,WAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EACAP,QAAQ,CAAC,CACLC,IAAI,CAAEJ,uBADD,CAELW,OAAO,CAAEJ,GAAG,CAACG,IAFR,CAAD,CAAR,CAIH,CATQ,EAURE,KAVQ,CAUF,SAAAC,GAAG,CAAI,CACVV,QAAQ,CAAC,CACLC,IAAI,CAAEH,uBADD,CAELU,OAAO,CAAEE,GAFJ,CAAD,CAAR,CAIH,CAfQ,CAHkB,6GAAN,gEAAtB","sourcesContent":["import { dbUrl } from './index';\nimport axiosWithAuth from '../components/Login/withAuth';\n\nexport const GET_WORK_ORDERS_START = 'GET_WORK_ORDERS_START';\nexport const GET_WORK_ORDERS_SUCCESS = 'GET_WORK_ORDERS_SUCCESS';\nexport const GET_WORK_ORDERS_FAILURE = 'GET_WORK_ORDERS_FAILURE';\n\nexport const getWorkOrders = () => async dispatch => {\n    dispatch({ type: GET_WORK_ORDERS_START });\n\n    return await axiosWithAuth()\n        .get(`${dbUrl}/work_orders`)\n        .then(res => {\n            console.log(\"I am here\")\n            console.log(res.data)\n            dispatch({\n                type: GET_WORK_ORDERS_SUCCESS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_WORK_ORDERS_FAILURE,\n                payload: err\n            });\n        });\n};"]},"metadata":{},"sourceType":"module"}