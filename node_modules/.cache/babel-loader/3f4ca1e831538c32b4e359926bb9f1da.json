{"ast":null,"code":"import _slicedToArray from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{openWorkOrders,closeWorkOrders}from'../../actions/workOrderToggle';import{useLocation}from'react-router-dom';import{Button,ButtonGroup}from'reactstrap';import'../../styles/sidebar.scss';var WorkOrderToggle=function WorkOrderToggle(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hidden=_useState2[0],setHidden=_useState2[1];var open=useSelector(function(state){return state.workOrderToggleReducer.open;});var dispatch=useDispatch();var location=useLocation();useEffect(function(){changeHidden(location);},[location]);var changeHidden=function changeHidden(location){if(location.pathname==='/e_dashboard/workorders'||location.pathname==='/e_dashboard/workorders/'){setHidden(true);}else{setHidden(false);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"task-btns\"},hidden?/*#__PURE__*/React.createElement(ButtonGroup,{className:\"button-group\"},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch(openWorkOrders());},active:open===true},\"Open\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return dispatch(closeWorkOrders());},active:open===false},\"Closed\")):null);};export default WorkOrderToggle;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/WorkOrderToggle.js"],"names":["React","useState","useEffect","useSelector","useDispatch","openWorkOrders","closeWorkOrders","useLocation","Button","ButtonGroup","WorkOrderToggle","hidden","setHidden","open","state","workOrderToggleReducer","dispatch","location","changeHidden","pathname"],"mappings":"sMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,cAAT,CAAyBC,eAAzB,KAAgD,+BAAhD,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,MAAT,CAAiBC,WAAjB,KAAoC,YAApC,CAEA,MAAO,2BAAP,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,eACET,QAAQ,CAAC,KAAD,CADV,wCACnBU,MADmB,eACXC,SADW,eAE1B,GAAMC,CAAAA,IAAI,CAAGV,WAAW,CAAC,SAAAW,KAAK,QAAIA,CAAAA,KAAK,CAACC,sBAAN,CAA6BF,IAAjC,EAAN,CAAxB,CACA,GAAMG,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CACA,GAAMa,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CAEAL,SAAS,CAAC,UAAM,CACZgB,YAAY,CAACD,QAAD,CAAZ,CACH,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAD,QAAQ,CAAI,CAC7B,GAAGA,QAAQ,CAACE,QAAT,GAAsB,yBAAtB,EAAmDF,QAAQ,CAACE,QAAT,GAAsB,0BAA5E,CAAwG,CACpGP,SAAS,CAAC,IAAD,CAAT,CACH,CAFD,IAEO,CACHA,SAAS,CAAC,KAAD,CAAT,CACH,CACJ,CAND,CAQA,mBACI,2BAAK,SAAS,CAAC,WAAf,EACKD,MAAM,cAAG,oBAAC,WAAD,EAAa,SAAS,CAAC,cAAvB,eACN,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMK,CAAAA,QAAQ,CAACX,cAAc,EAAf,CAAd,EAAjB,CAAmD,MAAM,CAAEQ,IAAI,GAAK,IAApE,SADM,cAEN,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMG,CAAAA,QAAQ,CAACV,eAAe,EAAhB,CAAd,EAAjB,CAAoD,MAAM,CAAEO,IAAI,GAAK,KAArE,WAFM,CAAH,CAGU,IAJrB,CADJ,CAQH,CA1BD,CA4BA,cAAeH,CAAAA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { openWorkOrders, closeWorkOrders } from '../../actions/workOrderToggle';\nimport { useLocation } from 'react-router-dom';\nimport { Button, ButtonGroup } from 'reactstrap';\n\nimport '../../styles/sidebar.scss';\n\nconst WorkOrderToggle = () => {\n    const [hidden, setHidden] = useState(false);\n    const open = useSelector(state => state.workOrderToggleReducer.open);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        changeHidden(location);\n    }, [location]);\n\n    const changeHidden = location => {\n        if(location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n            setHidden(true);\n        } else {\n            setHidden(false);\n        }\n    };\n    \n    return (\n        <div className=\"task-btns\">\n            {hidden ? <ButtonGroup className=\"button-group\">\n                <Button onClick={() => dispatch(openWorkOrders())} active={open === true}>Open</Button>\n                <Button onClick={() => dispatch(closeWorkOrders())} active={open === false}>Closed</Button>\n            </ButtonGroup> : null}\n        </div>\n    );\n};\n\nexport default WorkOrderToggle;"]},"metadata":{},"sourceType":"module"}