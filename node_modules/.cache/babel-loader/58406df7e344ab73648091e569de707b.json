{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts/src/components/content-components/EmployeesTable.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table, Modal, ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\nimport { editEmployee } from \"../../actions/editEmployee\";\nimport { changeEmployeeStatus } from \"../../actions/changeEmployeeStatus\";\nimport \"../../styles/employee.scss\";\n\nconst EmployeesTable = props => {\n  const [curEmployee, setCurEmployee] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    jobTitle: \"\",\n    tierLevel: undefined,\n    phoneNumber: \"\",\n    email: \"\",\n    userId: \"\",\n    active: undefined\n  });\n  const [errorsOne, setErrorsOne] = useState({});\n  const [successOne, setSuccessOne] = useState(false);\n  const getErrorsOne = useSelector(state => state.editEmployeeReducer.errors);\n  const getSuccessOne = useSelector(state => state.editEmployeeReducer.success);\n  const [isOpenModalOne, setIsOpenModalOne] = useState(false);\n  const [successTwo, setSuccessTwo] = useState(false);\n  const getSuccessTwo = useSelector(state => state.changeEmployeeStatusReducer.success);\n  const [isOpenModalTwo, setIsOpenModalTwo] = useState(false);\n  const dispatch = useDispatch();\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    setErrorsOne(getErrorsOne);\n  }, [getErrorsOne]);\n  useEffect(() => {\n    if (getSuccessOne === true) {\n      setSuccessOne(true);\n    }\n\n    if (getSuccessTwo === true) {\n      setSuccessTwo(true);\n    }\n  }, [getSuccessOne, getSuccessTwo]);\n  useEffect(() => {\n    if (successOne === true) {\n      setIsOpenModalOne(false);\n      setErrorsOne({});\n      setSuccessOne(false);\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: undefined,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined\n      });\n    }\n\n    if (successTwo === true) {\n      setIsOpenModalTwo(false);\n      setSuccessTwo(false);\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: undefined,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined\n      });\n    }\n  }, [successOne, successTwo]);\n\n  const toggleOne = (e, employee) => {\n    if (!isOpenModalOne) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email,\n        userId: employee.userId,\n        active: employee.active\n      });\n    } else if (isOpenModalOne) {\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: null,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined\n      });\n    }\n\n    setIsOpenModalOne(!isOpenModalOne);\n    setErrorsOne({});\n  };\n\n  const toggleTwo = (e, employee) => {\n    if (!isOpenModalTwo) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email,\n        userId: employee.userId,\n        active: employee.active\n      });\n    } else if (isOpenModalTwo) {\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: null,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined\n      });\n    }\n\n    setIsOpenModalTwo(!isOpenModalTwo);\n  };\n\n  const handleChange = e => {\n    setCurEmployee({ ...curEmployee,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitOne = e => {\n    e.preventDefault();\n    dispatch(editEmployee(curEmployee));\n  };\n\n  const handleSubmitTwo = e => {\n    e.preventDefault();\n    dispatch(changeEmployeeStatus(curEmployee));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Tier Level\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, props ? props.props.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    className: employee.active ? \"\" : \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, employee.firstName, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    className: employee.active ? \"\" : \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, employee.jobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    className: `tier-level-col ${employee.active ? \"\" : \"text-muted\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, employee.tierLevel), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: employee.active ? \"\" : \"text-muted\",\n    href: `tel:+1-${employee.phoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, employee.phoneNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    className: employee.active ? \"\" : \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, employee.email), /*#__PURE__*/React.createElement(\"td\", {\n    className: employee.active ? \"\" : \"text-muted\",\n    onClick: e => toggleOne(e, employee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-pen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: employee.active ? \"\" : \"text-muted\",\n    onClick: e => toggleTwo(e, employee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  })))) : null)), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModalOne,\n    toggle: toggleOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, \"Edit Employee\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    onChange: handleChange,\n    value: curEmployee.firstName,\n    invalid: errorsOne.firstName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, errorsOne.firstName)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    onChange: handleChange,\n    value: curEmployee.lastName,\n    invalid: errorsOne.lastName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, errorsOne.lastName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-info-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"job-title-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"jobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"jobTitle\",\n    id: \"jobTitle\",\n    onChange: handleChange,\n    value: curEmployee.jobTitle,\n    invalid: errorsOne.jobTitle ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 19\n    }\n  }, \"Service Technician\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  }, \"Outside Sales\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 19\n    }\n  }, \"Service Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }, \"Dispatch\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, \"Office Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }, \"Owner\")), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, errorsOne.jobTitle)), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"tier-level-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"tierLevel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, \"Tier Level\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"tierLevel\",\n    id: \"tierLevel\",\n    onChange: handleChange,\n    value: curEmployee.tierLevel,\n    invalid: errorsOne.tierLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  }, \"3\")), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, errorsOne.tierLevel))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"phoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"phoneNumber\",\n    id: \"phoneNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    value: curEmployee.phoneNumber,\n    invalid: errorsOne.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, errorsOne.phoneNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleChange,\n    disabled: true,\n    value: curEmployee.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    onClick: handleSubmitOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModalTwo,\n    toggle: toggleTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }, curEmployee.active ? \"Set Employee as Inactive\" : \"Set Employee as Active\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, curEmployee.active ? `Would you like to set ${curEmployee.firstName}'s status as inactive?` : `Would you like to set ${curEmployee.firstName}'s status as active?`), /*#__PURE__*/React.createElement(ModalFooter, {\n    className: \"modal-two-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    className: \"modal-two-btn\",\n    onClick: handleSubmitTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, \"YES\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    className: \"modal-two-btn\",\n    onClick: toggleTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }, \"NO\"))));\n};\n\nexport default EmployeesTable;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts/src/components/content-components/EmployeesTable.js"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Table","Modal","ModalHeader","ModalBody","ModalFooter","Button","Form","FormGroup","FormFeedback","Label","Input","editEmployee","changeEmployeeStatus","EmployeesTable","props","curEmployee","setCurEmployee","firstName","lastName","jobTitle","tierLevel","undefined","phoneNumber","email","userId","active","errorsOne","setErrorsOne","successOne","setSuccessOne","getErrorsOne","state","editEmployeeReducer","errors","getSuccessOne","success","isOpenModalOne","setIsOpenModalOne","successTwo","setSuccessTwo","getSuccessTwo","changeEmployeeStatusReducer","isOpenModalTwo","setIsOpenModalTwo","dispatch","isFirstRun","current","toggleOne","e","employee","toggleTwo","handleChange","target","name","value","handleSubmitOne","preventDefault","handleSubmitTwo","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport { editEmployee } from \"../../actions/editEmployee\";\nimport { changeEmployeeStatus } from \"../../actions/changeEmployeeStatus\";\n\nimport \"../../styles/employee.scss\";\n\nconst EmployeesTable = (props) => {\n  const [curEmployee, setCurEmployee] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    jobTitle: \"\",\n    tierLevel: undefined,\n    phoneNumber: \"\",\n    email: \"\",\n    userId: \"\",\n    active: undefined,\n  });\n  const [errorsOne, setErrorsOne] = useState({});\n  const [successOne, setSuccessOne] = useState(false);\n  const getErrorsOne = useSelector((state) => state.editEmployeeReducer.errors);\n  const getSuccessOne = useSelector(\n    (state) => state.editEmployeeReducer.success\n  );\n  const [isOpenModalOne, setIsOpenModalOne] = useState(false);\n  const [successTwo, setSuccessTwo] = useState(false);\n  const getSuccessTwo = useSelector(\n    (state) => state.changeEmployeeStatusReducer.success\n  );\n  const [isOpenModalTwo, setIsOpenModalTwo] = useState(false);\n  const dispatch = useDispatch();\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    setErrorsOne(getErrorsOne);\n  }, [getErrorsOne]);\n\n  useEffect(() => {\n    if (getSuccessOne === true) {\n      setSuccessOne(true);\n    }\n    if (getSuccessTwo === true) {\n      setSuccessTwo(true);\n    }\n  }, [getSuccessOne, getSuccessTwo]);\n\n  useEffect(() => {\n    if (successOne === true) {\n      setIsOpenModalOne(false);\n      setErrorsOne({});\n      setSuccessOne(false);\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: undefined,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n    if (successTwo === true) {\n      setIsOpenModalTwo(false);\n      setSuccessTwo(false);\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: undefined,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n  }, [successOne, successTwo]);\n\n  const toggleOne = (e, employee) => {\n    if (!isOpenModalOne) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email,\n        userId: employee.userId,\n        active: employee.active,\n      });\n    } else if (isOpenModalOne) {\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: null,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n    setIsOpenModalOne(!isOpenModalOne);\n    setErrorsOne({});\n  };\n\n  const toggleTwo = (e, employee) => {\n    if (!isOpenModalTwo) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email,\n        userId: employee.userId,\n        active: employee.active,\n      });\n    } else if (isOpenModalTwo) {\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: null,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n    setIsOpenModalTwo(!isOpenModalTwo);\n  };\n\n  const handleChange = (e) => {\n    setCurEmployee({\n      ...curEmployee,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmitOne = (e) => {\n    e.preventDefault();\n    dispatch(editEmployee(curEmployee));\n  };\n\n  const handleSubmitTwo = (e) => {\n    e.preventDefault();\n    dispatch(changeEmployeeStatus(curEmployee));\n  };\n\n  return (\n    <div>\n      <Table hover>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Job Title</th>\n            <th>Tier Level</th>\n            <th>Phone Number</th>\n            <th>Email</th>\n            <th></th> {/*This empty header is for the edit button*/}\n            <th></th> {/*This empty header is for the change status button*/}\n          </tr>\n        </thead>\n        <tbody>\n          {props\n            ? props.props.map((employee) => (\n                <tr>\n                  <th\n                    scope=\"row\"\n                    className={employee.active ? \"\" : \"text-muted\"}\n                  >\n                    {employee.firstName} {employee.lastName}\n                  </th>\n                  <td className={employee.active ? \"\" : \"text-muted\"}>\n                    {employee.jobTitle}\n                  </td>\n                  <td\n                    className={`tier-level-col ${\n                      employee.active ? \"\" : \"text-muted\"\n                    }`}\n                  >\n                    {employee.tierLevel}\n                  </td>\n                  <td>\n                    <a\n                      className={employee.active ? \"\" : \"text-muted\"}\n                      href={`tel:+1-${employee.phoneNumber}`}\n                    >\n                      {employee.phoneNumber}\n                    </a>\n                  </td>\n                  <td className={employee.active ? \"\" : \"text-muted\"}>\n                    {employee.email}\n                  </td>\n                  <td\n                    className={employee.active ? \"\" : \"text-muted\"}\n                    onClick={(e) => toggleOne(e, employee)}\n                  >\n                    <i className=\"fad fa-pen\" />\n                  </td>\n                  <td\n                    className={employee.active ? \"\" : \"text-muted\"}\n                    onClick={(e) => toggleTwo(e, employee)}\n                  >\n                    <i className=\"fad fa-trash\" />\n                  </td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n      <Modal isOpen={isOpenModalOne} toggle={toggleOne}>\n        <ModalHeader toggle={toggleOne}>Edit Employee</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitOne}>\n            <div className=\"name-div\">\n              <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  onChange={handleChange}\n                  value={curEmployee.firstName}\n                  invalid={errorsOne.firstName ? true : false}\n                />\n                <FormFeedback>{errorsOne.firstName}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  onChange={handleChange}\n                  value={curEmployee.lastName}\n                  invalid={errorsOne.lastName ? true : false}\n                />\n                <FormFeedback>{errorsOne.lastName}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"job-info-div\">\n              <FormGroup className=\"job-title-form-group\">\n                <Label for=\"jobTitle\">Job Title</Label>\n                <Input\n                  type=\"select\"\n                  name=\"jobTitle\"\n                  id=\"jobTitle\"\n                  onChange={handleChange}\n                  value={curEmployee.jobTitle}\n                  invalid={errorsOne.jobTitle ? true : false}\n                >\n                  <option>Select</option>\n                  <option>Service Technician</option>\n                  <option>Outside Sales</option>\n                  <option>Service Manager</option>\n                  <option>Dispatch</option>\n                  <option>Office Manager</option>\n                  <option>Owner</option>\n                </Input>\n                <FormFeedback>{errorsOne.jobTitle}</FormFeedback>\n              </FormGroup>\n              <FormGroup className=\"tier-level-form-group\">\n                <Label for=\"tierLevel\">Tier Level</Label>\n                <Input\n                  type=\"select\"\n                  name=\"tierLevel\"\n                  id=\"tierLevel\"\n                  onChange={handleChange}\n                  value={curEmployee.tierLevel}\n                  invalid={errorsOne.tierLevel}\n                >\n                  <option>Select</option>\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                </Input>\n                <FormFeedback>{errorsOne.tierLevel}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"phoneNumber\">Phone Number</Label>\n              <Input\n                type=\"text\"\n                name=\"phoneNumber\"\n                id=\"phoneNumber\"\n                placeholder=\"XXX-XXX-XXXX\"\n                onChange={handleChange}\n                value={curEmployee.phoneNumber}\n                invalid={errorsOne.phoneNumber}\n              />\n              <FormFeedback>{errorsOne.phoneNumber}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                onChange={handleChange}\n                disabled\n                value={curEmployee.email}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" type=\"submit\" onClick={handleSubmitOne}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenModalTwo} toggle={toggleTwo}>\n        <ModalHeader toggle={toggleTwo}>\n          {curEmployee.active\n            ? \"Set Employee as Inactive\"\n            : \"Set Employee as Active\"}\n        </ModalHeader>\n        <ModalBody>\n          {curEmployee.active\n            ? `Would you like to set ${curEmployee.firstName}'s status as inactive?`\n            : `Would you like to set ${curEmployee.firstName}'s status as active?`}\n        </ModalBody>\n        <ModalFooter className=\"modal-two-footer\">\n          <Button\n            color=\"success\"\n            type=\"submit\"\n            className=\"modal-two-btn\"\n            onClick={handleSubmitTwo}\n          >\n            YES\n          </Button>\n          <Button color=\"danger\" className=\"modal-two-btn\" onClick={toggleTwo}>\n            NO\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EmployeesTable;\n"]},"metadata":{},"sourceType":"module"}