{"ast":null,"code":"import _regeneratorRuntime from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var OPEN_JOBS=\"OPEN_JOBS\";export var CLOSE_JOBS=\"CLOSE_JOBS\";export var openJobs=function openJobs(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:OPEN_JOBS});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var closeJobs=function closeJobs(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:CLOSE_JOBS});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/actions/jobToggle.js"],"names":["OPEN_JOBS","CLOSE_JOBS","openJobs","dispatch","type","closeJobs"],"mappings":"2XAAA,MAAO,IAAMA,CAAAA,SAAS,CAAG,WAAlB,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,YAAnB,CAEP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,kGAAM,iBAAOC,QAAP,kHAC5BA,QAAQ,CAAC,CAAEC,IAAI,CAAEJ,SAAR,CAAD,CAAR,CAD4B,sDAAN,gEAAjB,CAIP,MAAO,IAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,mGAAM,kBAAOF,QAAP,sHAC7BA,QAAQ,CAAC,CAAEC,IAAI,CAAEH,UAAR,CAAD,CAAR,CAD6B,wDAAN,kEAAlB","sourcesContent":["export const OPEN_JOBS = \"OPEN_JOBS\";\nexport const CLOSE_JOBS = \"CLOSE_JOBS\";\n\nexport const openJobs = () => async (dispatch) => {\n  dispatch({ type: OPEN_JOBS });\n};\n\nexport const closeJobs = () => async (dispatch) => {\n  dispatch({ type: CLOSE_JOBS });\n};"]},"metadata":{},"sourceType":"module"}