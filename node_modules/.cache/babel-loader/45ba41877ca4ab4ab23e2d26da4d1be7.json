{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddCustomerBtn.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, FormFeedback, Label, Input } from 'reactstrap';\nimport { useLocation } from 'react-router-dom';\nimport '../../styles/sidebar.scss';\n\nconst AddCustomerBtn = () => {\n  const [customer, setCustomer] = useState({\n    businessName: '',\n    primaryContact: {\n      firstName: '',\n      lastName: ''\n    },\n    billingContact: {\n      firstName: '',\n      lastName: ''\n    },\n    primaryEmail: '',\n    billingEmail: '',\n    shopAddress: {\n      address: '',\n      city: '',\n      state: '',\n      zipcode: ''\n    },\n    billingAddress: {\n      address: '',\n      city: '',\n      state: '',\n      zipcode: ''\n    }\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector(state => state);\n  const getSuccess = useSelector(state => state);\n  const [hidden, setHidden] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    changeHidden(location);\n  }, [location]);\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    setErrors(getErrors);\n  }, [getErrors]);\n  useEffect(() => {\n    if (getSuccess === true) {\n      setSuccess(true);\n    }\n\n    ;\n  }, [getSuccess]);\n  useEffect(() => {\n    if (success === true) {\n      setIsOpen(false);\n      setErrors({});\n      setSuccess(false);\n      setCustomer({\n        businessName: '',\n        primaryContact: {\n          firstName: '',\n          lastName: ''\n        },\n        billingContact: {\n          firstName: '',\n          lastName: ''\n        },\n        primaryEmail: '',\n        billingEmail: '',\n        shopAddress: {\n          address: '',\n          city: '',\n          state: '',\n          zipcode: ''\n        },\n        billingAddress: {\n          address: '',\n          city: '',\n          state: '',\n          zipcode: ''\n        }\n      });\n    }\n\n    ;\n  }, [success]);\n\n  const changeHidden = location => {\n    if (location.pathname === '/e_dashboard/customers' || location.pathname === '/e_dashboard/customer/') {\n      setHidden(true);\n    } else {\n      setHidden(false);\n    }\n\n    ;\n  };\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n    setErrors({});\n  };\n\n  const handleChange = e => {\n    setCustomer({ ...customer,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(registerCustomer(customer));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-customer-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, hidden ? /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }\n  }, \"Add Customer\") : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Add Customer\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default AddCustomerBtn;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddCustomerBtn.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","FormFeedback","Label","Input","useLocation","AddCustomerBtn","customer","setCustomer","businessName","primaryContact","firstName","lastName","billingContact","primaryEmail","billingEmail","shopAddress","address","city","state","zipcode","billingAddress","errors","setErrors","success","setSuccess","getErrors","getSuccess","hidden","setHidden","isOpen","setIsOpen","dispatch","location","changeHidden","isFirstRun","current","pathname","toggle","handleChange","e","target","name","value","handleSubmit","preventDefault","registerCustomer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Modal, \n    ModalHeader, \n    ModalBody, \n    ModalFooter, \n    Form, \n    FormGroup,\n    FormFeedback,\n    Label,\n    Input,\n} from 'reactstrap';\nimport { useLocation } from 'react-router-dom';\n\nimport '../../styles/sidebar.scss';\n\nconst AddCustomerBtn = () => {\n    const [customer, setCustomer] = useState({\n        businessName: '',\n        primaryContact: {\n            firstName: '',\n            lastName: ''\n        },\n        billingContact: {\n            firstName: '',\n            lastName: ''\n        },\n        primaryEmail: '',\n        billingEmail: '',\n        shopAddress: {\n            address: '',\n            city: '',\n            state: '',\n            zipcode: ''\n        },\n        billingAddress: {\n            address: '',\n            city: '',\n            state: '',\n            zipcode: ''\n        },\n    });\n    const [errors, setErrors] = useState({});\n    const [success, setSuccess] = useState(false);\n    const getErrors = useSelector(state => state);\n    const getSuccess = useSelector(state => state);\n    const [hidden, setHidden] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        changeHidden(location);\n    }, [location]);\n\n    const isFirstRun = useRef(true);\n    useEffect(() => {\n        if(isFirstRun.current) {\n            isFirstRun.current = false;\n            return;\n        }\n        setErrors(getErrors);\n    }, [getErrors]);\n\n    useEffect(() => {\n        if(getSuccess === true) {\n            setSuccess(true);\n        };\n    }, [getSuccess]);\n\n    useEffect(() => {\n        if(success === true) {\n            setIsOpen(false);\n            setErrors({})\n            setSuccess(false);\n            setCustomer({\n                businessName: '',\n                primaryContact: {\n                    firstName: '',\n                    lastName: ''\n                },\n                billingContact: {\n                    firstName: '',\n                    lastName: ''\n                },\n                primaryEmail: '',\n                billingEmail: '',\n                shopAddress: {\n                    address: '',\n                    city: '',\n                    state: '',\n                    zipcode: ''\n                },\n                billingAddress: {\n                    address: '',\n                    city: '',\n                    state: '',\n                    zipcode: ''\n                },\n            });\n        };\n    }, [success]);\n\n    const changeHidden = location => {\n        if(location.pathname === '/e_dashboard/customers' || location.pathname === '/e_dashboard/customer/') {\n            setHidden(true);\n        } else {\n            setHidden(false);\n        };\n    };\n\n    const toggle = () => {\n        setIsOpen(!isOpen);\n        setErrors({})\n    };\n\n    const handleChange = e => {\n        setCustomer({\n            ...customer,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(registerCustomer(customer));\n    };\n\n    return (\n        <div className=\"add-customer-div\">\n            {hidden ? <Button color=\"success\">Add Customer</Button> : null}\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Add Customer</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmit}>\n\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddCustomerBtn;"]},"metadata":{},"sourceType":"module"}