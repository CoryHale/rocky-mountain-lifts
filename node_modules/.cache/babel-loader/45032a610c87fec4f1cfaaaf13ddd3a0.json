{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/sidebar-components/AddEventBtn.js\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormFeedback } from \"reactstrap\";\nimport \"../../styles/sidebar.scss\";\n\nconst AddEventBtn = () => {\n  const [event, setEvent] = useState({\n    title: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    allDay: false,\n    recurring: false,\n    daysOfWeek: [],\n    extendedProps: {\n      location: \"\",\n      inviteAll: false,\n      invitees: []\n    }\n  });\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    if (isOpen) {\n      setEvent({\n        title: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        allDay: false,\n        recurring: false,\n        daysOfWeek: [],\n        extendedProps: {\n          location: \"\",\n          inviteAll: false,\n          invitees: []\n        }\n      });\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-event-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Add Event\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Add Event\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default AddEventBtn;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/sidebar-components/AddEventBtn.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","AddEventBtn","event","setEvent","title","startDate","endDate","startTime","endTime","allDay","recurring","daysOfWeek","extendedProps","location","inviteAll","invitees","isOpen","setIsOpen","toggle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,WALF,EAMEC,IANF,EAOEC,SAPF,EAQEC,KARF,EASEC,KATF,EAUEC,YAVF,QAWO,YAXP;AAaA,OAAO,2BAAP;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;AACjCc,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,SAAS,EAAE,EAFsB;AAGjCC,IAAAA,OAAO,EAAE,EAHwB;AAIjCC,IAAAA,SAAS,EAAE,EAJsB;AAKjCC,IAAAA,OAAO,EAAE,EALwB;AAMjCC,IAAAA,MAAM,EAAE,KANyB;AAOjCC,IAAAA,SAAS,EAAE,KAPsB;AAQjCC,IAAAA,UAAU,EAAE,EARqB;AASjCC,IAAAA,aAAa,EAAE;AACbC,MAAAA,QAAQ,EAAE,EADG;AAEbC,MAAAA,SAAS,EAAE,KAFE;AAGbC,MAAAA,QAAQ,EAAE;AAHG;AATkB,GAAD,CAAlC;AAeA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAM4B,MAAM,GAAG,MAAM;AACnB,QAAIF,MAAJ,EAAY;AACVb,MAAAA,QAAQ,CAAC;AACPC,QAAAA,KAAK,EAAE,EADA;AAEPC,QAAAA,SAAS,EAAE,EAFJ;AAGPC,QAAAA,OAAO,EAAE,EAHF;AAIPC,QAAAA,SAAS,EAAE,EAJJ;AAKPC,QAAAA,OAAO,EAAE,EALF;AAMPC,QAAAA,MAAM,EAAE,KAND;AAOPC,QAAAA,SAAS,EAAE,KAPJ;AAQPC,QAAAA,UAAU,EAAE,EARL;AASPC,QAAAA,aAAa,EAAE;AACbC,UAAAA,QAAQ,EAAE,EADG;AAEbC,UAAAA,SAAS,EAAE,KAFE;AAGbC,UAAAA,QAAQ,EAAE;AAHG;AATR,OAAD,CAAR;AAeD;;AAEDE,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAEE,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAKE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,MAAf;AAAuB,IAAA,MAAM,EAAEE,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,CADF;AAYD,CApDD;;AAsDA,eAAejB,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst AddEventBtn = () => {\n  const [event, setEvent] = useState({\n    title: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    allDay: false,\n    recurring: false,\n    daysOfWeek: [],\n    extendedProps: {\n      location: \"\",\n      inviteAll: false,\n      invitees: [],\n    },\n  });\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    if (isOpen) {\n      setEvent({\n        title: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        allDay: false,\n        recurring: false,\n        daysOfWeek: [],\n        extendedProps: {\n          location: \"\",\n          inviteAll: false,\n          invitees: [],\n        },\n      });\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"add-event-div\">\n      <Button color=\"danger\" onClick={toggle}>\n        Add Event\n      </Button>\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Event</ModalHeader>\n        <ModalBody></ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddEventBtn;\n"]},"metadata":{},"sourceType":"module"}