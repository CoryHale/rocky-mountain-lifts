{"ast":null,"code":"import _defineProperty from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{Button,Card,CardHeader,CardBody,Form,FormGroup,FormFeedback,Label,Input,Modal,ModalHeader,ModalBody,ModalFooter,Table}from\"reactstrap\";import Select from\"react-select\";import{useHistory}from\"react-router-dom\";import{useAuth}from\"../../contexts/AuthContext\";import{getTasks}from\"../../actions/getTasks\";import{getEvents}from\"../../actions/getEvents\";import{getWorkOrders}from\"../../actions/getWorkOrders\";import{getEmployees}from\"../../actions/getEmployees\";import{editTask}from\"../../actions/editTask\";import{deleteTask}from\"../../actions/deleteTask\";import\"../../styles/task.scss\";var Task=function Task(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var fetchTasks=useSelector(function(state){return state.getTasksReducer.tasks;});var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),workOrders=_useState4[0],setWorkOrders=_useState4[1];var fetchWorkOrders=useSelector(function(state){return state.getWorkOrdersReducer.workOrders;});var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),employees=_useState6[0],setEmployees=_useState6[1];var fetchEmployees=useSelector(function(state){return state.getEmployeesReducer.employees;});var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isOpen=_useState8[0],setIsOpen=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),currentTask=_useState10[0],setCurrentTask=_useState10[1];var editSuccess=useSelector(function(state){return state.editTaskReducer.success;});var deleteSuccess=useSelector(function(state){return state.deleteTaskReducer.success;});var _useState11=useState({taskDescription:\"\",taskDate:\"\",taskTime:\"\",employeeId:\"\"}),_useState12=_slicedToArray(_useState11,2),errors=_useState12[0],setErrors=_useState12[1];var _useAuth=useAuth(),currentUser=_useAuth.currentUser;var dispatch=useDispatch();var history=useHistory();useEffect(function(){dispatch(getTasks());dispatch(getEvents());dispatch(getWorkOrders());dispatch(getEmployees());},[]);useEffect(function(){setTasks(fetchTasks.tasks);},[fetchTasks]);useEffect(function(){var array=[];if(fetchWorkOrders.workOrders){fetchWorkOrders.workOrders.forEach(function(workOrder){if(workOrder.crewMembers.includes(currentUser.uid)&&workOrder.status===\"Open\"){array.push(workOrder);}else if(workOrder.serviceManager===currentUser.uid&&workOrder.status===\"In Review\"){array.push(workOrder);}else if(workOrder.officeManager===currentUser.uid&&workOrder.status===\"In Billing\"){array.push(workOrder);}});}setWorkOrders(array);},[fetchWorkOrders]);useEffect(function(){var array=[];if(fetchEmployees.employees){fetchEmployees.employees.forEach(function(employee){if(employee.active===true){array.push({label:\"\".concat(employee.firstName,\" \").concat(employee.lastName),value:employee.userId,name:\"employeeId\",jobTitle:employee.jobTitle});}});setEmployees(array);}},[fetchEmployees]);useEffect(function(){if(deleteSuccess||editSuccess){setIsOpen(false);}},[deleteSuccess,editSuccess]);var dateConverter=function dateConverter(date){var dateArray=date.split(\"-\");return\"\".concat(dateArray[1],\"/\").concat(dateArray[2],\"/\").concat(dateArray[0]);};var timeConverter=function timeConverter(time){var timeArray=time.split(\":\");var hour=parseInt(timeArray[0]);var m;if(hour<=11){m=\"AM\";}else{m=\"PM\";}if(hour===0){var newHour=\"12\";timeArray[0]=newHour;}else if(hour<=12){var _newHour=hour.toString();timeArray[0]=_newHour;}else{var _newHour2=(hour-12).toString();timeArray[0]=_newHour2;}return\"\".concat(timeArray[0],\":\").concat(timeArray[1],\" \").concat(m);};var toggle=function toggle(e,task){setCurrentTask(task);setIsOpen(!isOpen);};var goToWorkOrder=function goToWorkOrder(e,workOrderId){history.push(\"/dashboard/workorders/\".concat(workOrderId));};var handleChange=function handleChange(e){setCurrentTask(_objectSpread(_objectSpread({},currentTask),{},_defineProperty({},e.target.name,e.target.value)));};var handleSelectChange=function handleSelectChange(e){setCurrentTask(_objectSpread(_objectSpread({},currentTask),{},_defineProperty({},e.name,e.value)));};var handleEditTask=function handleEditTask(e,currentTask){e.preventDefault();dispatch(editTask(currentTask));};var handleDeleteTask=function handleDeleteTask(e,currentTask){e.preventDefault();dispatch(deleteTask(currentTask.taskId));};return/*#__PURE__*/React.createElement(\"div\",{className:\"tasks-page\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Tasks\"),tasks?tasks.map(function(task){return/*#__PURE__*/React.createElement(Card,{onClick:function onClick(e){return toggle(e,task);},className:\"tasks-page-task-card\"},/*#__PURE__*/React.createElement(Table,{borderless:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Task\"),/*#__PURE__*/React.createElement(\"th\",null,\"Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Time\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,task.taskDescription),/*#__PURE__*/React.createElement(\"td\",null,dateConverter(task.taskDate)),/*#__PURE__*/React.createElement(\"td\",null,timeConverter(task.taskTime))))));}):null,/*#__PURE__*/React.createElement(\"h1\",null,\"Work Orders\"),workOrders?workOrders.map(function(workOrder){return/*#__PURE__*/React.createElement(Card,{onClick:function onClick(e){return goToWorkOrder(e,workOrder.workOrderId);},className:\"tasks-page-task-card\"},/*#__PURE__*/React.createElement(Table,{borderless:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Work Order #\"),/*#__PURE__*/React.createElement(\"th\",null,\"Customer\"),/*#__PURE__*/React.createElement(\"th\",null,\"Service Date\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,workOrder.workOrderId),/*#__PURE__*/React.createElement(\"td\",null,workOrder.customerName),/*#__PURE__*/React.createElement(\"td\",null,workOrder.serviceDate)))));}):null,/*#__PURE__*/React.createElement(Modal,{isOpen:isOpen,toggle:toggle},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggle},\"Task\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleEditTask},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Task\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",name:\"taskDescription\",value:currentTask?currentTask.taskDescription:null,onChange:handleChange,invalid:errors.taskDescription?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskDescription)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Date\"),/*#__PURE__*/React.createElement(Input,{type:\"date\",placeholder:\"date placeholder\",name:\"taskDate\",value:currentTask?currentTask.taskDate:null,onChange:handleChange,invalid:errors.taskDate?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskDate)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Time\"),/*#__PURE__*/React.createElement(Input,{type:\"time\",placeholder:\"time placeholder\",name:\"taskTime\",value:currentTask?currentTask.taskTime:null,onChange:handleChange,invalid:errors.taskTime?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskTime))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Assigned To\"),/*#__PURE__*/React.createElement(Select,{options:employees,defaultValue:currentTask?{value:currentTask.employeeId}:null,onChange:handleSelectChange,className:errors.employeeId?\"invalid\":\"\"}),/*#__PURE__*/React.createElement(Input,{type:\"hidden\",disabled:true,invalid:errors.employeeId?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.employeeId)))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"danger\",onClick:function onClick(e){return handleEditTask(e,currentTask);}},\"Edit\"),/*#__PURE__*/React.createElement(Button,{color:\"success\",onClick:function onClick(e){return handleDeleteTask(e,currentTask);}},\"Complete\"))));};export default Task;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Task.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Button","Card","CardHeader","CardBody","Form","FormGroup","FormFeedback","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","Table","Select","useHistory","useAuth","getTasks","getEvents","getWorkOrders","getEmployees","editTask","deleteTask","Task","tasks","setTasks","fetchTasks","state","getTasksReducer","workOrders","setWorkOrders","fetchWorkOrders","getWorkOrdersReducer","employees","setEmployees","fetchEmployees","getEmployeesReducer","isOpen","setIsOpen","currentTask","setCurrentTask","editSuccess","editTaskReducer","success","deleteSuccess","deleteTaskReducer","taskDescription","taskDate","taskTime","employeeId","errors","setErrors","currentUser","dispatch","history","array","forEach","workOrder","crewMembers","includes","uid","status","push","serviceManager","officeManager","employee","active","label","firstName","lastName","value","userId","name","jobTitle","dateConverter","date","dateArray","split","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","toggle","e","task","goToWorkOrder","workOrderId","handleChange","target","handleSelectChange","handleEditTask","preventDefault","handleDeleteTask","taskId","map","customerName","serviceDate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { getTasks } from \"../../actions/getTasks\";\nimport { getEvents } from \"../../actions/getEvents\";\nimport { getWorkOrders } from \"../../actions/getWorkOrders\";\nimport { getEmployees } from \"../../actions/getEmployees\";\nimport { editTask } from \"../../actions/editTask\";\nimport { deleteTask } from \"../../actions/deleteTask\";\n\nimport \"../../styles/task.scss\";\n\nconst Task = () => {\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector((state) => state.getTasksReducer.tasks);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const [employees, setEmployees] = useState();\n  const fetchEmployees = useSelector(\n    (state) => state.getEmployeesReducer.employees\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState();\n  const editSuccess = useSelector((state) => state.editTaskReducer.success);\n  const deleteSuccess = useSelector((state) => state.deleteTaskReducer.success);\n  const [errors, setErrors] = useState({\n    taskDescription: \"\",\n    taskDate: \"\",\n    taskTime: \"\",\n    employeeId: \"\",\n  });\n  const { currentUser } = useAuth();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(getTasks());\n    dispatch(getEvents());\n    dispatch(getWorkOrders());\n    dispatch(getEmployees());\n  }, []);\n\n  useEffect(() => {\n    setTasks(fetchTasks.tasks);\n  }, [fetchTasks]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchWorkOrders.workOrders) {\n      fetchWorkOrders.workOrders.forEach((workOrder) => {\n        if (\n          workOrder.crewMembers.includes(currentUser.uid) &&\n          workOrder.status === \"Open\"\n        ) {\n          array.push(workOrder);\n        } else if (\n          workOrder.serviceManager === currentUser.uid &&\n          workOrder.status === \"In Review\"\n        ) {\n          array.push(workOrder);\n        } else if (\n          workOrder.officeManager === currentUser.uid &&\n          workOrder.status === \"In Billing\"\n        ) {\n          array.push(workOrder);\n        }\n      });\n    }\n\n    setWorkOrders(array);\n  }, [fetchWorkOrders]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchEmployees.employees) {\n      fetchEmployees.employees.forEach((employee) => {\n        if (employee.active === true) {\n          array.push({\n            label: `${employee.firstName} ${employee.lastName}`,\n            value: employee.userId,\n            name: \"employeeId\",\n            jobTitle: employee.jobTitle,\n          });\n        }\n      });\n\n      setEmployees(array);\n    }\n  }, [fetchEmployees]);\n\n  useEffect(() => {\n    if (deleteSuccess || editSuccess) {\n      setIsOpen(false);\n    }\n  }, [deleteSuccess, editSuccess]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = (e, task) => {\n    setCurrentTask(task);\n    setIsOpen(!isOpen);\n  };\n\n  const goToWorkOrder = (e, workOrderId) => {\n    history.push(`/dashboard/workorders/${workOrderId}`);\n  };\n\n  const handleChange = (e) => {\n    setCurrentTask({\n      ...currentTask,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setCurrentTask({\n      ...currentTask,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleEditTask = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(editTask(currentTask));\n  };\n\n  const handleDeleteTask = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(deleteTask(currentTask.taskId));\n  };\n\n  return (\n    <div className=\"tasks-page\">\n      <h1>Tasks</h1>\n      {tasks\n        ? tasks.map((task) => (\n            <Card\n              onClick={(e) => toggle(e, task)}\n              className=\"tasks-page-task-card\"\n            >\n              <Table borderless>\n                <thead>\n                  <tr>\n                    <th>Task</th>\n                    <th>Date</th>\n                    <th>Time</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{task.taskDescription}</td>\n                    <td>{dateConverter(task.taskDate)}</td>\n                    <td>{timeConverter(task.taskTime)}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          ))\n        : null}\n      <h1>Work Orders</h1>\n      {workOrders\n        ? workOrders.map((workOrder) => (\n            <Card\n              onClick={(e) => goToWorkOrder(e, workOrder.workOrderId)}\n              className=\"tasks-page-task-card\"\n            >\n              <Table borderless>\n                <thead>\n                  <tr>\n                    <th>Work Order #</th>\n                    <th>Customer</th>\n                    <th>Service Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{workOrder.workOrderId}</td>\n                    <td>{workOrder.customerName}</td>\n                    <td>{workOrder.serviceDate}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          ))\n        : null}\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleEditTask}>\n            <FormGroup>\n              <Label>Task</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                value={currentTask ? currentTask.taskDescription : null}\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <div>\n              <FormGroup>\n                <Label>Date</Label>\n                <Input\n                  type=\"date\"\n                  placeholder=\"date placeholder\"\n                  name=\"taskDate\"\n                  value={currentTask ? currentTask.taskDate : null}\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>Time</Label>\n                <Input\n                  type=\"time\"\n                  placeholder=\"time placeholder\"\n                  name=\"taskTime\"\n                  value={currentTask ? currentTask.taskTime : null}\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label>Assigned To</Label>\n              <Select\n                options={employees}\n                defaultValue={\n                  currentTask ? { value: currentTask.employeeId } : null\n                }\n                onChange={handleSelectChange}\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"danger\"\n            onClick={(e) => handleEditTask(e, currentTask)}\n          >\n            Edit\n          </Button>\n          <Button\n            color=\"success\"\n            onClick={(e) => handleDeleteTask(e, currentTask)}\n          >\n            Complete\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}