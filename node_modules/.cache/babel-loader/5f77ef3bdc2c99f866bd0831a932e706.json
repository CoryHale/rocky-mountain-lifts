{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddWorkOrderBtn.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, FormFeedback, Label, Input } from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport { addWorkOrder } from '../../actions/addWorkOrder';\nimport '../../styles/sidebar.scss';\n\nconst AddWorkOrderBtn = () => {\n  const [workOrder, setWorkOrder] = useState({\n    customer: '',\n    serviceDate: '',\n    serviceTime: '',\n    serviceDescription: '',\n    serviceType: [],\n    crewMembers: [],\n    prevJobNumber: undefined,\n    notes: '',\n    officeNotes: '',\n    quote: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector(state => state);\n  const getSuccess = useSelector(state => state);\n  const [employees, setEmployees] = useState([]);\n  const employeesArray = [];\n  const [customers, setCustomers] = useState([]);\n  const customersArray = [];\n  const getUsers = useSelector(state => state.getUsersReducer.users);\n  const [hidden, setHidden] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    changeHidden(location);\n  }, [location]);\n\n  const changeHidden = location => {\n    if (location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n      setHidden(true);\n    } else {\n      setHidden(false);\n    }\n\n    ;\n  };\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    setErrors(getErrors);\n  }, [getErrors]);\n  useEffect(() => {\n    if (getSuccess === true) {\n      setSuccess(true);\n    }\n\n    ;\n  }, [getSuccess]);\n  useEffect(() => {\n    if (success === true) {\n      setIsOpen(false);\n      setErrors({});\n      setSuccess(false);\n      setWorkOrder({\n        customer: '',\n        serviceDate: '',\n        serviceTime: '',\n        serviceDescription: '',\n        serviceType: [],\n        crewMembers: [],\n        prevJobNumber: undefined,\n        notes: '',\n        officeNotes: '',\n        quote: ''\n      });\n    }\n\n    ;\n  }, [success]);\n  useEffect(() => {\n    if (getUsers.users) {\n      getUsers.users.forEach(user => {\n        if (user.userType === 'employee') {\n          employeesArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: 'crewMembers'\n          });\n        } else {\n          customersArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: 'customer'\n          });\n        }\n\n        ;\n      });\n    }\n\n    ;\n    employeesArray.push({\n      label: 'General Contractor',\n      value: 'General Contractor'\n    });\n    setEmployees(employeesArray);\n    setCustomers(customersArray);\n  }, [getUsers]);\n\n  const toggle = e => {\n    setIsOpen(!isOpen);\n    setErrors({});\n  };\n\n  const handleChange = e => {\n    setWorkOrder({ ...workOrder,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = e => {\n    setWorkOrder({ ...workOrder,\n      [e.name]: e.value\n    });\n  };\n\n  const handleMultiSelectChange = e => {\n    e.forEach(e => {\n      setWorkOrder({ ...workOrder,\n        [e.name]: [...workOrder[e.name], e.value]\n      });\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addWorkOrder(workOrder));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: hidden ? \"add-work-order-div\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, hidden ? /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, \"Create Work Order\") : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, \"Create Work Order\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(Select, {\n    options: customers,\n    name: \"customer\",\n    onChange: handleSelectChange,\n    invalid: errors.customer ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, errors.customer)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"datepicker-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"serviceDate\",\n    id: \"serviceDate\",\n    placeholder: \"date placeholder\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"serviceTime\",\n    id: \"serviceTime\",\n    placeholder: \"time placeholder\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"serviceDescription\",\n    id: \"serviceDescription\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, \"Service Type\"), /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    options: serviceTypes.map(type => ({\n      label: type,\n      value: type,\n      name: 'serviceType'\n    })),\n    name: \"serviceType\",\n    onChange: handleMultiSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"crewMembers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, \"Crew Members\"), /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    options: employees,\n    name: \"crewMembers\",\n    onChange: handleMultiSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"prevJobNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, \"Previous Job Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"prevJobNumber\",\n    id: \"prevJobNumber\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"notes\",\n    id: \"notes\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"officeNotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, \"Office Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"officeNotes\",\n    id: \"officeNotes\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, \"Quote\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    name: \"file\",\n    id: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default AddWorkOrderBtn;\nconst serviceTypes = [\"Install\", \"Service\", \"Training\", \"Inspection\", \"Warranty\"];","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddWorkOrderBtn.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","FormFeedback","Label","Input","Select","useLocation","addWorkOrder","AddWorkOrderBtn","workOrder","setWorkOrder","customer","serviceDate","serviceTime","serviceDescription","serviceType","crewMembers","prevJobNumber","undefined","notes","officeNotes","quote","errors","setErrors","success","setSuccess","getErrors","state","getSuccess","employees","setEmployees","employeesArray","customers","setCustomers","customersArray","getUsers","getUsersReducer","users","hidden","setHidden","isOpen","setIsOpen","dispatch","location","changeHidden","pathname","isFirstRun","current","forEach","user","userType","push","label","firstName","lastName","value","userId","name","toggle","e","handleChange","target","handleSelectChange","handleMultiSelectChange","handleSubmit","preventDefault","serviceTypes","map","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    FormFeedback,\n    Label,\n    Input,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport { addWorkOrder } from '../../actions/addWorkOrder';\n\nimport '../../styles/sidebar.scss';\n\nconst AddWorkOrderBtn = () => {\n    const [workOrder, setWorkOrder] = useState({\n        customer: '',\n        serviceDate: '',\n        serviceTime: '',\n        serviceDescription: '',\n        serviceType: [],\n        crewMembers: [],\n        prevJobNumber: undefined,\n        notes: '',\n        officeNotes: '',\n        quote: ''\n    });\n    const [errors, setErrors] = useState({});\n    const [success, setSuccess] = useState(false);\n    const getErrors = useSelector(state => state);\n    const getSuccess = useSelector(state => state);\n    const [employees, setEmployees] = useState([]);\n    const employeesArray = [];\n    const [customers, setCustomers] = useState([]);\n    const customersArray = [];\n    const getUsers = useSelector(state => state.getUsersReducer.users); \n    const [hidden, setHidden] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const location = useLocation();\n    \n    useEffect(() => {\n        changeHidden(location);\n    }, [location]);\n    \n    const changeHidden = location => {\n        if(location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n            setHidden(true);\n        } else {\n            setHidden(false);\n        };\n    };\n\n    const isFirstRun = useRef(true);\n    useEffect(() => {\n        if(isFirstRun.current) {\n            isFirstRun.current = false;\n            return;\n        }\n        setErrors(getErrors);\n    }, [getErrors]);\n\n    useEffect(() => {\n        if(getSuccess === true) {\n            setSuccess(true);\n        };\n    }, [getSuccess]);\n\n    useEffect(() => {\n        if(success === true) {\n            setIsOpen(false);\n            setErrors({})\n            setSuccess(false);\n            setWorkOrder({\n                customer: '',\n                serviceDate: '',\n                serviceTime: '',\n                serviceDescription: '',\n                serviceType: [],\n                crewMembers: [],\n                prevJobNumber: undefined,\n                notes: '',\n                officeNotes: '',\n                quote: ''\n            });\n        };\n    }, [success]);\n\n    useEffect(() => {\n        if(getUsers.users) {\n            getUsers.users.forEach(user => {\n                if(user.userType === 'employee') {\n                    employeesArray.push(\n                        {\n                            label: `${user.firstName} ${user.lastName}`,\n                            value: user.userId,\n                            name: 'crewMembers'\n                        }\n                    );\n                } else {\n                    customersArray.push(\n                        {\n                            label: `${user.firstName} ${user.lastName}`,\n                            value: user.userId,\n                            name: 'customer'\n                        }\n                    );\n                };\n            });\n        };\n\n        employeesArray.push({ label: 'General Contractor', value: 'General Contractor' });\n\n        setEmployees(employeesArray);\n        setCustomers(customersArray);\n    }, [getUsers]);\n\n    const toggle = e => {\n        setIsOpen(!isOpen);\n        setErrors({});\n    };\n\n    const handleChange = e => {\n        setWorkOrder({\n            ...workOrder,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSelectChange = e => {\n        setWorkOrder({\n            ...workOrder,\n            [e.name]: e.value\n        });\n    };\n\n    const handleMultiSelectChange = e => {\n        e.forEach(e => {\n            setWorkOrder({\n                ...workOrder,\n                [e.name]: [...workOrder[e.name], e.value]\n            });\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(addWorkOrder(workOrder));\n    };\n\n    return (\n        <div className={hidden ? \"add-work-order-div\": \"\"}>\n            {hidden ? <Button color=\"success\" onClick={toggle}>Create Work Order</Button> : null}\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Create Work Order</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <Label for=\"customer\">Customer</Label>\n                            <Select options={customers} name=\"customer\" onChange={handleSelectChange} invalid={errors.customer ? true : false} />\n                            <FormFeedback>{errors.customer}</FormFeedback>\n                        </FormGroup>\n                        <div className=\"datepicker-div\">\n                            <FormGroup>\n                                <Label for=\"date\">Date</Label>\n                                <Input type=\"date\" name=\"serviceDate\" id=\"serviceDate\" placeholder=\"date placeholder\" onChange={handleChange} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"time\">Time</Label>\n                                <Input type=\"time\" name=\"serviceTime\" id=\"serviceTime\" placeholder=\"time placeholder\" onChange={handleChange} />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"serviceDescription\">Service Description</Label>\n                            <Input type=\"text\" name=\"serviceDescription\" id=\"serviceDescription\" onChange={handleChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"serviceType\">Service Type</Label>\n                            <Select isMulti options={serviceTypes.map(type => ( { label: type, value: type, name: 'serviceType' } ))} name=\"serviceType\" onChange={handleMultiSelectChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"crewMembers\">Crew Members</Label>\n                            <Select isMulti options={employees} name=\"crewMembers\" onChange={handleMultiSelectChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"prevJobNumber\">Previous Job Number</Label>\n                            <Input type=\"text\" name=\"prevJobNumber\" id=\"prevJobNumber\" onChange={handleChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"notes\">Notes</Label>\n                            <Input type=\"textarea\" name=\"notes\" id=\"notes\" onChange={handleChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"officeNotes\">Office Notes</Label>\n                            <Input type=\"textarea\" name=\"officeNotes\" id=\"officeNotes\" onChange={handleChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"quote\">Quote</Label>\n                            <Input type=\"file\" name=\"file\" id=\"file\" onChange={handleChange} />\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" type=\"submit\" onClick={handleSubmit}>Submit</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddWorkOrderBtn;\n\nconst serviceTypes = [\n    \"Install\",\n    \"Service\",\n    \"Training\",\n    \"Inspection\",\n    \"Warranty\"\n];"]},"metadata":{},"sourceType":"module"}