{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddWorkOrderBtn.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, FormFeedback, Label, Input } from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport { addWorkOrder } from '../../actions/addWorkOrder';\nimport '../../styles/sidebar.scss';\n\nconst AddWorkOrderBtn = () => {\n  const [workOrder, setWorkOrder] = useState({\n    customer: '',\n    serviceDate: '',\n    serviceStartTime: '',\n    serviceEndTime: '',\n    serviceDescription: '',\n    serviceType: [],\n    dispatcher: '',\n    serviceManager: '',\n    officeManager: '',\n    crewMembers: [],\n    jobNumber: '',\n    notes: '',\n    officeNotes: '',\n    quote: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector(state => state.addWorkOrderReducer.errors);\n  const getSuccess = useSelector(state => state.addWorkOrderReducer.success);\n  const [employees, setEmployees] = useState([]);\n  const [serviceManagers, setServiceManagers] = useState([]);\n  const [officeManagers, setOfficeManagers] = useState([]);\n  const employeesArray = [];\n  const serviceManagersArray = [];\n  const officeManagersArray = [];\n  const [customers, setCustomers] = useState([]);\n  const customersArray = [];\n  const getUsers = useSelector(state => state.getUsersReducer.users);\n  const [hidden, setHidden] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenCheck, setIsOpenCheck] = useState(false);\n  const [warnings, setWarnings] = useState({});\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    changeHidden(location);\n  }, [location]);\n\n  const changeHidden = location => {\n    if (location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n      setHidden(true);\n    } else {\n      setHidden(false);\n    }\n\n    ;\n  };\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    setErrors(getErrors);\n  }, [getErrors]);\n  useEffect(() => {\n    if (getSuccess === true) {\n      setSuccess(true);\n    }\n\n    ;\n  }, [getSuccess]);\n  useEffect(() => {\n    if (success === true) {\n      setIsOpen(false);\n      setErrors({});\n      setSuccess(false);\n      setWorkOrder({ ...workOrder,\n        customer: '',\n        serviceDate: '',\n        serviceStartTime: '',\n        serviceEndTime: '',\n        serviceDescription: '',\n        serviceType: [],\n        dispatch: '',\n        crewMembers: [],\n        jobNumber: '',\n        notes: '',\n        officeNotes: '',\n        quote: ''\n      });\n    }\n\n    ;\n  }, [success, workOrder]);\n  useEffect(() => {\n    if (getUsers.users) {\n      getUsers.users.forEach(user => {\n        if (user.userType === 'employee' && user.active) {\n          employeesArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: 'crewMembers',\n            jobTitle: user.jobTitle\n          });\n        } else {\n          customersArray.push({\n            label: user.businessName,\n            value: user.userId,\n            name: 'customer'\n          });\n        }\n\n        ;\n      });\n    }\n\n    ;\n    employeesArray.push({\n      label: 'General Contractor',\n      value: 'General Contractor'\n    });\n    setEmployees(employeesArray);\n    setCustomers(customersArray);\n    let serviceManagerId = '';\n    let officeManagerId = '';\n    employeesArray.forEach(employee => {\n      if (employee.jobTitle === 'Service Manager') {\n        employee.name = 'serviceManager';\n        serviceManagersArray.push(employee);\n\n        if (employee.value === 'uXwUIQNHljckMtq4AR57zMBExhd2') {\n          serviceManagerId = employee.value;\n        }\n\n        ;\n      } else if (employee.jobTitle === 'Office Manager') {\n        employee.name = 'officeManager';\n        officeManagersArray.push(employee);\n\n        if (employee.value === 'P8NOWpsqBTV8OrO5ICZSYAdPrx22') {\n          officeManagerId = employee.value;\n        }\n\n        ;\n      }\n\n      ;\n    });\n    setServiceManagers(serviceManagersArray);\n    setOfficeManagers(officeManagersArray);\n    setWorkOrder({ ...workOrder,\n      serviceManager: serviceManagerId,\n      officeManager: officeManagerId\n    });\n  }, [getUsers]);\n\n  const toggle = e => {\n    setIsOpen(!isOpen);\n    setErrors({});\n    setWarnings({});\n\n    if (!isOpen) {\n      setWorkOrder({ ...workOrder,\n        customer: '',\n        serviceDate: '',\n        serviceStartTime: '',\n        serviceEndTime: '',\n        serviceDescription: '',\n        serviceType: [],\n        dispatcher: '',\n        crewMembers: [],\n        jobNumber: '',\n        notes: '',\n        officeNotes: '',\n        quote: ''\n      });\n    }\n\n    ;\n  };\n\n  const toggleCheck = e => {\n    if (isOpenCheck) {\n      setWarnings({});\n    }\n\n    ;\n    setIsOpenCheck(!isOpenCheck);\n  };\n\n  const handleChange = e => {\n    setWorkOrder({ ...workOrder,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = e => {\n    setWorkOrder({ ...workOrder,\n      [e.name]: e.value\n    });\n  };\n\n  const handleServiceTypeChange = e => {};\n\n  const handleCrewMembersChange = e => {\n    setWorkOrder({ ...workOrder,\n      crewMembers: e.forEach(e => e.value)\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const valid = warningCheck();\n\n    if (valid) {\n      dispatch(addWorkOrder(workOrder));\n    } else {\n      toggleCheck();\n    }\n\n    ;\n  };\n\n  const warningCheck = e => {\n    let warningsObject = {};\n\n    if (workOrder.serviceEndTime.trim() === '') {\n      warningsObject.serviceEndTime = 'End Time';\n    }\n\n    if (workOrder.jobNumber.trim() === '') {\n      warningsObject.jobNumber = 'Job Number';\n    }\n\n    ;\n\n    if (workOrder.notes.trim() === '') {\n      warningsObject.notes = 'Notes';\n    }\n\n    ;\n\n    if (workOrder.officeNotes.trim() === '') {\n      warningsObject.officeNotes = 'Office Notes';\n    }\n\n    ;\n\n    if (workOrder.quote.trim() === '') {\n      warningsObject.quote = 'Quote';\n    }\n\n    ;\n\n    if (Object.keys(warningsObject).length === 0) {\n      return true;\n    } else {\n      setWarnings(warningsObject);\n      return false;\n    }\n\n    ;\n  };\n\n  const handleSubmitCheck = e => {\n    e.preventDefault();\n    setWarnings({});\n    dispatch(addWorkOrder(workOrder));\n    toggleCheck();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: hidden ? \"add-work-order-div\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, hidden ? /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 23\n    }\n  }, \"Create Work Order\") : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, \"Create Work Order\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(Select, {\n    options: customers,\n    name: \"customer\",\n    onChange: handleSelectChange,\n    className: errors.customer ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.customer ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }, errors.customer)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 29\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"serviceDate\",\n    id: \"serviceDate\",\n    placeholder: \"date placeholder\",\n    onChange: handleChange,\n    invalid: errors.serviceDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }, errors.serviceDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"startTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 33\n    }\n  }, \"Start Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"serviceStartTime\",\n    id: \"serviceStartTime\",\n    placeholder: \"time placeholder\",\n    onChange: handleChange,\n    invalid: errors.serviceStartTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 33\n    }\n  }, errors.serviceStartTime)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"endTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  }, \"End Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"serviceEndTime\",\n    id: \"serviceEndTime\",\n    placeholder: \"time placeholder\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 29\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"serviceDescription\",\n    id: \"serviceDescription\",\n    onChange: handleChange,\n    invalid: errors.serviceDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, errors.serviceDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, \"Service Type\"), /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    options: serviceTypes.map(type => ({\n      label: type,\n      value: type,\n      name: 'serviceType'\n    })),\n    name: \"serviceType\",\n    onChange: handleServiceTypeChange,\n    className: errors.serviceType ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.serviceType ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }, errors.serviceType)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"manager-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceManager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 33\n    }\n  }, \"Service Manager\"), /*#__PURE__*/React.createElement(Select, {\n    options: serviceManagers,\n    defaultValue: serviceManagers[0],\n    name: \"serviceManager\",\n    onChange: handleSelectChange,\n    className: errors.serviceManager ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.serviceManager ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 33\n    }\n  }, errors.serviceManager)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"officeManager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }, \"Billing Manager\"), /*#__PURE__*/React.createElement(Select, {\n    options: officeManagers,\n    defaultValue: officeManagers[0],\n    name: \"officeManager\",\n    onChange: handleSelectChange,\n    className: errors.officeManager ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.officeManager ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }, errors.officeManager))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"crewMembers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 29\n    }\n  }, \"Crew Members\"), /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    options: employees,\n    name: \"crewMembers\",\n    onChange: handleCrewMembersChange,\n    className: errors.crewMembers ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.crewMembers ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 29\n    }\n  }, errors.crewMembers)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"prevJobNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 29\n    }\n  }, \"Job Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"jobNumber\",\n    id: \"jobNumber\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 29\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"notes\",\n    id: \"notes\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"officeNotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 29\n    }\n  }, \"Office Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"officeNotes\",\n    id: \"officeNotes\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 29\n    }\n  }, \"Quote\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    name: \"file\",\n    id: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 21\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenCheck,\n    toggle: toggleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }, \"Warning\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  }, \"The following fields were left blank:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 21\n    }\n  }, warnings ? Object.values(warnings).map(warning => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 29\n    }\n  }, warning)) : null), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 21\n    }\n  }, \"Are you sure you want to continue?\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    onClick: handleSubmitCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }, \"YES\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: toggleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 21\n    }\n  }, \"NO\"))));\n};\n\nexport default AddWorkOrderBtn;\nconst serviceTypes = [\"Install\", \"Service\", \"Training\", \"Inspection\", \"Warranty\"];","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddWorkOrderBtn.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","FormFeedback","Label","Input","Select","useLocation","addWorkOrder","AddWorkOrderBtn","workOrder","setWorkOrder","customer","serviceDate","serviceStartTime","serviceEndTime","serviceDescription","serviceType","dispatcher","serviceManager","officeManager","crewMembers","jobNumber","notes","officeNotes","quote","errors","setErrors","success","setSuccess","getErrors","state","addWorkOrderReducer","getSuccess","employees","setEmployees","serviceManagers","setServiceManagers","officeManagers","setOfficeManagers","employeesArray","serviceManagersArray","officeManagersArray","customers","setCustomers","customersArray","getUsers","getUsersReducer","users","hidden","setHidden","isOpen","setIsOpen","isOpenCheck","setIsOpenCheck","warnings","setWarnings","dispatch","location","changeHidden","pathname","isFirstRun","current","forEach","user","userType","active","push","label","firstName","lastName","value","userId","name","jobTitle","businessName","serviceManagerId","officeManagerId","employee","toggle","e","toggleCheck","handleChange","target","handleSelectChange","handleServiceTypeChange","handleCrewMembersChange","handleSubmit","preventDefault","valid","warningCheck","warningsObject","trim","Object","keys","length","handleSubmitCheck","serviceTypes","map","type","values","warning"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    FormFeedback,\n    Label,\n    Input,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport { addWorkOrder } from '../../actions/addWorkOrder';\n\nimport '../../styles/sidebar.scss';\n\nconst AddWorkOrderBtn = () => {\n    const [workOrder, setWorkOrder] = useState({\n        customer: '',\n        serviceDate: '',\n        serviceStartTime: '',\n        serviceEndTime: '',\n        serviceDescription: '',\n        serviceType: [],\n        dispatcher: '',\n        serviceManager: '',\n        officeManager: '',\n        crewMembers: [],\n        jobNumber: '',\n        notes: '',\n        officeNotes: '',\n        quote: ''\n    });\n    const [errors, setErrors] = useState({});\n    const [success, setSuccess] = useState(false);\n    const getErrors = useSelector(state => state.addWorkOrderReducer.errors);\n    const getSuccess = useSelector(state => state.addWorkOrderReducer.success);\n    const [employees, setEmployees] = useState([]);\n    const [serviceManagers, setServiceManagers] = useState([]);\n    const [officeManagers, setOfficeManagers] = useState([]);\n    const employeesArray = [];\n    const serviceManagersArray = [];\n    const officeManagersArray = [];\n    const [customers, setCustomers] = useState([]);\n    const customersArray = [];\n    const getUsers = useSelector(state => state.getUsersReducer.users); \n    const [hidden, setHidden] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [isOpenCheck, setIsOpenCheck] = useState(false);\n    const [warnings, setWarnings] = useState({});\n    const dispatch = useDispatch();\n    const location = useLocation();\n    \n    useEffect(() => {\n        changeHidden(location);\n    }, [location]);\n    \n    const changeHidden = location => {\n        if(location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n            setHidden(true);\n        } else {\n            setHidden(false);\n        };\n    };\n\n    const isFirstRun = useRef(true);\n    useEffect(() => {\n        if(isFirstRun.current) {\n            isFirstRun.current = false;\n            return;\n        }\n        setErrors(getErrors);\n    }, [getErrors]);\n\n    useEffect(() => {\n        if(getSuccess === true) {\n            setSuccess(true);\n        };\n    }, [getSuccess]);\n\n    useEffect(() => {\n        if(success === true) {\n            setIsOpen(false);\n            setErrors({})\n            setSuccess(false);\n            setWorkOrder({\n                ...workOrder,\n                customer: '',\n                serviceDate: '',\n                serviceStartTime: '',\n                serviceEndTime: '',\n                serviceDescription: '',\n                serviceType: [],\n                dispatch: '',\n                crewMembers: [],\n                jobNumber: '',\n                notes: '',\n                officeNotes: '',\n                quote: ''\n            });\n        };\n    }, [success, workOrder]);\n\n    useEffect(() => {\n        if(getUsers.users) {\n            getUsers.users.forEach(user => {\n                if(user.userType === 'employee' && user.active) {\n                    employeesArray.push(\n                        {\n                            label: `${user.firstName} ${user.lastName}`,\n                            value: user.userId,\n                            name: 'crewMembers',\n                            jobTitle: user.jobTitle\n                        }\n                    );\n                } else {\n                    customersArray.push(\n                        {\n                            label: user.businessName,\n                            value: user.userId,\n                            name: 'customer'\n                        }\n                    );\n                };\n            });\n        };\n\n        employeesArray.push({ label: 'General Contractor', value: 'General Contractor' });\n\n        setEmployees(employeesArray);\n        setCustomers(customersArray);\n\n        let serviceManagerId = '';\n        let officeManagerId = '';\n\n        employeesArray.forEach(employee => {\n            if(employee.jobTitle === 'Service Manager') {\n                employee.name = 'serviceManager';\n                serviceManagersArray.push(employee);\n                if(employee.value === 'uXwUIQNHljckMtq4AR57zMBExhd2') {\n                    serviceManagerId = employee.value;\n                };\n            } else if(employee.jobTitle === 'Office Manager') {\n                employee.name = 'officeManager';\n                officeManagersArray.push(employee);\n                if(employee.value === 'P8NOWpsqBTV8OrO5ICZSYAdPrx22') {\n                    officeManagerId = employee.value;\n                };\n            };\n        });\n\n        setServiceManagers(serviceManagersArray);\n        setOfficeManagers(officeManagersArray);\n\n        setWorkOrder({\n            ...workOrder,\n            serviceManager: serviceManagerId,\n            officeManager: officeManagerId\n        });\n    }, [getUsers]);\n\n    const toggle = e => {\n        setIsOpen(!isOpen);\n        setErrors({});\n        setWarnings({});\n\n        if(!isOpen) {\n            setWorkOrder({\n                ...workOrder,\n                customer: '',\n                serviceDate: '',\n                serviceStartTime: '',\n                serviceEndTime: '',\n                serviceDescription: '',\n                serviceType: [],\n                dispatcher: '',\n                crewMembers: [],\n                jobNumber: '',\n                notes: '',\n                officeNotes: '',\n                quote: ''\n            });\n        };\n    };\n\n    const toggleCheck = e => {\n        if(isOpenCheck) {\n            setWarnings({});\n        };\n        setIsOpenCheck(!isOpenCheck);  \n    };\n\n    const handleChange = e => {\n        setWorkOrder({\n            ...workOrder,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSelectChange = e => {\n        setWorkOrder({\n            ...workOrder,\n            [e.name]: e.value\n        });\n    };\n\n    const handleServiceTypeChange = e => {\n\n    };\n\n    const handleCrewMembersChange = e => {\n        setWorkOrder({\n            ...workOrder,\n            crewMembers: e.forEach(e => e.value)\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const valid = warningCheck();\n\n        if(valid) {\n            dispatch(addWorkOrder(workOrder));\n        } else {\n            toggleCheck();\n        };\n    };\n\n    const warningCheck = e => {\n        let warningsObject = {};\n\n        if(workOrder.serviceEndTime.trim() === '') {\n            warningsObject.serviceEndTime = 'End Time'\n        }\n        if(workOrder.jobNumber.trim() === '') {\n            warningsObject.jobNumber = 'Job Number';\n        };\n        if(workOrder.notes.trim() === '') {\n            warningsObject.notes = 'Notes';\n        };\n        if(workOrder.officeNotes.trim() === '') {\n            warningsObject.officeNotes = 'Office Notes';\n        };\n        if(workOrder.quote.trim() === '') {\n            warningsObject.quote = 'Quote';\n        };\n\n        if(Object.keys(warningsObject).length === 0) {\n            return true;\n        } else {\n            setWarnings(warningsObject);\n            return false;\n        };\n    };\n\n    const handleSubmitCheck = e => {\n        e.preventDefault();\n        setWarnings({});\n        dispatch(addWorkOrder(workOrder));\n        toggleCheck();\n    };\n\n    return (\n        <div className={hidden ? \"add-work-order-div\": \"\"}>\n            {hidden ? <Button color=\"success\" onClick={toggle}>Create Work Order</Button> : null}\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Create Work Order</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <Label for=\"customer\">Customer</Label>\n                            <Select options={customers} name=\"customer\" onChange={handleSelectChange} className={errors.customer ? 'invalid' : ''} />\n                            <Input type=\"hidden\" disabled invalid={errors.customer ? true : false} />\n                            <FormFeedback>{errors.customer}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"date\">Date</Label>\n                            <Input type=\"date\" name=\"serviceDate\" id=\"serviceDate\" placeholder=\"date placeholder\" onChange={handleChange} invalid={errors.serviceDate ? true : false} />\n                            <FormFeedback>{errors.serviceDate}</FormFeedback>\n                        </FormGroup>\n                        <div className=\"time-div\">\n                            <FormGroup>\n                                <Label for=\"startTime\">Start Time</Label>\n                                <Input type=\"time\" name=\"serviceStartTime\" id=\"serviceStartTime\" placeholder=\"time placeholder\" onChange={handleChange} invalid={errors.serviceStartTime ? true : false} />\n                                <FormFeedback>{errors.serviceStartTime}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"endTime\">End Time</Label>\n                                <Input type=\"time\" name=\"serviceEndTime\" id=\"serviceEndTime\" placeholder=\"time placeholder\" onChange={handleChange} />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"serviceDescription\">Service Description</Label>\n                            <Input type=\"textarea\" name=\"serviceDescription\" id=\"serviceDescription\" onChange={handleChange} invalid={errors.serviceDescription ? true : false} />\n                            <FormFeedback>{errors.serviceDescription}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"serviceType\">Service Type</Label>\n                            <Select isMulti options={serviceTypes.map(type => ( { label: type, value: type, name: 'serviceType' } ))} name=\"serviceType\" onChange={handleServiceTypeChange} className={errors.serviceType ? 'invalid' : ''} />\n                            <Input type=\"hidden\" disabled invalid={errors.serviceType ? true : false} />\n                            <FormFeedback>{errors.serviceType}</FormFeedback>\n                        </FormGroup>\n                        <div className=\"manager-div\">\n                            <FormGroup>\n                                <Label for=\"serviceManager\">Service Manager</Label>\n                                <Select options={serviceManagers} defaultValue={serviceManagers[0]} name=\"serviceManager\" onChange={handleSelectChange} className={errors.serviceManager ? 'invalid' : ''} />\n                                <Input type=\"hidden\" disabled invalid={errors.serviceManager ? true : false} />\n                                <FormFeedback>{errors.serviceManager}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"officeManager\">Billing Manager</Label>\n                                <Select options={officeManagers} defaultValue={officeManagers[0]} name=\"officeManager\" onChange={handleSelectChange} className={errors.officeManager ? 'invalid' : ''} />\n                                <Input type=\"hidden\" disabled invalid={errors.officeManager ? true : false} />\n                                <FormFeedback>{errors.officeManager}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"crewMembers\">Crew Members</Label>\n                            <Select isMulti options={employees} name=\"crewMembers\" onChange={handleCrewMembersChange} className={errors.crewMembers ? 'invalid': ''} />\n                            <Input type=\"hidden\" disabled invalid={errors.crewMembers ? true : false} />\n                            <FormFeedback>{errors.crewMembers}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"prevJobNumber\">Job Number</Label>\n                            <Input type=\"text\" name=\"jobNumber\" id=\"jobNumber\" onChange={handleChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"notes\">Notes</Label>\n                            <Input type=\"textarea\" name=\"notes\" id=\"notes\" onChange={handleChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"officeNotes\">Office Notes</Label>\n                            <Input type=\"textarea\" name=\"officeNotes\" id=\"officeNotes\" onChange={handleChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"quote\">Quote</Label>\n                            <Input type=\"file\" name=\"file\" id=\"file\" onChange={handleChange} />\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" type=\"submit\" onClick={handleSubmit}>Submit</Button>\n                </ModalFooter>\n            </Modal>\n            <Modal isOpen={isOpenCheck} toggle={toggleCheck}>\n                <ModalHeader toggle={toggleCheck}>Warning</ModalHeader>\n                <ModalBody>\n                    <span>The following fields were left blank:</span>\n                    <ul>\n                        {warnings ? Object.values(warnings).map(warning => (\n                            <li>{warning}</li>\n                        )) : null}\n                    </ul>\n                    <span>Are you sure you want to continue?</span>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" type=\"submit\" onClick={handleSubmitCheck}>YES</Button>\n                    <Button color=\"danger\" onClick={toggleCheck}>NO</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddWorkOrderBtn;\n\nconst serviceTypes = [\n    \"Install\",\n    \"Service\",\n    \"Training\",\n    \"Inspection\",\n    \"Warranty\"\n];"]},"metadata":{},"sourceType":"module"}