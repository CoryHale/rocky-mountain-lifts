{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/customer-page-components/EmployeeTab.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormFeedback } from \"reactstrap\"; // import { getCustomer } from \"../../actions/getCustomer\";\n// import { addEmployeeToCustomer } from \"../../actions/addEmployeeToCustomer\";\n// import \"../../styles/employee-dashboard.scss\";\n\nconst EmployeeTab = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n  const [isOpen, setIsOpen] = useState(false);\n  const [employee, setEmployee] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    jobTitle: \"\",\n    officeNumber: \"\",\n    officeExt: \"\",\n    cellNumber: \"\",\n    email: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [flag, setFlag] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1]; // dispatch(getCustomer(customerId));\n  }, []);\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n    }\n  }, [getCustomerFromState]);\n  useEffect(() => {\n    if (flag) {\n      setFlag(false); //   dispatch(addEmployeeToCustomer(customer));\n\n      toggle();\n    }\n  }, [flag]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        officeNumber: \"\",\n        officeExt: \"\",\n        cellNumber: \"\",\n        email: \"\"\n      });\n      setErrors({});\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = e => {\n    setEmployee({ ...employee,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errorsObject = {};\n\n    if (employee.firstName === \"\") {\n      errorsObject.firstName = \"Must not be empty\";\n    }\n\n    if (employee.lastName === \"\") {\n      errorsObject.lastName = \"Must not be empty\";\n    }\n\n    if (employee.jobTitle === \"\") {\n      errorsObject.jobTitle = \"Must not be empty\";\n    }\n\n    if (employee.officeNumber === \"\" && employee.cellNumber === \"\") {\n      errorsObject.officeNumber = \"Must not be empty\";\n      errorsObject.cellNumber = \"Must not be empty\";\n    } else if (employee.officeNumber !== \"\" && !employee.officeNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n      errorsObject.officeNumber = \"Must be a valid phone number\";\n    } else if (employee.cellNumber !== \"\" && !employee.cellNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n      errorsObject.cellNumber = \"Must be a valid phone number\";\n    }\n\n    if (employee.email === \"\") {\n      errorsObject.email = \"Must not be empty\";\n    } else if (!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n      errorsObject.email = \"Must be a valid email address\";\n    }\n\n    setErrors(errorsObject);\n\n    if (Object.keys(errorsObject).length === 0) {\n      if (customer.employees.length === 0) {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [employee]\n        });\n      } else {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [...customer.employees, employee]\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"employees-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"sm\",\n    hover: true,\n    className: \"customer-page-employees-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Office Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Cell Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Email\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, customer.primaryContact ? customer.primaryContact.firstName : null, \" \", customer.primaryContact ? customer.primaryContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, customer.primaryJobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: customer.primaryExt ? `tel:+1-${customer.primaryOfficeNumber},${customer.primaryExt}` : `tel:+1-${customer.primaryOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, customer.primaryExt ? `${customer.primaryOfficeNumber} ext. ${customer.primaryExt}` : `${customer.primaryOfficeNumber}`)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, customer.primaryCellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.primaryEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, customer.primaryEmail))), customer.billingJobTitle !== \"\" ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, customer.billingContact ? customer.billingContact.firstName : null, \" \", customer.billingContact ? customer.billingContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, customer.billingJobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: customer.billingExt ? `tel:+1-${customer.billingOfficeNumber},${customer.billingExt}` : `tel:+1-${customer.billingOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, customer.billingExt ? `${customer.billingOfficeNumber} ext. ${customer.billingExt}` : `${customer.billingOfficeNumber}`)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, customer.billingCellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.billingEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, customer.billingEmail))) : null, customer.employees ? customer.employees.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, employee.firstName, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, employee.jobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: employee.officeExt ? `tel:+1-${employee.officeNumber},${employee.officeExt}` : `tel:+1-${employee.officeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, employee.officeExt ? `${employee.officeNumber} ext. ${employee.officeExt}` : `${employee.officeNumber}`)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.cellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, employee.cellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${employee.email}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, employee.email)))) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, \"Add Employee\")), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, \"Add Employee\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-name-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeFirstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handleChange,\n    invalid: errors.firstName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, errors.firstName)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeLastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handleChange,\n    invalid: errors.lastName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, errors.lastName))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeJobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"jobTitle\",\n    onChange: handleChange,\n    invalid: errors.jobTitle ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, errors.jobTitle)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"employee-phone-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"employee-office-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeOfficeNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }\n  }, \"Office Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"officeNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    invalid: errors.officeNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, errors.officeNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"employee-office-ext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeOfficeExt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, \"ext.\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"officeExt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeCellNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, \"Cell Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"cellNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    invalid: errors.cellNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, errors.cellNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"example@example.com\",\n    onChange: handleChange,\n    invalid: errors.email ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 15\n    }\n  }, errors.email)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default EmployeeTab;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/customer-page-components/EmployeeTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useLocation","Table","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","EmployeeTab","customer","setCustomer","getCustomerFromState","state","getCustomerReducer","isOpen","setIsOpen","employee","setEmployee","firstName","lastName","jobTitle","officeNumber","officeExt","cellNumber","email","errors","setErrors","flag","setFlag","dispatch","location","pathArray","pathname","split","customerId","length","toggle","handleChange","e","target","name","value","handleSubmit","preventDefault","errorsObject","match","Object","keys","employees","primaryContact","primaryJobTitle","primaryExt","primaryOfficeNumber","primaryCellNumber","primaryEmail","billingJobTitle","billingContact","billingExt","billingOfficeNumber","billingCellNumber","billingEmail","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\n// import { getCustomer } from \"../../actions/getCustomer\";\n// import { addEmployeeToCustomer } from \"../../actions/addEmployeeToCustomer\";\n\n// import \"../../styles/employee-dashboard.scss\";\n\nconst EmployeeTab = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(\n    (state) => state.getCustomerReducer.customer\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [employee, setEmployee] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    jobTitle: \"\",\n    officeNumber: \"\",\n    officeExt: \"\",\n    cellNumber: \"\",\n    email: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [flag, setFlag] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    // dispatch(getCustomer(customerId));\n  }, []);\n\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n    }\n  }, [getCustomerFromState]);\n\n  useEffect(() => {\n    if (flag) {\n      setFlag(false);\n    //   dispatch(addEmployeeToCustomer(customer));\n      toggle();\n    }\n  }, [flag]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        officeNumber: \"\",\n        officeExt: \"\",\n        cellNumber: \"\",\n        email: \"\",\n      });\n      setErrors({});\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = (e) => {\n    setEmployee({\n      ...employee,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let errorsObject = {};\n\n    if (employee.firstName === \"\") {\n      errorsObject.firstName = \"Must not be empty\";\n    }\n    if (employee.lastName === \"\") {\n      errorsObject.lastName = \"Must not be empty\";\n    }\n    if (employee.jobTitle === \"\") {\n      errorsObject.jobTitle = \"Must not be empty\";\n    }\n    if (employee.officeNumber === \"\" && employee.cellNumber === \"\") {\n      errorsObject.officeNumber = \"Must not be empty\";\n      errorsObject.cellNumber = \"Must not be empty\";\n    } else if (\n      employee.officeNumber !== \"\" &&\n      !employee.officeNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)\n    ) {\n      errorsObject.officeNumber = \"Must be a valid phone number\";\n    } else if (\n      employee.cellNumber !== \"\" &&\n      !employee.cellNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)\n    ) {\n      errorsObject.cellNumber = \"Must be a valid phone number\";\n    }\n    if (employee.email === \"\") {\n      errorsObject.email = \"Must not be empty\";\n    } else if (\n      !employee.email.match(\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      )\n    ) {\n      errorsObject.email = \"Must be a valid email address\";\n    }\n\n    setErrors(errorsObject);\n\n    if (Object.keys(errorsObject).length === 0) {\n      if (customer.employees.length === 0) {\n        setFlag(true);\n        setCustomer({\n          ...customer,\n          employees: [employee],\n        });\n      } else {\n        setFlag(true);\n        setCustomer({\n          ...customer,\n          employees: [...customer.employees, employee],\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"employees-tab\">\n      <Table size=\"sm\" hover className=\"customer-page-employees-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Job Title</th>\n            <th>Office Number</th>\n            <th>Cell Number</th>\n            <th>Email</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              {customer.primaryContact\n                ? customer.primaryContact.firstName\n                : null}{\" \"}\n              {customer.primaryContact\n                ? customer.primaryContact.lastName\n                : null}\n            </td>\n            <td>{customer.primaryJobTitle}</td>\n            <td>\n              <a\n                href={\n                  customer.primaryExt\n                    ? `tel:+1-${customer.primaryOfficeNumber},${customer.primaryExt}`\n                    : `tel:+1-${customer.primaryOfficeNumber}`\n                }\n              >\n                {customer.primaryExt\n                  ? `${customer.primaryOfficeNumber} ext. ${customer.primaryExt}`\n                  : `${customer.primaryOfficeNumber}`}\n              </a>\n            </td>\n            <td>\n              <a href={`tel:+1-${customer.primaryCellNumber}`}>\n                {customer.primaryCellNumber}\n              </a>\n            </td>\n            <td>\n              <a href={`mailto:${customer.primaryEmail}`}>\n                {customer.primaryEmail}\n              </a>\n            </td>\n          </tr>\n          {customer.billingJobTitle !== \"\" ? (\n            <tr>\n              <td>\n                {customer.billingContact\n                  ? customer.billingContact.firstName\n                  : null}{\" \"}\n                {customer.billingContact\n                  ? customer.billingContact.lastName\n                  : null}\n              </td>\n              <td>{customer.billingJobTitle}</td>\n              <td>\n                <a\n                  href={\n                    customer.billingExt\n                      ? `tel:+1-${customer.billingOfficeNumber},${customer.billingExt}`\n                      : `tel:+1-${customer.billingOfficeNumber}`\n                  }\n                >\n                  {customer.billingExt\n                    ? `${customer.billingOfficeNumber} ext. ${customer.billingExt}`\n                    : `${customer.billingOfficeNumber}`}\n                </a>\n              </td>\n              <td>\n                <a href={`tel:+1-${customer.billingCellNumber}`}>\n                  {customer.billingCellNumber}\n                </a>\n              </td>\n              <td>\n                <a href={`mailto:${customer.billingEmail}`}>\n                  {customer.billingEmail}\n                </a>\n              </td>\n            </tr>\n          ) : null}\n          {customer.employees\n            ? customer.employees.map((employee) => (\n                <tr>\n                  <td>\n                    {employee.firstName} {employee.lastName}\n                  </td>\n                  <td>{employee.jobTitle}</td>\n                  <td>\n                    <a\n                      href={\n                        employee.officeExt\n                          ? `tel:+1-${employee.officeNumber},${employee.officeExt}`\n                          : `tel:+1-${employee.officeNumber}`\n                      }\n                    >\n                      {employee.officeExt\n                        ? `${employee.officeNumber} ext. ${employee.officeExt}`\n                        : `${employee.officeNumber}`}\n                    </a>\n                  </td>\n                  <td>\n                    <a href={`tel:+1-${employee.cellNumber}`}>\n                      {employee.cellNumber}\n                    </a>\n                  </td>\n                  <td>\n                    <a href={`mailto:${employee.email}`}>{employee.email}</a>\n                  </td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n      <div className=\"add-employee-div\">\n        <Button outline color=\"success\" onClick={toggle}>\n          Add Employee\n        </Button>\n      </div>\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Employee</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <div className=\"add-employee-name-div\">\n              <FormGroup>\n                <Label for=\"employeeFirstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={handleChange}\n                  invalid={errors.firstName ? true : false}\n                />\n                <FormFeedback>{errors.firstName}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"employeeLastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  onChange={handleChange}\n                  invalid={errors.lastName ? true : false}\n                />\n                <FormFeedback>{errors.lastName}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"employeeJobTitle\">Job Title</Label>\n              <Input\n                type=\"text\"\n                name=\"jobTitle\"\n                onChange={handleChange}\n                invalid={errors.jobTitle ? true : false}\n              />\n              <FormFeedback>{errors.jobTitle}</FormFeedback>\n            </FormGroup>\n            <div className=\"employee-phone-div\">\n              <FormGroup className=\"employee-office-number\">\n                <Label for=\"employeeOfficeNumber\">Office Phone Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"officeNumber\"\n                  placeholder=\"XXX-XXX-XXXX\"\n                  onChange={handleChange}\n                  invalid={errors.officeNumber ? true : false}\n                />\n                <FormFeedback>{errors.officeNumber}</FormFeedback>\n              </FormGroup>\n              <FormGroup className=\"employee-office-ext\">\n                <Label for=\"employeeOfficeExt\">ext.</Label>\n                <Input type=\"text\" name=\"officeExt\" onChange={handleChange} />\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"employeeCellNumber\">Cell Phone Number</Label>\n              <Input\n                type=\"text\"\n                name=\"cellNumber\"\n                placeholder=\"XXX-XXX-XXXX\"\n                onChange={handleChange}\n                invalid={errors.cellNumber ? true : false}\n              />\n              <FormFeedback>{errors.cellNumber}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"employeeEmail\">Email</Label>\n              <Input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"example@example.com\"\n                onChange={handleChange}\n                invalid={errors.email ? true : false}\n              />\n              <FormFeedback>{errors.email}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EmployeeTab;\n"]},"metadata":{},"sourceType":"module"}