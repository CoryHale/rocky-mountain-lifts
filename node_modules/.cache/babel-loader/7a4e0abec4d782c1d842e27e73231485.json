{"ast":null,"code":"import axiosWithAuth from \"../components/Login/withAuth\";\nimport { dbUrl } from \"./index\";\nexport const ADD_WORK_ORDER_START = \"ADD_WORK_ORDER_START\";\nexport const ADD_WORK_ORDER_SUCCESS = \"ADD_WORK_ORDER_SUCCESS\";\nexport const ADD_WORK_ORDER_FAILURE = \"ADD_WORK_ORDER_FAILURE\";\nexport const addWorkOrder = workOrder => async dispatch => {\n  dispatch({\n    type: ADD_WORK_ORDER_START\n  });\n  return await axiosWithAuth().post(`${dbUrl}/work_orders`, workOrder).then(() => {\n    dispatch({\n      type: ADD_WORK_ORDER_SUCCESS,\n      payload: \"SUCCESS\"\n    });\n  }).catch(err => {\n    dispatch({\n      type: ADD_WORK_ORDER_FAILURE,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/actions/addWorkOrder.js"],"names":["axiosWithAuth","dbUrl","ADD_WORK_ORDER_START","ADD_WORK_ORDER_SUCCESS","ADD_WORK_ORDER_FAILURE","addWorkOrder","workOrder","dispatch","type","post","then","payload","catch","err","response","data"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,8BAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMC,YAAY,GAAIC,SAAD,IAAe,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AAEA,SAAO,MAAMF,aAAa,GACvBS,IADU,CACJ,GAAER,KAAM,cADJ,EACmBK,SADnB,EAEVI,IAFU,CAEL,MAAM;AACVH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,sBADC;AAEPQ,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPU,EAQVC,KARU,CAQHC,GAAD,IAAS;AACdN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,sBADC;AAEPO,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID,GAbU,CAAb;AAcD,CAjBM","sourcesContent":["import axiosWithAuth from \"../components/Login/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const ADD_WORK_ORDER_START = \"ADD_WORK_ORDER_START\";\nexport const ADD_WORK_ORDER_SUCCESS = \"ADD_WORK_ORDER_SUCCESS\";\nexport const ADD_WORK_ORDER_FAILURE = \"ADD_WORK_ORDER_FAILURE\";\n\nexport const addWorkOrder = (workOrder) => async (dispatch) => {\n  dispatch({ type: ADD_WORK_ORDER_START });\n\n  return await axiosWithAuth()\n    .post(`${dbUrl}/work_orders`, workOrder)\n    .then(() => {\n      dispatch({\n        type: ADD_WORK_ORDER_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ADD_WORK_ORDER_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}