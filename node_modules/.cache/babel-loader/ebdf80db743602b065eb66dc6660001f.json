{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts/src/components/sidebar-components/AddWorkOrderBtn.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { addWorkOrder } from \"../../actions/addWorkOrder\";\nimport \"../../styles/sidebar.scss\";\n\nconst AddWorkOrderBtn = () => {\n  const [workOrder, setWorkOrder] = useState({\n    customer: \"\",\n    serviceDate: \"\",\n    serviceStartTime: \"\",\n    serviceEndTime: \"\",\n    serviceDescription: \"\",\n    serviceType: [],\n    dispatcher: \"\",\n    serviceManager: \"\",\n    officeManager: \"\",\n    crewMembers: [],\n    jobNumber: \"\",\n    notes: \"\",\n    officeNotes: \"\",\n    quote: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector(state => state.addWorkOrderReducer.errors);\n  const getSuccess = useSelector(state => state.addWorkOrderReducer.success);\n  const [employees, setEmployees] = useState([]);\n  const [serviceManagers, setServiceManagers] = useState([]);\n  const [officeManagers, setOfficeManagers] = useState([]);\n  const employeesArray = [];\n  const serviceManagersArray = [];\n  const officeManagersArray = [];\n  const [customers, setCustomers] = useState([]);\n  const customersArray = [];\n  const getUsers = useSelector(state => state.getUsersReducer.users);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenCheck, setIsOpenCheck] = useState(false);\n  const [warnings, setWarnings] = useState({});\n  const dispatch = useDispatch();\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    setErrors(getErrors);\n  }, [getErrors]);\n  useEffect(() => {\n    if (getSuccess === true) {\n      setSuccess(true);\n    }\n  }, [getSuccess]);\n  useEffect(() => {\n    if (success === true) {\n      setIsOpen(false);\n      setErrors({});\n      setSuccess(false);\n      setWorkOrder({ ...workOrder,\n        customer: \"\",\n        serviceDate: \"\",\n        serviceStartTime: \"\",\n        serviceEndTime: \"\",\n        serviceDescription: \"\",\n        serviceType: [],\n        dispatch: \"\",\n        crewMembers: [],\n        jobNumber: \"\",\n        notes: \"\",\n        officeNotes: \"\",\n        quote: \"\"\n      });\n    }\n  }, [success, workOrder]);\n  useEffect(() => {\n    if (getUsers.users) {\n      getUsers.users.forEach(user => {\n        if (user.userType === \"employee\" && user.active) {\n          employeesArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: \"crewMembers\",\n            jobTitle: user.jobTitle\n          });\n        } else {\n          customersArray.push({\n            label: user.businessName,\n            value: user.userId,\n            name: \"customer\"\n          });\n        }\n      });\n    }\n\n    employeesArray.push({\n      label: \"General Contractor\",\n      value: \"General Contractor\"\n    });\n    setEmployees(employeesArray);\n    setCustomers(customersArray);\n    let serviceManagerId = \"\";\n    let officeManagerId = \"\";\n    employeesArray.forEach(employee => {\n      if (employee.jobTitle === \"Service Manager\") {\n        employee.name = \"serviceManager\";\n        serviceManagersArray.push(employee);\n\n        if (employee.value === \"uXwUIQNHljckMtq4AR57zMBExhd2\") {\n          serviceManagerId = employee.value;\n        }\n      } else if (employee.jobTitle === \"Office Manager\") {\n        employee.name = \"officeManager\";\n        officeManagersArray.push(employee);\n\n        if (employee.value === \"P8NOWpsqBTV8OrO5ICZSYAdPrx22\") {\n          officeManagerId = employee.value;\n        }\n      }\n    });\n    setServiceManagers(serviceManagersArray);\n    setOfficeManagers(officeManagersArray);\n    setWorkOrder({ ...workOrder,\n      serviceManager: serviceManagerId,\n      officeManager: officeManagerId\n    });\n  }, [getUsers]);\n\n  const toggle = e => {\n    setIsOpen(!isOpen);\n    setErrors({});\n    setWarnings({});\n\n    if (!isOpen) {\n      setWorkOrder({ ...workOrder,\n        customer: \"\",\n        serviceDate: \"\",\n        serviceStartTime: \"\",\n        serviceEndTime: \"\",\n        serviceDescription: \"\",\n        serviceType: [],\n        dispatcher: \"\",\n        crewMembers: [],\n        jobNumber: \"\",\n        notes: \"\",\n        officeNotes: \"\",\n        quote: \"\"\n      });\n    }\n  };\n\n  const toggleCheck = e => {\n    if (isOpenCheck) {\n      setWarnings({});\n    }\n\n    setIsOpenCheck(!isOpenCheck);\n  };\n\n  const handleChange = e => {\n    setWorkOrder({ ...workOrder,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = e => {\n    setWorkOrder({ ...workOrder,\n      [e.name]: e.value\n    });\n  };\n\n  const handleServiceTypeChange = e => {\n    const services = [];\n    e.forEach(e => {\n      services.push(e.value);\n    });\n    setWorkOrder({ ...workOrder,\n      serviceType: services\n    });\n  };\n\n  const handleCrewMembersChange = e => {\n    const members = [];\n    e.forEach(e => {\n      members.push(e.value);\n    });\n    setWorkOrder({ ...workOrder,\n      crewMembers: members\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const valid = warningCheck();\n\n    if (valid) {\n      dispatch(addWorkOrder(workOrder));\n    } else {\n      toggleCheck();\n    }\n  };\n\n  const warningCheck = e => {\n    let warningsObject = {};\n\n    if (workOrder.serviceEndTime.trim() === \"\") {\n      warningsObject.serviceEndTime = \"End Time\";\n    }\n\n    if (workOrder.jobNumber.trim() === \"\") {\n      warningsObject.jobNumber = \"Job Number\";\n    }\n\n    if (workOrder.notes.trim() === \"\") {\n      warningsObject.notes = \"Notes\";\n    }\n\n    if (workOrder.officeNotes.trim() === \"\") {\n      warningsObject.officeNotes = \"Office Notes\";\n    }\n\n    if (workOrder.quote.trim() === \"\") {\n      warningsObject.quote = \"Quote\";\n    }\n\n    if (Object.keys(warningsObject).length === 0) {\n      return true;\n    } else {\n      setWarnings(warningsObject);\n      return false;\n    }\n  };\n\n  const handleSubmitCheck = e => {\n    e.preventDefault();\n    setWarnings({});\n    dispatch(addWorkOrder(workOrder));\n    toggleCheck();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-work-order-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, \"Create Work Order\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, \"Create Work Order\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(Select, {\n    options: customers,\n    name: \"customer\",\n    onChange: handleSelectChange,\n    className: errors.customer ? \"invalid\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.customer ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, errors.customer)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"serviceDate\",\n    id: \"serviceDate\",\n    placeholder: \"date placeholder\",\n    onChange: handleChange,\n    invalid: errors.serviceDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, errors.serviceDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"startTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, \"Start Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"serviceStartTime\",\n    id: \"serviceStartTime\",\n    placeholder: \"time placeholder\",\n    onChange: handleChange,\n    invalid: errors.serviceStartTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, errors.serviceStartTime)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"endTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, \"End Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"serviceEndTime\",\n    id: \"serviceEndTime\",\n    placeholder: \"time placeholder\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"serviceDescription\",\n    id: \"serviceDescription\",\n    onChange: handleChange,\n    invalid: errors.serviceDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, errors.serviceDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, \"Service Type\"), /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    options: serviceTypes.map(type => ({\n      label: type,\n      value: type,\n      name: \"serviceType\"\n    })),\n    name: \"serviceType\",\n    onChange: handleServiceTypeChange,\n    className: errors.serviceType ? \"invalid\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.serviceType ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, errors.serviceType)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"manager-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceManager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }, \"Service Manager\"), /*#__PURE__*/React.createElement(Select, {\n    options: serviceManagers,\n    defaultValue: serviceManagers[0],\n    name: \"serviceManager\",\n    onChange: handleSelectChange,\n    className: errors.serviceManager ? \"invalid\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.serviceManager ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, errors.serviceManager)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"officeManager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  }, \"Billing Manager\"), /*#__PURE__*/React.createElement(Select, {\n    options: officeManagers,\n    defaultValue: officeManagers[0],\n    name: \"officeManager\",\n    onChange: handleSelectChange,\n    className: errors.officeManager ? \"invalid\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.officeManager ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }\n  }, errors.officeManager))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"crewMembers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 15\n    }\n  }, \"Crew Members\"), /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    options: employees,\n    name: \"crewMembers\",\n    onChange: handleCrewMembersChange,\n    className: errors.crewMembers ? \"invalid\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.crewMembers ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }, errors.crewMembers)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"prevJobNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 15\n    }\n  }, \"Job Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"jobNumber\",\n    id: \"jobNumber\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 15\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"notes\",\n    id: \"notes\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"officeNotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 15\n    }\n  }, \"Office Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"officeNotes\",\n    id: \"officeNotes\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 15\n    }\n  }, \"Quote\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    name: \"file\",\n    id: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 11\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenCheck,\n    toggle: toggleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, \"Warning\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  }, \"The following fields were left blank:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 11\n    }\n  }, warnings ? Object.values(warnings).map(warning => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 58\n    }\n  }, warning)) : null), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 11\n    }\n  }, \"Are you sure you want to continue?\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    onClick: handleSubmitCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }, \"YES\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: toggleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }, \"NO\"))));\n};\n\nexport default AddWorkOrderBtn;\nconst serviceTypes = [\"Install\", \"Service\", \"Training\", \"Inspection\", \"Warranty\"];","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts/src/components/sidebar-components/AddWorkOrderBtn.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","FormFeedback","Label","Input","Select","addWorkOrder","AddWorkOrderBtn","workOrder","setWorkOrder","customer","serviceDate","serviceStartTime","serviceEndTime","serviceDescription","serviceType","dispatcher","serviceManager","officeManager","crewMembers","jobNumber","notes","officeNotes","quote","errors","setErrors","success","setSuccess","getErrors","state","addWorkOrderReducer","getSuccess","employees","setEmployees","serviceManagers","setServiceManagers","officeManagers","setOfficeManagers","employeesArray","serviceManagersArray","officeManagersArray","customers","setCustomers","customersArray","getUsers","getUsersReducer","users","isOpen","setIsOpen","isOpenCheck","setIsOpenCheck","warnings","setWarnings","dispatch","isFirstRun","current","forEach","user","userType","active","push","label","firstName","lastName","value","userId","name","jobTitle","businessName","serviceManagerId","officeManagerId","employee","toggle","e","toggleCheck","handleChange","target","handleSelectChange","handleServiceTypeChange","services","handleCrewMembersChange","members","handleSubmit","preventDefault","valid","warningCheck","warningsObject","trim","Object","keys","length","handleSubmitCheck","serviceTypes","map","type","values","warning"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { addWorkOrder } from \"../../actions/addWorkOrder\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst AddWorkOrderBtn = () => {\n  const [workOrder, setWorkOrder] = useState({\n    customer: \"\",\n    serviceDate: \"\",\n    serviceStartTime: \"\",\n    serviceEndTime: \"\",\n    serviceDescription: \"\",\n    serviceType: [],\n    dispatcher: \"\",\n    serviceManager: \"\",\n    officeManager: \"\",\n    crewMembers: [],\n    jobNumber: \"\",\n    notes: \"\",\n    officeNotes: \"\",\n    quote: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector((state) => state.addWorkOrderReducer.errors);\n  const getSuccess = useSelector((state) => state.addWorkOrderReducer.success);\n  const [employees, setEmployees] = useState([]);\n  const [serviceManagers, setServiceManagers] = useState([]);\n  const [officeManagers, setOfficeManagers] = useState([]);\n  const employeesArray = [];\n  const serviceManagersArray = [];\n  const officeManagersArray = [];\n  const [customers, setCustomers] = useState([]);\n  const customersArray = [];\n  const getUsers = useSelector((state) => state.getUsersReducer.users);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenCheck, setIsOpenCheck] = useState(false);\n  const [warnings, setWarnings] = useState({});\n  const dispatch = useDispatch();\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    setErrors(getErrors);\n  }, [getErrors]);\n\n  useEffect(() => {\n    if (getSuccess === true) {\n      setSuccess(true);\n    }\n  }, [getSuccess]);\n\n  useEffect(() => {\n    if (success === true) {\n      setIsOpen(false);\n      setErrors({});\n      setSuccess(false);\n      setWorkOrder({\n        ...workOrder,\n        customer: \"\",\n        serviceDate: \"\",\n        serviceStartTime: \"\",\n        serviceEndTime: \"\",\n        serviceDescription: \"\",\n        serviceType: [],\n        dispatch: \"\",\n        crewMembers: [],\n        jobNumber: \"\",\n        notes: \"\",\n        officeNotes: \"\",\n        quote: \"\",\n      });\n    }\n  }, [success, workOrder]);\n\n  useEffect(() => {\n    if (getUsers.users) {\n      getUsers.users.forEach((user) => {\n        if (user.userType === \"employee\" && user.active) {\n          employeesArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: \"crewMembers\",\n            jobTitle: user.jobTitle,\n          });\n        } else {\n          customersArray.push({\n            label: user.businessName,\n            value: user.userId,\n            name: \"customer\",\n          });\n        }\n      });\n    }\n\n    employeesArray.push({\n      label: \"General Contractor\",\n      value: \"General Contractor\",\n    });\n\n    setEmployees(employeesArray);\n    setCustomers(customersArray);\n\n    let serviceManagerId = \"\";\n    let officeManagerId = \"\";\n\n    employeesArray.forEach((employee) => {\n      if (employee.jobTitle === \"Service Manager\") {\n        employee.name = \"serviceManager\";\n        serviceManagersArray.push(employee);\n        if (employee.value === \"uXwUIQNHljckMtq4AR57zMBExhd2\") {\n          serviceManagerId = employee.value;\n        }\n      } else if (employee.jobTitle === \"Office Manager\") {\n        employee.name = \"officeManager\";\n        officeManagersArray.push(employee);\n        if (employee.value === \"P8NOWpsqBTV8OrO5ICZSYAdPrx22\") {\n          officeManagerId = employee.value;\n        }\n      }\n    });\n\n    setServiceManagers(serviceManagersArray);\n    setOfficeManagers(officeManagersArray);\n\n    setWorkOrder({\n      ...workOrder,\n      serviceManager: serviceManagerId,\n      officeManager: officeManagerId,\n    });\n  }, [getUsers]);\n\n  const toggle = (e) => {\n    setIsOpen(!isOpen);\n    setErrors({});\n    setWarnings({});\n\n    if (!isOpen) {\n      setWorkOrder({\n        ...workOrder,\n        customer: \"\",\n        serviceDate: \"\",\n        serviceStartTime: \"\",\n        serviceEndTime: \"\",\n        serviceDescription: \"\",\n        serviceType: [],\n        dispatcher: \"\",\n        crewMembers: [],\n        jobNumber: \"\",\n        notes: \"\",\n        officeNotes: \"\",\n        quote: \"\",\n      });\n    }\n  };\n\n  const toggleCheck = (e) => {\n    if (isOpenCheck) {\n      setWarnings({});\n    }\n    setIsOpenCheck(!isOpenCheck);\n  };\n\n  const handleChange = (e) => {\n    setWorkOrder({\n      ...workOrder,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setWorkOrder({\n      ...workOrder,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleServiceTypeChange = (e) => {\n    const services = [];\n\n    e.forEach((e) => {\n      services.push(e.value);\n    });\n\n    setWorkOrder({\n      ...workOrder,\n      serviceType: services,\n    });\n  };\n\n  const handleCrewMembersChange = (e) => {\n    const members = [];\n\n    e.forEach((e) => {\n      members.push(e.value);\n    });\n\n    setWorkOrder({\n      ...workOrder,\n      crewMembers: members,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const valid = warningCheck();\n\n    if (valid) {\n      dispatch(addWorkOrder(workOrder));\n    } else {\n      toggleCheck();\n    }\n  };\n\n  const warningCheck = (e) => {\n    let warningsObject = {};\n\n    if (workOrder.serviceEndTime.trim() === \"\") {\n      warningsObject.serviceEndTime = \"End Time\";\n    }\n    if (workOrder.jobNumber.trim() === \"\") {\n      warningsObject.jobNumber = \"Job Number\";\n    }\n    if (workOrder.notes.trim() === \"\") {\n      warningsObject.notes = \"Notes\";\n    }\n    if (workOrder.officeNotes.trim() === \"\") {\n      warningsObject.officeNotes = \"Office Notes\";\n    }\n    if (workOrder.quote.trim() === \"\") {\n      warningsObject.quote = \"Quote\";\n    }\n\n    if (Object.keys(warningsObject).length === 0) {\n      return true;\n    } else {\n      setWarnings(warningsObject);\n      return false;\n    }\n  };\n\n  const handleSubmitCheck = (e) => {\n    e.preventDefault();\n    setWarnings({});\n    dispatch(addWorkOrder(workOrder));\n    toggleCheck();\n  };\n\n  return (\n    <div className=\"add-work-order-div\">\n      <Button color=\"success\" onClick={toggle}>\n        Create Work Order\n      </Button>\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Create Work Order</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"customer\">Customer</Label>\n              <Select\n                options={customers}\n                name=\"customer\"\n                onChange={handleSelectChange}\n                className={errors.customer ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.customer ? true : false}\n              />\n              <FormFeedback>{errors.customer}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"date\">Date</Label>\n              <Input\n                type=\"date\"\n                name=\"serviceDate\"\n                id=\"serviceDate\"\n                placeholder=\"date placeholder\"\n                onChange={handleChange}\n                invalid={errors.serviceDate ? true : false}\n              />\n              <FormFeedback>{errors.serviceDate}</FormFeedback>\n            </FormGroup>\n            <div className=\"time-div\">\n              <FormGroup>\n                <Label for=\"startTime\">Start Time</Label>\n                <Input\n                  type=\"time\"\n                  name=\"serviceStartTime\"\n                  id=\"serviceStartTime\"\n                  placeholder=\"time placeholder\"\n                  onChange={handleChange}\n                  invalid={errors.serviceStartTime ? true : false}\n                />\n                <FormFeedback>{errors.serviceStartTime}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"endTime\">End Time</Label>\n                <Input\n                  type=\"time\"\n                  name=\"serviceEndTime\"\n                  id=\"serviceEndTime\"\n                  placeholder=\"time placeholder\"\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"serviceDescription\">Service Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"serviceDescription\"\n                id=\"serviceDescription\"\n                onChange={handleChange}\n                invalid={errors.serviceDescription ? true : false}\n              />\n              <FormFeedback>{errors.serviceDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"serviceType\">Service Type</Label>\n              <Select\n                isMulti\n                options={serviceTypes.map((type) => ({\n                  label: type,\n                  value: type,\n                  name: \"serviceType\",\n                }))}\n                name=\"serviceType\"\n                onChange={handleServiceTypeChange}\n                className={errors.serviceType ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.serviceType ? true : false}\n              />\n              <FormFeedback>{errors.serviceType}</FormFeedback>\n            </FormGroup>\n            <div className=\"manager-div\">\n              <FormGroup>\n                <Label for=\"serviceManager\">Service Manager</Label>\n                <Select\n                  options={serviceManagers}\n                  defaultValue={serviceManagers[0]}\n                  name=\"serviceManager\"\n                  onChange={handleSelectChange}\n                  className={errors.serviceManager ? \"invalid\" : \"\"}\n                />\n                <Input\n                  type=\"hidden\"\n                  disabled\n                  invalid={errors.serviceManager ? true : false}\n                />\n                <FormFeedback>{errors.serviceManager}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"officeManager\">Billing Manager</Label>\n                <Select\n                  options={officeManagers}\n                  defaultValue={officeManagers[0]}\n                  name=\"officeManager\"\n                  onChange={handleSelectChange}\n                  className={errors.officeManager ? \"invalid\" : \"\"}\n                />\n                <Input\n                  type=\"hidden\"\n                  disabled\n                  invalid={errors.officeManager ? true : false}\n                />\n                <FormFeedback>{errors.officeManager}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"crewMembers\">Crew Members</Label>\n              <Select\n                isMulti\n                options={employees}\n                name=\"crewMembers\"\n                onChange={handleCrewMembersChange}\n                className={errors.crewMembers ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.crewMembers ? true : false}\n              />\n              <FormFeedback>{errors.crewMembers}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"prevJobNumber\">Job Number</Label>\n              <Input\n                type=\"text\"\n                name=\"jobNumber\"\n                id=\"jobNumber\"\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"notes\">Notes</Label>\n              <Input\n                type=\"textarea\"\n                name=\"notes\"\n                id=\"notes\"\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"officeNotes\">Office Notes</Label>\n              <Input\n                type=\"textarea\"\n                name=\"officeNotes\"\n                id=\"officeNotes\"\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"quote\">Quote</Label>\n              <Input\n                type=\"file\"\n                name=\"file\"\n                id=\"file\"\n                onChange={handleChange}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" type=\"submit\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenCheck} toggle={toggleCheck}>\n        <ModalHeader toggle={toggleCheck}>Warning</ModalHeader>\n        <ModalBody>\n          <span>The following fields were left blank:</span>\n          <ul>\n            {warnings\n              ? Object.values(warnings).map((warning) => <li>{warning}</li>)\n              : null}\n          </ul>\n          <span>Are you sure you want to continue?</span>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" type=\"submit\" onClick={handleSubmitCheck}>\n            YES\n          </Button>\n          <Button color=\"danger\" onClick={toggleCheck}>\n            NO\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddWorkOrderBtn;\n\nconst serviceTypes = [\n  \"Install\",\n  \"Service\",\n  \"Training\",\n  \"Inspection\",\n  \"Warranty\",\n];\n"]},"metadata":{},"sourceType":"module"}