{"ast":null,"code":"import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\nexport const DELETE_TASK_START = \"DELETE_TASK_START\";\nexport const DELETE_TASK_SUCCESS = \"DELETE_TASK_SUCCESS\";\nexport const DELETE_TASK_FAILURE = \"DELETE_TASK_FAILURE\";\nexport const deleteTask = taskId => async dispatch => {\n  dispatch({\n    type: DELETE_TASK_START\n  });\n  const axiosAuth = await axiosWithAuth();\n  return axiosAuth.delete(`${dbUrl}/task/${taskId}`).then(() => {\n    dispatch({\n      type: DELETE_TASK_SUCCESS,\n      payload: \"SUCCESS\"\n    });\n  }).catch(err => {\n    dispatch({\n      type: DELETE_TASK_FAILURE,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts/src/actions/deleteTask.js"],"names":["axiosWithAuth","dbUrl","DELETE_TASK_START","DELETE_TASK_SUCCESS","DELETE_TASK_FAILURE","deleteTask","taskId","dispatch","type","axiosAuth","delete","then","payload","catch","err","response","data"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,UAAU,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AACxDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AAEA,QAAMO,SAAS,GAAG,MAAMT,aAAa,EAArC;AAEA,SAAOS,SAAS,CACbC,MADI,CACI,GAAET,KAAM,SAAQK,MAAO,EAD3B,EAEJK,IAFI,CAEC,MAAM;AACVJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,mBADC;AAEPS,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPI,EAQJC,KARI,CAQGC,GAAD,IAAS;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,mBADC;AAEPQ,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID,GAbI,CAAP;AAcD,CAnBM","sourcesContent":["import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const DELETE_TASK_START = \"DELETE_TASK_START\";\nexport const DELETE_TASK_SUCCESS = \"DELETE_TASK_SUCCESS\";\nexport const DELETE_TASK_FAILURE = \"DELETE_TASK_FAILURE\";\n\nexport const deleteTask = (taskId) => async (dispatch) => {\n  dispatch({ type: DELETE_TASK_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .delete(`${dbUrl}/task/${taskId}`)\n    .then(() => {\n      dispatch({\n        type: DELETE_TASK_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: DELETE_TASK_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};"]},"metadata":{},"sourceType":"module"}