{"ast":null,"code":"import _regeneratorRuntime from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var OPEN_WORK_ORDERS=\"OPEN_WORK_ORDERS\";export var CLOSE_WORK_ORDERS=\"CLOSE_WORK_ORDERS\";export var openWorkOrders=function openWorkOrders(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:OPEN_WORK_ORDERS});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var closeWorkOrders=function closeWorkOrders(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:CLOSE_WORK_ORDERS});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/actions/workOrderToggle.js"],"names":["OPEN_WORK_ORDERS","CLOSE_WORK_ORDERS","openWorkOrders","dispatch","type","closeWorkOrders"],"mappings":"2XAAA,MAAO,IAAMA,CAAAA,gBAAgB,CAAG,kBAAzB,CACP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,mBAA1B,CAEP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,kGAAM,iBAAOC,QAAP,kHAClCA,QAAQ,CAAC,CAAEC,IAAI,CAAEJ,gBAAR,CAAD,CAAR,CADkC,sDAAN,gEAAvB,CAIP,MAAO,IAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,mGAAM,kBAAOF,QAAP,sHACnCA,QAAQ,CAAC,CAAEC,IAAI,CAAEH,iBAAR,CAAD,CAAR,CADmC,wDAAN,kEAAxB","sourcesContent":["export const OPEN_WORK_ORDERS = \"OPEN_WORK_ORDERS\";\nexport const CLOSE_WORK_ORDERS = \"CLOSE_WORK_ORDERS\";\n\nexport const openWorkOrders = () => async (dispatch) => {\n  dispatch({ type: OPEN_WORK_ORDERS });\n};\n\nexport const closeWorkOrders = () => async (dispatch) => {\n  dispatch({ type: CLOSE_WORK_ORDERS });\n};\n"]},"metadata":{},"sourceType":"module"}