{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPageEmployeesTab.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\nimport { getCustomer } from '../../actions/getCustomer';\nimport { addEmployeeToCustomer } from '../../actions/addEmployeeToCustomer';\nimport '../../styles/employee-dashboard.scss';\n\nconst CustomerPageEmployeesTab = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n  const [isOpen, setIsOpen] = useState(false);\n  const [employee, setEmployee] = useState({\n    firstName: '',\n    lastName: '',\n    jobTitle: '',\n    officeNumber: '',\n    officeExt: '',\n    cellNumber: '',\n    email: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [flag, setFlag] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split('/');\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomer(customerId));\n  }, []);\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n    }\n\n    ;\n  }, [getCustomerFromState]);\n  useEffect(() => {\n    if (flag) {\n      setFlag(false);\n      dispatch(addEmployeeToCustomer(customer));\n      toggle();\n    }\n\n    ;\n  }, [flag]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setEmployee({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        officeNumber: '',\n        officeExt: '',\n        cellNumber: '',\n        email: ''\n      });\n      setErrors({});\n    }\n\n    ;\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = e => {\n    setEmployee({ ...employee,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errorsObject = {};\n\n    if (employee.firstName === '') {\n      errorsObject.firstName = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.lastName === '') {\n      errorsObject.lastName = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.jobTitle === '') {\n      errorsObject.jobTitle = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.officeNumber === '' && employee.cellNumber === '') {\n      errorsObject.officeNumber = 'Must not be empty';\n      errorsObject.cellNumber = 'Must not be empty';\n    } else if (employee.officeNumber !== '' && !employee.officeNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n      errorsObject.officeNumber = 'Must be a valid phone number';\n    } else if (employee.cellNumber !== '' && !employee.cellNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n      errorsObject.cellNumber = 'Must be a valid phone number';\n    }\n\n    ;\n\n    if (employee.email === '') {\n      errorsObject.email = 'Must not be empty';\n    } else if (!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n      errorsObject.email = 'Must be a valid email address';\n    }\n\n    ;\n    setErrors(errorsObject);\n\n    if (Object.keys(errorsObject).length === 0) {\n      if (customer.employees.length === 0) {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [employee]\n        });\n      } else {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [...customer.employees, employee]\n        });\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"employees-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"sm\",\n    hover: true,\n    className: \"customer-page-employees-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, \"Office Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"Cell Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, \"Email\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, customer.primaryContact ? customer.primaryContact.firstName : null, \" \", customer.primaryContact ? customer.primaryContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, customer.primaryJobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: customer.primaryExt ? `tel:+1-${customer.primaryOfficeNumber},${customer.primaryExt}` : `tel:+1-${customer.primaryOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, customer.primaryExt ? `${customer.primaryOfficeNumber} ext. ${customer.primaryExt}` : `${customer.primaryOfficeNumber}`)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, customer.primaryCellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.primaryEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, customer.primaryEmail))), customer.billingJobTitle !== '' ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, customer.billingContact ? customer.billingContact.firstName : null, \" \", customer.billingContact ? customer.billingContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, customer.billingJobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: customer.billingExt ? `tel:+1-${customer.billingOfficeNumber},${customer.billingExt}` : `tel:+1-${customer.billingOfficeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, customer.billingExt ? `${customer.billingOfficeNumber} ext. ${customer.billingExt}` : `${customer.billingOfficeNumber}`)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingCellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, customer.billingCellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.billingEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, customer.billingEmail))) : null, customer.employees ? customer.employees.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, employee.firstName, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, employee.jobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: employee.officeExt ? `tel:+1-${employee.officeNumber},${employee.officeExt}` : `tel:+1-${employee.officeNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, employee.officeExt ? `${employee.officeNumber} ext. ${employee.officeExt}` : `${employee.officeNumber}`)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.cellNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, employee.cellNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${employee.email}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, employee.email)))) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"Add Employee\")), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, \"Add Employee\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-name-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeFirstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 37\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handleChange,\n    invalid: errors.firstName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }, errors.firstName)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeLastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handleChange,\n    invalid: errors.lastName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 37\n    }\n  }, errors.lastName))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeJobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"jobTitle\",\n    onChange: handleChange,\n    invalid: errors.jobTitle ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, errors.jobTitle)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"employee-phone-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"employee-office-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeOfficeNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }, \"Office Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"officeNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    invalid: errors.officeNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 37\n    }\n  }, errors.officeNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"employee-office-ext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeOfficeExt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  }, \"ext.\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"officeExt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeCellNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, \"Cell Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"cellNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    invalid: errors.cellNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, errors.cellNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"example@example.com\",\n    onChange: handleChange,\n    invalid: errors.email ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, errors.email)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, \"Submit\"))));\n};\n\nexport default CustomerPageEmployeesTab;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPageEmployeesTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useLocation","Table","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","getCustomer","addEmployeeToCustomer","CustomerPageEmployeesTab","customer","setCustomer","getCustomerFromState","state","getCustomerReducer","isOpen","setIsOpen","employee","setEmployee","firstName","lastName","jobTitle","officeNumber","officeExt","cellNumber","email","errors","setErrors","flag","setFlag","dispatch","location","pathArray","pathname","split","customerId","length","toggle","handleChange","e","target","name","value","handleSubmit","preventDefault","errorsObject","match","Object","keys","employees","primaryContact","primaryJobTitle","primaryExt","primaryOfficeNumber","primaryCellNumber","primaryEmail","billingJobTitle","billingContact","billingExt","billingOfficeNumber","billingCellNumber","billingEmail","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    Table,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback\n} from 'reactstrap';\nimport { getCustomer } from '../../actions/getCustomer';\nimport { addEmployeeToCustomer } from '../../actions/addEmployeeToCustomer';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst CustomerPageEmployeesTab = () => {\n    const [customer, setCustomer] = useState({});\n    const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n    const [isOpen, setIsOpen] = useState(false);\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        officeNumber: '',\n        officeExt: '',\n        cellNumber: '',\n        email: ''\n    });\n    const [errors, setErrors] = useState({});\n    const [flag, setFlag] = useState(false);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const customerId = pathArray[pathArray.length - 1];\n        dispatch(getCustomer(customerId));\n    }, []);\n\n    useEffect(() => {\n        if(getCustomerFromState) {\n            setCustomer(getCustomerFromState);\n        };\n    }, [getCustomerFromState]);\n\n    useEffect(() => {\n        if(flag) {\n            setFlag(false);\n            dispatch(addEmployeeToCustomer(customer));\n            toggle();\n        };\n    }, [flag]);\n\n    const toggle = () => {\n        if(isOpen) {\n            setEmployee({\n                firstName: '',\n                lastName: '',\n                jobTitle: '',\n                officeNumber: '',\n                officeExt: '',\n                cellNumber: '',\n                email: ''\n            });\n            setErrors({});\n        };\n        setIsOpen(!isOpen);\n    };\n\n    const handleChange = e => {\n        setEmployee({\n            ...employee,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        \n        let errorsObject = {};\n\n        if(employee.firstName === '') {\n            errorsObject.firstName = 'Must not be empty';\n        };\n        if(employee.lastName === '') {\n            errorsObject.lastName = 'Must not be empty';\n        };\n        if(employee.jobTitle === '') {\n            errorsObject.jobTitle = 'Must not be empty';\n        };\n        if(employee.officeNumber === '' && employee.cellNumber === '') {\n            errorsObject.officeNumber = 'Must not be empty';\n            errorsObject.cellNumber = 'Must not be empty'\n        } else if(employee.officeNumber !== '' && !employee.officeNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n            errorsObject.officeNumber = 'Must be a valid phone number';\n        } else if(employee.cellNumber !== '' && !employee.cellNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n            errorsObject.cellNumber = 'Must be a valid phone number';\n        };\n        if(employee.email === '') {\n            errorsObject.email = 'Must not be empty';\n        } else if(!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n            errorsObject.email = 'Must be a valid email address';\n        };\n\n        setErrors(errorsObject);\n\n        if(Object.keys(errorsObject).length === 0) {\n            if(customer.employees.length === 0) {\n                setFlag(true);\n                setCustomer({\n                    ...customer,\n                    employees: [employee]\n                });\n            } else {\n                setFlag(true);\n                setCustomer({\n                    ...customer,\n                    employees: [...customer.employees, employee]\n                });\n            };\n        };\n    };\n\n    return (\n        <div className=\"employees-tab\">\n            <Table size=\"sm\" hover className=\"customer-page-employees-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Job Title</th>\n                        <th>Office Number</th>\n                        <th>Cell Number</th>\n                        <th>Email</th> \n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{customer.primaryContact ? customer.primaryContact.firstName : null} {customer.primaryContact ? customer.primaryContact.lastName : null}</td>\n                        <td>{customer.primaryJobTitle}</td>\n                        <td><a href={customer.primaryExt ? `tel:+1-${customer.primaryOfficeNumber},${customer.primaryExt}` : `tel:+1-${customer.primaryOfficeNumber}`}>{customer.primaryExt ? `${customer.primaryOfficeNumber} ext. ${customer.primaryExt}` : `${customer.primaryOfficeNumber}`}</a></td>\n                        <td><a href={`tel:+1-${customer.primaryCellNumber}`}>{customer.primaryCellNumber}</a></td>\n                        <td><a href={`mailto:${customer.primaryEmail}`}>{customer.primaryEmail}</a></td>\n                    </tr>\n                    {customer.billingJobTitle !== '' ?\n                        <tr>\n                            <td>{customer.billingContact ? customer.billingContact.firstName : null} {customer.billingContact ? customer.billingContact.lastName : null}</td>\n                            <td>{customer.billingJobTitle}</td>\n                            <td><a href={customer.billingExt ? `tel:+1-${customer.billingOfficeNumber},${customer.billingExt}` : `tel:+1-${customer.billingOfficeNumber}`}>{customer.billingExt ? `${customer.billingOfficeNumber} ext. ${customer.billingExt}` : `${customer.billingOfficeNumber}`}</a></td>\n                            <td><a href={`tel:+1-${customer.billingCellNumber}`}>{customer.billingCellNumber}</a></td>\n                            <td><a href={`mailto:${customer.billingEmail}`}>{customer.billingEmail}</a></td>\n                        </tr>\n                    : null }\n                    {customer.employees ? customer.employees.map(employee => (\n                        <tr>\n                            <td>{employee.firstName} {employee.lastName}</td>\n                            <td>{employee.jobTitle}</td>\n                            <td><a href={employee.officeExt ? `tel:+1-${employee.officeNumber},${employee.officeExt}` : `tel:+1-${employee.officeNumber}`}>{employee.officeExt ? `${employee.officeNumber} ext. ${employee.officeExt}` : `${employee.officeNumber}`}</a></td>\n                            <td><a href={`tel:+1-${employee.cellNumber}`}>{employee.cellNumber}</a></td>\n                            <td><a href={`mailto:${employee.email}`}>{employee.email}</a></td>\n                        </tr>\n                    )) : null}\n                </tbody>\n            </Table>\n            <div className=\"add-employee-div\">\n                <Button outline color=\"success\" onClick={toggle}>Add Employee</Button>\n            </div>\n            <Modal isOpen={isOpen} toggle={toggle}>\n                    <ModalHeader toggle={toggle}>Add Employee</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleSubmit}>\n                            <div className=\"add-employee-name-div\">\n                                <FormGroup>\n                                    <Label for=\"employeeFirstName\">First Name</Label>\n                                    <Input type=\"text\" name=\"firstName\" onChange={handleChange} invalid={errors.firstName ? true : false} />\n                                    <FormFeedback>{errors.firstName}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"employeeLastName\">Last Name</Label>\n                                    <Input type=\"text\" name=\"lastName\" onChange={handleChange} invalid={errors.lastName ? true : false} />\n                                    <FormFeedback>{errors.lastName}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"employeeJobTitle\">Job Title</Label>\n                                <Input type=\"text\" name=\"jobTitle\" onChange={handleChange} invalid={errors.jobTitle ? true : false} />\n                                <FormFeedback>{errors.jobTitle}</FormFeedback>\n                            </FormGroup>\n                            <div className=\"employee-phone-div\">\n                                <FormGroup className=\"employee-office-number\">\n                                    <Label for=\"employeeOfficeNumber\">Office Phone Number</Label>\n                                    <Input type=\"text\" name=\"officeNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleChange} invalid={errors.officeNumber ? true : false} />\n                                    <FormFeedback>{errors.officeNumber}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup className=\"employee-office-ext\">\n                                    <Label for=\"employeeOfficeExt\">ext.</Label>\n                                    <Input type=\"text\" name=\"officeExt\" onChange={handleChange} />\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"employeeCellNumber\">Cell Phone Number</Label>\n                                <Input type=\"text\" name=\"cellNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleChange} invalid={errors.cellNumber ? true : false} />\n                                <FormFeedback>{errors.cellNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeEmail\">Email</Label>\n                                <Input type=\"text\" name=\"email\" placeholder=\"example@example.com\" onChange={handleChange} invalid={errors.email ? true : false} />\n                                <FormFeedback>{errors.email}</FormFeedback>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleSubmit}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n        </div>\n    );\n};\n\nexport default CustomerPageEmployeesTab;"]},"metadata":{},"sourceType":"module"}