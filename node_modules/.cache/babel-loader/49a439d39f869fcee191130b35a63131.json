{"ast":null,"code":"import { GET_WORK_ORDER_START, GET_WORK_ORDER_SUCCESS, GET_WORK_ORDER_FAILURE } from '../actions';\nconst initialState = {\n  users: [],\n  gettingWorkOrder: false,\n  error: null\n};\nexport const getWorkOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_WORK_ORDER_START:\n      return { ...state,\n        gettingWorkOrder: true\n      };\n\n    case GET_WORK_ORDER_SUCCESS:\n      return { ...state,\n        gettingWorkOrder: false,\n        users: action.payload.responseArray\n      };\n\n    case GET_WORK_ORDER_FAILURE:\n      return { ...state,\n        gettingWorkOrder: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/reducers/getWorkOrderReducer.js"],"names":["GET_WORK_ORDER_START","GET_WORK_ORDER_SUCCESS","GET_WORK_ORDER_FAILURE","initialState","users","gettingWorkOrder","error","getWorkOrderReducer","state","action","type","payload","responseArray"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,sBAFJ,EAGIC,sBAHJ,QAIO,YAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,gBAAgB,EAAE,KAFD;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACjE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,oBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,gBAAgB,EAAE;AAFf,OAAP;;AAIJ,SAAKJ,sBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,gBAAgB,EAAE,KAFf;AAGHD,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeC;AAHnB,OAAP;;AAKJ,SAAKV,sBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,gBAAgB,EAAE,KAFf;AAGHC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAHX,OAAP;;AAKJ;AAAS,aAAOH,KAAP;AAlBb;;AAmBC;AACJ,CArBM","sourcesContent":["import {\n    GET_WORK_ORDER_START,\n    GET_WORK_ORDER_SUCCESS,\n    GET_WORK_ORDER_FAILURE\n} from '../actions';\n\nconst initialState = {\n    users: [],\n    gettingWorkOrder: false,\n    error: null\n};\n\nexport const getWorkOrderReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_WORK_ORDER_START:\n            return {\n                ...state,\n                gettingWorkOrder: true\n            };\n        case GET_WORK_ORDER_SUCCESS:\n            return {\n                ...state,\n                gettingWorkOrder: false,\n                users: action.payload.responseArray\n            };\n        case GET_WORK_ORDER_FAILURE:\n            return {\n                ...state,\n                gettingWorkOrder: false,\n                error: action.payload\n            };\n        default: return state;\n    };\n};"]},"metadata":{},"sourceType":"module"}