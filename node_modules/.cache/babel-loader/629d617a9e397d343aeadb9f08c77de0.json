{"ast":null,"code":"import _regeneratorRuntime from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{dbUrl}from\"./index\";import axiosWithAuth from\"../contexts/withAuth\";export var GET_USERS_START=\"GET_USERS_START\";export var GET_USERS_SUCCESS=\"GET_USERS_SUCCESS\";export var GET_USERS_FAILURE=\"GET_USERS_FAILURE\";export var getUsers=function getUsers(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var axiosAuth;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:GET_USERS_START});_context.next=3;return axiosWithAuth();case 3:axiosAuth=_context.sent;_context.next=6;return axiosAuth.get(\"\".concat(dbUrl,\"/users\")).then(function(res){dispatch({type:GET_USERS_SUCCESS,payload:res.data});}).catch(function(err){dispatch({type:GET_USERS_FAILURE,payload:err});});case 6:return _context.abrupt(\"return\",_context.sent);case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/actions/getUsers.js"],"names":["dbUrl","axiosWithAuth","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAILURE","getUsers","dispatch","type","axiosAuth","get","then","res","payload","data","catch","err"],"mappings":"2XAAA,OAASA,KAAT,KAAsB,SAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,sBAA1B,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,iBAAxB,CACP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,mBAA1B,CACP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,mBAA1B,CAEP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,kGAAM,iBAAOC,QAAP,gIAC5BA,QAAQ,CAAC,CAAEC,IAAI,CAAEL,eAAR,CAAD,CAAR,CAD4B,sBAGJD,CAAAA,aAAa,EAHT,QAGtBO,SAHsB,qCAKfA,CAAAA,SAAS,CACnBC,GADU,WACHT,KADG,YAEVU,IAFU,CAEL,SAACC,GAAD,CAAS,CACbL,QAAQ,CAAC,CACPC,IAAI,CAAEJ,iBADC,CAEPS,OAAO,CAAED,GAAG,CAACE,IAFN,CAAD,CAAR,CAID,CAPU,EAQVC,KARU,CAQJ,SAACC,GAAD,CAAS,CACdT,QAAQ,CAAC,CACPC,IAAI,CAAEH,iBADC,CAEPQ,OAAO,CAAEG,GAFF,CAAD,CAAR,CAID,CAbU,CALe,6GAAN,gEAAjB","sourcesContent":["import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_USERS_START = \"GET_USERS_START\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\n\nexport const getUsers = () => async (dispatch) => {\n  dispatch({ type: GET_USERS_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return await axiosAuth\n    .get(`${dbUrl}/users`)\n    .then((res) => {\n      dispatch({\n        type: GET_USERS_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_USERS_FAILURE,\n        payload: err,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}