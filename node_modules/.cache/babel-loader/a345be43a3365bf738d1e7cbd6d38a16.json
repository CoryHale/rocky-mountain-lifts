{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddWorkOrderBtn.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, FormFeedback, Label, Input } from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport { addWorkOrder } from '../../actions/addWorkOrder';\nimport '../../styles/sidebar.scss';\n\nconst AddWorkOrderBtn = () => {\n  const [workOrder, setWorkOrder] = useState({\n    customer: '',\n    serviceDate: '',\n    serviceTime: '',\n    serviceDescription: '',\n    serviceType: [],\n    crewMembers: [],\n    prevJobNumber: undefined,\n    notes: '',\n    officeNotes: '',\n    quote: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector(state => state.addWorkOrderReducer.errors);\n  const getSuccess = useSelector(state => state.addWorkOrderReducer.success);\n  const [employees, setEmployees] = useState([]);\n  const employeesArray = [];\n  const [customers, setCustomers] = useState([]);\n  const customersArray = [];\n  const getUsers = useSelector(state => state.getUsersReducer.users);\n  const [hidden, setHidden] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenCheck, setIsOpenCheck] = useState(false);\n  const [warnings, setWarnings] = useState({});\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    changeHidden(location);\n  }, [location]);\n\n  const changeHidden = location => {\n    if (location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n      setHidden(true);\n    } else {\n      setHidden(false);\n    }\n\n    ;\n  };\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    setErrors(getErrors);\n  }, [getErrors]);\n  useEffect(() => {\n    if (getSuccess === true) {\n      setSuccess(true);\n    }\n\n    ;\n  }, [getSuccess]);\n  useEffect(() => {\n    if (success === true) {\n      setIsOpen(false);\n      setErrors({});\n      setSuccess(false);\n      setWorkOrder({\n        customer: '',\n        serviceDate: '',\n        serviceTime: '',\n        serviceDescription: '',\n        serviceType: [],\n        crewMembers: [],\n        prevJobNumber: undefined,\n        notes: '',\n        officeNotes: '',\n        quote: ''\n      });\n    }\n\n    ;\n  }, [success]);\n  useEffect(() => {\n    if (getUsers.users) {\n      getUsers.users.forEach(user => {\n        if (user.userType === 'employee') {\n          employeesArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: 'crewMembers'\n          });\n        } else {\n          customersArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: 'customer'\n          });\n        }\n\n        ;\n      });\n    }\n\n    ;\n    employeesArray.push({\n      label: 'General Contractor',\n      value: 'General Contractor'\n    });\n    setEmployees(employeesArray);\n    setCustomers(customersArray);\n  }, [getUsers]);\n\n  const toggle = e => {\n    setIsOpen(!isOpen);\n    setErrors({});\n  };\n\n  const toggleCheck = (e, warnings) => {\n    setIsOpenCheck(!isOpenCheck);\n    setWarnings({});\n  };\n\n  const handleChange = e => {\n    setWorkOrder({ ...workOrder,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = e => {\n    setWorkOrder({ ...workOrder,\n      [e.name]: e.value\n    });\n  };\n\n  const handleMultiSelectChange = e => {\n    e.forEach(e => {\n      setWorkOrder({ ...workOrder,\n        [e.name]: [...workOrder[e.name], e.value]\n      });\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (workOrder.prevJobNumber === undefined) {\n      warnings.prevJobNumber = 'Previous Job Number';\n    }\n\n    ;\n\n    if (workOrder.notes.trim() === '') {\n      warnings.notes = 'Notes';\n    }\n\n    ;\n\n    if (workOrder.officeNotes.trim() === '') {\n      warnings.officeNotes = 'Office Notes';\n    }\n\n    ;\n\n    if (workOrder.quote.trim() === '') {\n      warnings.quote = 'Quote';\n    }\n\n    ;\n\n    if (Object.keys(warnings).length !== 0) {\n      console.log(warnings);\n      toggleCheck(e, warnings);\n    } else {\n      dispatch(addWorkOrder(workOrder));\n    }\n\n    ;\n  };\n\n  const handleSubmitCheck = e => {\n    e.preventDefault();\n    dispatch(addWorkOrder(workOrder));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: hidden ? \"add-work-order-div\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, hidden ? /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }, \"Create Work Order\") : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"Create Work Order\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(Select, {\n    options: customers,\n    name: \"customer\",\n    onChange: handleSelectChange,\n    className: errors.customer ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.customer ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, errors.customer)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"datepicker-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"serviceDate\",\n    id: \"serviceDate\",\n    placeholder: \"date placeholder\",\n    onChange: handleChange,\n    invalid: errors.serviceDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }, errors.serviceDate)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"serviceTime\",\n    id: \"serviceTime\",\n    placeholder: \"time placeholder\",\n    onChange: handleChange,\n    invalid: errors.serviceTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 33\n    }\n  }, errors.serviceTime))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"serviceDescription\",\n    id: \"serviceDescription\",\n    onChange: handleChange,\n    invalid: errors.serviceDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, errors.serviceDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, \"Service Type\"), /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    options: serviceTypes.map(type => ({\n      label: type,\n      value: type,\n      name: 'serviceType'\n    })),\n    name: \"serviceType\",\n    onChange: handleMultiSelectChange,\n    className: errors.serviceType ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.serviceType ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, errors.serviceType)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"crewMembers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, \"Crew Members\"), /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    options: employees,\n    name: \"crewMembers\",\n    onChange: handleMultiSelectChange,\n    className: errors.crewMembers ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.crewMembers ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, errors.crewMembers)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"prevJobNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }, \"Previous Job Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"prevJobNumber\",\n    id: \"prevJobNumber\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"notes\",\n    id: \"notes\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"officeNotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, \"Office Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"officeNotes\",\n    id: \"officeNotes\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }\n  }, \"Quote\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    name: \"file\",\n    id: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenCheck,\n    toggle: toggleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, \"Warning\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }, \"The following fields were left blank:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, Object.values(warnings).map(warning => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, warning))), console.log(warnings), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, \"Are you sure you want to continue?\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    onClick: handleSubmitCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, \"YES\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: toggleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, \"NO\"))));\n};\n\nexport default AddWorkOrderBtn;\nconst serviceTypes = [\"Install\", \"Service\", \"Training\", \"Inspection\", \"Warranty\"];","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddWorkOrderBtn.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","FormFeedback","Label","Input","Select","useLocation","addWorkOrder","AddWorkOrderBtn","workOrder","setWorkOrder","customer","serviceDate","serviceTime","serviceDescription","serviceType","crewMembers","prevJobNumber","undefined","notes","officeNotes","quote","errors","setErrors","success","setSuccess","getErrors","state","addWorkOrderReducer","getSuccess","employees","setEmployees","employeesArray","customers","setCustomers","customersArray","getUsers","getUsersReducer","users","hidden","setHidden","isOpen","setIsOpen","isOpenCheck","setIsOpenCheck","warnings","setWarnings","dispatch","location","changeHidden","pathname","isFirstRun","current","forEach","user","userType","push","label","firstName","lastName","value","userId","name","toggle","e","toggleCheck","handleChange","target","handleSelectChange","handleMultiSelectChange","handleSubmit","preventDefault","trim","Object","keys","length","console","log","handleSubmitCheck","serviceTypes","map","type","values","warning"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    FormFeedback,\n    Label,\n    Input,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport { addWorkOrder } from '../../actions/addWorkOrder';\n\nimport '../../styles/sidebar.scss';\n\nconst AddWorkOrderBtn = () => {\n    const [workOrder, setWorkOrder] = useState({\n        customer: '',\n        serviceDate: '',\n        serviceTime: '',\n        serviceDescription: '',\n        serviceType: [],\n        crewMembers: [],\n        prevJobNumber: undefined,\n        notes: '',\n        officeNotes: '',\n        quote: ''\n    });\n    const [errors, setErrors] = useState({});\n    const [success, setSuccess] = useState(false);\n    const getErrors = useSelector(state => state.addWorkOrderReducer.errors);\n    const getSuccess = useSelector(state => state.addWorkOrderReducer.success);\n    const [employees, setEmployees] = useState([]);\n    const employeesArray = [];\n    const [customers, setCustomers] = useState([]);\n    const customersArray = [];\n    const getUsers = useSelector(state => state.getUsersReducer.users); \n    const [hidden, setHidden] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [isOpenCheck, setIsOpenCheck] = useState(false);\n    const [warnings, setWarnings] = useState({});\n    const dispatch = useDispatch();\n    const location = useLocation();\n    \n    useEffect(() => {\n        changeHidden(location);\n    }, [location]);\n    \n    const changeHidden = location => {\n        if(location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n            setHidden(true);\n        } else {\n            setHidden(false);\n        };\n    };\n\n    const isFirstRun = useRef(true);\n    useEffect(() => {\n        if(isFirstRun.current) {\n            isFirstRun.current = false;\n            return;\n        }\n        setErrors(getErrors);\n    }, [getErrors]);\n\n    useEffect(() => {\n        if(getSuccess === true) {\n            setSuccess(true);\n        };\n    }, [getSuccess]);\n\n    useEffect(() => {\n        if(success === true) {\n            setIsOpen(false);\n            setErrors({})\n            setSuccess(false);\n            setWorkOrder({\n                customer: '',\n                serviceDate: '',\n                serviceTime: '',\n                serviceDescription: '',\n                serviceType: [],\n                crewMembers: [],\n                prevJobNumber: undefined,\n                notes: '',\n                officeNotes: '',\n                quote: ''\n            });\n        };\n    }, [success]);\n\n    useEffect(() => {\n        if(getUsers.users) {\n            getUsers.users.forEach(user => {\n                if(user.userType === 'employee') {\n                    employeesArray.push(\n                        {\n                            label: `${user.firstName} ${user.lastName}`,\n                            value: user.userId,\n                            name: 'crewMembers'\n                        }\n                    );\n                } else {\n                    customersArray.push(\n                        {\n                            label: `${user.firstName} ${user.lastName}`,\n                            value: user.userId,\n                            name: 'customer'\n                        }\n                    );\n                };\n            });\n        };\n\n        employeesArray.push({ label: 'General Contractor', value: 'General Contractor' });\n\n        setEmployees(employeesArray);\n        setCustomers(customersArray);\n    }, [getUsers]);\n\n    const toggle = e => {\n        setIsOpen(!isOpen);\n        setErrors({});\n    };\n\n    const toggleCheck = (e, warnings) => {\n        setIsOpenCheck(!isOpenCheck);\n        setWarnings({});\n    };\n\n    const handleChange = e => {\n        setWorkOrder({\n            ...workOrder,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSelectChange = e => {\n        setWorkOrder({\n            ...workOrder,\n            [e.name]: e.value\n        });\n    };\n\n    const handleMultiSelectChange = e => {\n        e.forEach(e => {\n            setWorkOrder({\n                ...workOrder,\n                [e.name]: [...workOrder[e.name], e.value]\n            });\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if(workOrder.prevJobNumber === undefined) {\n            warnings.prevJobNumber = 'Previous Job Number';\n        };\n        if(workOrder.notes.trim() === '') {\n            warnings.notes = 'Notes';\n        };\n        if(workOrder.officeNotes.trim() === '') {\n            warnings.officeNotes = 'Office Notes';\n        };\n        if(workOrder.quote.trim() === '') {\n            warnings.quote = 'Quote';\n        };\n\n        if(Object.keys(warnings).length !== 0) {\n            console.log(warnings)\n            toggleCheck(e, warnings);\n        } else {\n            dispatch(addWorkOrder(workOrder));\n        };\n    };\n\n    const handleSubmitCheck = e => {\n        e.preventDefault();\n        dispatch(addWorkOrder(workOrder));\n    };\n\n    return (\n        <div className={hidden ? \"add-work-order-div\": \"\"}>\n            {hidden ? <Button color=\"success\" onClick={toggle}>Create Work Order</Button> : null}\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Create Work Order</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <Label for=\"customer\">Customer</Label>\n                            <Select options={customers} name=\"customer\" onChange={handleSelectChange} className={errors.customer ? 'invalid' : ''} />\n                            <Input type=\"hidden\" disabled invalid={errors.customer ? true : false} />\n                            <FormFeedback>{errors.customer}</FormFeedback>\n                        </FormGroup>\n                        <div className=\"datepicker-div\">\n                            <FormGroup>\n                                <Label for=\"date\">Date</Label>\n                                <Input type=\"date\" name=\"serviceDate\" id=\"serviceDate\" placeholder=\"date placeholder\" onChange={handleChange} invalid={errors.serviceDate ? true : false} />\n                                <FormFeedback>{errors.serviceDate}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"time\">Time</Label>\n                                <Input type=\"time\" name=\"serviceTime\" id=\"serviceTime\" placeholder=\"time placeholder\" onChange={handleChange} invalid={errors.serviceTime ? true : false} />\n                                <FormFeedback>{errors.serviceTime}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"serviceDescription\">Service Description</Label>\n                            <Input type=\"text\" name=\"serviceDescription\" id=\"serviceDescription\" onChange={handleChange} invalid={errors.serviceDescription ? true : false} />\n                            <FormFeedback>{errors.serviceDescription}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"serviceType\">Service Type</Label>\n                            <Select isMulti options={serviceTypes.map(type => ( { label: type, value: type, name: 'serviceType' } ))} name=\"serviceType\" onChange={handleMultiSelectChange} className={errors.serviceType ? 'invalid' : ''} />\n                            <Input type=\"hidden\" disabled invalid={errors.serviceType ? true : false} />\n                            <FormFeedback>{errors.serviceType}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"crewMembers\">Crew Members</Label>\n                            <Select isMulti options={employees} name=\"crewMembers\" onChange={handleMultiSelectChange} className={errors.crewMembers ? 'invalid': ''} />\n                            <Input type=\"hidden\" disabled invalid={errors.crewMembers ? true : false} />\n                            <FormFeedback>{errors.crewMembers}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"prevJobNumber\">Previous Job Number</Label>\n                            <Input type=\"text\" name=\"prevJobNumber\" id=\"prevJobNumber\" onChange={handleChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"notes\">Notes</Label>\n                            <Input type=\"textarea\" name=\"notes\" id=\"notes\" onChange={handleChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"officeNotes\">Office Notes</Label>\n                            <Input type=\"textarea\" name=\"officeNotes\" id=\"officeNotes\" onChange={handleChange} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"quote\">Quote</Label>\n                            <Input type=\"file\" name=\"file\" id=\"file\" onChange={handleChange} />\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" type=\"submit\" onClick={handleSubmit}>Submit</Button>\n                </ModalFooter>\n            </Modal>\n            <Modal isOpen={isOpenCheck} toggle={toggleCheck}>\n                <ModalHeader toggle={toggleCheck}>Warning</ModalHeader>\n                <ModalBody>\n                    <span>The following fields were left blank:</span>\n                    <ul>\n                        {Object.values(warnings).map(warning => (\n                            <li>{warning}</li>\n                        ))}\n                    </ul>\n                    {console.log(warnings)}\n                    <span>Are you sure you want to continue?</span>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" type=\"submit\" onClick={handleSubmitCheck}>YES</Button>\n                    <Button color=\"danger\" onClick={toggleCheck}>NO</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddWorkOrderBtn;\n\nconst serviceTypes = [\n    \"Install\",\n    \"Service\",\n    \"Training\",\n    \"Inspection\",\n    \"Warranty\"\n];"]},"metadata":{},"sourceType":"module"}