{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/customer-page-components/TaskTab.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { Table, Card, Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormFeedback } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { getUsers } from \"../../actions/getUsers\";\nimport { getCustomerTasks } from \"../../actions/getCustomerTasks\";\nimport { addTask } from \"../../actions/addTask\";\nimport \"../../styles/customer.scss\";\n\nconst TaskTab = () => {\n  const [tasks, setTasks] = useState([]);\n  const getTasksFromState = useSelector(state => state.getCustomerTasksReducer.tasks);\n  const [isOpen, setIsOpen] = useState(false);\n  const [task, setTask] = useState({\n    taskDate: \"\",\n    taskTime: \"\",\n    taskDescription: \"\",\n    customerId: \"\",\n    employeeId: \"\"\n  });\n  const [isOpenEdit, setIsOpenEdit] = useState(false);\n  const [currentTask, setCurrentTask] = useState();\n  const success = useSelector(state => state.addTaskReducer.success);\n  const [errors, setErrors] = useState({});\n  const getErrors = useSelector(state => state.addTaskReducer.errors);\n  const [employees, setEmployees] = useState([]);\n  const employeeArray = [];\n  const getUsersFromState = useSelector(state => state.getUsersReducer.users);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomerTasks(customerId));\n    dispatch(getUsers());\n    setTask({ ...task,\n      customerId: customerId\n    });\n  }, []);\n  useEffect(() => {\n    if (getTasksFromState) {\n      setTasks(getTasksFromState);\n    }\n  }, [getTasksFromState]);\n  useEffect(() => {\n    if (getUsersFromState.users) {\n      getUsersFromState.users.map(user => {\n        if (user.userType === \"employee\" && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: \"employeeId\",\n            jobTitle: user.jobTitle\n          });\n        }\n      });\n      setEmployees(employeeArray);\n    }\n  }, [getUsersFromState]);\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n  }, [success]);\n  useEffect(() => {\n    if (getErrors) {\n      setErrors(getErrors);\n    }\n  }, [getErrors]);\n\n  const dateConverter = date => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = time => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = () => {\n    if (isOpen) {\n      setTask({ ...task,\n        taskDate: \"\",\n        taskTime: \"\",\n        taskDescription: \"\",\n        employeeId: \"\"\n      });\n      setErrors({});\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const toggleEdit = (e, task) => {\n    setCurrentTask(task);\n    setIsOpenEdit(!isOpenEdit);\n  };\n\n  const handleChange = e => {\n    setTask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = e => {\n    setTask({ ...task,\n      [e.name]: e.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addTask(task));\n  };\n\n  const handleSubmitEdit = (e, currentTask) => {\n    e.preventDefault();\n  };\n\n  const handleDeleteTask = (e, currentTask) => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-task-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    className: \"task-table-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-headers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Time\")))), tasks ? tasks.tasks ? tasks.tasks.map(task => /*#__PURE__*/React.createElement(Card, {\n    className: \"task-card\",\n    onClick: e => toggleEdit(e, task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    className: \"task-card-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }, task.taskDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }, dateConverter(task.taskDate)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 23\n    }\n  }, timeConverter(task.taskTime))))))) : null : null, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task-date-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"taskDate\",\n    placeholder: \"date placeholder\",\n    onChange: handleChange,\n    invalid: errors.taskDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, errors.taskDate)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"taskTime\",\n    placeholder: \"time placeholder\",\n    onChange: handleChange,\n    invalid: errors.taskTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, errors.taskTime))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, \"Task Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"taskDescription\",\n    onChange: handleChange,\n    invalid: errors.taskDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, errors.taskDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"employeeId\",\n    options: employees,\n    onChange: handleSelectChange,\n    className: errors.employeeId ? \"invalid\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.employeeId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, errors.employeeId)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenEdit,\n    toggle: toggleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, \"Edit Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task-date-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"taskDate\",\n    placeholder: \"date placeholder\",\n    value: currentTask ? currentTask.taskDate : null,\n    onChange: handleChange,\n    invalid: errors.taskDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, errors.taskDate)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"taskTime\",\n    placeholder: \"time placeholder\",\n    value: currentTask ? currentTask.taskTime : null,\n    onChange: handleChange,\n    invalid: errors.taskTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, errors.taskTime))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, \"Task Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"taskDescription\",\n    value: currentTask ? currentTask.taskDescription : null,\n    onChange: handleChange,\n    invalid: errors.taskDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, errors.taskDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"employeeId\",\n    options: employees,\n    onChange: handleSelectChange,\n    defaultValue: currentTask ? {\n      value: currentTask.employeeId\n    } : null,\n    className: errors.employeeId ? \"invalid\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.employeeId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }, errors.employeeId)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: e => handleSubmitEdit(e, currentTask),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: e => handleDeleteTask(e, currentTask),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, \"Complete\"))));\n};\n\nexport default TaskTab;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/customer-page-components/TaskTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useLocation","Table","Card","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","Select","getUsers","getCustomerTasks","addTask","TaskTab","tasks","setTasks","getTasksFromState","state","getCustomerTasksReducer","isOpen","setIsOpen","task","setTask","taskDate","taskTime","taskDescription","customerId","employeeId","isOpenEdit","setIsOpenEdit","currentTask","setCurrentTask","success","addTaskReducer","errors","setErrors","getErrors","employees","setEmployees","employeeArray","getUsersFromState","getUsersReducer","users","dispatch","location","pathArray","pathname","split","length","map","user","userType","active","push","label","firstName","lastName","value","userId","name","jobTitle","toggle","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","toggleEdit","e","handleChange","target","handleSelectChange","handleSubmit","preventDefault","handleSubmitEdit","handleDeleteTask"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Table,\n  Card,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { getUsers } from \"../../actions/getUsers\";\nimport { getCustomerTasks } from \"../../actions/getCustomerTasks\";\nimport { addTask } from \"../../actions/addTask\";\n\nimport \"../../styles/customer.scss\";\n\nconst TaskTab = () => {\n  const [tasks, setTasks] = useState([]);\n  const getTasksFromState = useSelector(\n    (state) => state.getCustomerTasksReducer.tasks\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [task, setTask] = useState({\n    taskDate: \"\",\n    taskTime: \"\",\n    taskDescription: \"\",\n    customerId: \"\",\n    employeeId: \"\",\n  });\n  const [isOpenEdit, setIsOpenEdit] = useState(false);\n  const [currentTask, setCurrentTask] = useState()\n  const success = useSelector((state) => state.addTaskReducer.success);\n  const [errors, setErrors] = useState({});\n  const getErrors = useSelector((state) => state.addTaskReducer.errors);\n  const [employees, setEmployees] = useState([]);\n  const employeeArray = [];\n  const getUsersFromState = useSelector((state) => state.getUsersReducer.users);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomerTasks(customerId));\n    dispatch(getUsers());\n    setTask({\n      ...task,\n      customerId: customerId\n    })\n  }, []);\n\n  useEffect(() => {\n    if (getTasksFromState) {\n      setTasks(getTasksFromState);\n    }\n  }, [getTasksFromState]);\n\n  useEffect(() => {\n    if (getUsersFromState.users) {\n      getUsersFromState.users.map((user) => {\n        if (user.userType === \"employee\" && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: \"employeeId\",\n            jobTitle: user.jobTitle,\n          });\n        }\n      });\n\n      setEmployees(employeeArray);\n    }\n  }, [getUsersFromState]);\n\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n  }, [success]);\n\n  useEffect(() => {\n    if (getErrors) {\n      setErrors(getErrors);\n    }\n  }, [getErrors]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = () => {\n    if (isOpen) {\n      setTask({\n        ...task,\n        taskDate: \"\",\n        taskTime: \"\",\n        taskDescription: \"\",\n        employeeId: \"\",\n      });\n      setErrors({});\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const toggleEdit = (e, task) => {\n    setCurrentTask(task);\n    setIsOpenEdit(!isOpenEdit);\n  };\n\n  const handleChange = (e) => {\n    setTask({\n      ...task,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setTask({\n      ...task,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTask(task));\n  };\n\n  const handleSubmitEdit = (e, currentTask) => {\n    e.preventDefault();\n  };\n\n  const handleDeleteTask = (e, currentTask) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"customer-page-task-tab\">\n      <Table borderless className=\"task-table-header\">\n        <thead>\n          <tr className=\"table-headers\">\n            <th>Task</th>\n            <th>Date</th>\n            <th>Time</th>\n          </tr>\n        </thead>\n      </Table>\n      {tasks\n        ? tasks.tasks\n          ? tasks.tasks.map((task) => (\n              <Card className=\"task-card\" onClick={(e) => toggleEdit(e, task)}>\n                <Table borderless className=\"task-card-table\">\n                  <tbody>\n                    <tr className=\"table-data\">\n                      <td>{task.taskDescription}</td>\n                      <td>{dateConverter(task.taskDate)}</td>\n                      <td>{timeConverter(task.taskTime)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            ))\n          : null\n        : null}\n      <Button outline color=\"success\" onClick={toggle}>\n        Add Task\n      </Button>\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <div className=\"add-task-date-div\">\n              <FormGroup>\n                <Label for=\"taskDate\">Date</Label>\n                <Input\n                  type=\"date\"\n                  name=\"taskDate\"\n                  placeholder=\"date placeholder\"\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"taskTime\">Time</Label>\n                <Input\n                  type=\"time\"\n                  name=\"taskTime\"\n                  placeholder=\"time placeholder\"\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"taskDescription\">Task Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"employeeId\">Assigned To</Label>\n              <Select\n                name=\"employeeId\"\n                options={employees}\n                onChange={handleSelectChange}\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenEdit} toggle={toggleEdit}>\n        <ModalHeader toggle={toggleEdit}>Edit Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitEdit}>\n            <div className=\"add-task-date-div\">\n              <FormGroup>\n                <Label for=\"taskDate\">Date</Label>\n                <Input\n                  type=\"date\"\n                  name=\"taskDate\"\n                  placeholder=\"date placeholder\"\n                  value={currentTask ? currentTask.taskDate : null}\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"taskTime\">Time</Label>\n                <Input\n                  type=\"time\"\n                  name=\"taskTime\"\n                  placeholder=\"time placeholder\"\n                  value={currentTask ? currentTask.taskTime : null}\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"taskDescription\">Task Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                value={currentTask ? currentTask.taskDescription : null}\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"employeeId\">Assigned To</Label>\n              <Select\n                name=\"employeeId\"\n                options={employees}\n                onChange={handleSelectChange}\n                defaultValue={\n                  currentTask ? { value: currentTask.employeeId } : null\n                }\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={(e) => handleSubmitEdit(e, currentTask)}>\n            Edit\n          </Button>\n          <Button color=\"success\" onClick={(e) => handleDeleteTask(e, currentTask)}>\n            Complete\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TaskTab;\n"]},"metadata":{},"sourceType":"module"}