{"ast":null,"code":"import _slicedToArray from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useSelector}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{Card,CardBody,Table}from\"reactstrap\";import\"../../styles/workorder.scss\";var ClosedWorkOrders=function ClosedWorkOrders(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),workOrders=_useState2[0],setWorkOrders=_useState2[1];var getWorkOrders=useSelector(function(state){return state.getWorkOrdersReducer.workOrders;});var history=useHistory();useEffect(function(){var array=[];if(getWorkOrders.workOrders){getWorkOrders.workOrders.forEach(function(workOrder){if(workOrder.status===\"Closed\"){array.push(workOrder);}});}setWorkOrders(array);},[getWorkOrders]);var dateConverter=function dateConverter(date){var dateArray=date.split(\"-\");return\"\".concat(dateArray[1],\"/\").concat(dateArray[2],\"/\").concat(dateArray[0]);};var timeConverter=function timeConverter(time){var timeArray=time.split(\":\");var hour=parseInt(timeArray[0]);var m;if(hour<=11){m=\"AM\";}else{m=\"PM\";}if(hour<=12){var newHour=hour.toString();timeArray[0]=newHour;}else{var _newHour=(hour-12).toString();timeArray[0]=_newHour;}return\"\".concat(timeArray[0],\":\").concat(timeArray[1],\" \").concat(m);};var handleClick=function handleClick(e,workOrder){var jobId=workOrder.workOrderId;history.push(\"workorders/\".concat(jobId));};return/*#__PURE__*/React.createElement(\"div\",{className:\"work-orders-page\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"open-work-orders-title\"},\"Closed Work Orders\"),workOrders?workOrders.map(function(workOrder){return/*#__PURE__*/React.createElement(Card,{className:\"work-order-card\",onClick:function onClick(e){return handleClick(e,workOrder);}},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Table,{borderless:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"W.O. #\"),workOrder.jobNumber?/*#__PURE__*/React.createElement(\"th\",null,\"Job #\"):null,/*#__PURE__*/React.createElement(\"th\",null,\"Customer Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Service Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Service Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Service Time\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,workOrder.workOrderId),workOrder.jobNumber?/*#__PURE__*/React.createElement(\"th\",null,workOrder.jobNumber):null,/*#__PURE__*/React.createElement(\"td\",null,workOrder.customerName),/*#__PURE__*/React.createElement(\"td\",null,workOrder.serviceType.length>1?\"Multi\":workOrder.serviceType),/*#__PURE__*/React.createElement(\"td\",null,dateConverter(workOrder.serviceDate)),/*#__PURE__*/React.createElement(\"td\",null,timeConverter(workOrder.serviceStartTime)))))));}):null);};export default ClosedWorkOrders;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/ClosedWorkOrders.js"],"names":["React","useState","useEffect","useSelector","useHistory","Card","CardBody","Table","ClosedWorkOrders","workOrders","setWorkOrders","getWorkOrders","state","getWorkOrdersReducer","history","array","forEach","workOrder","status","push","dateConverter","date","dateArray","split","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","handleClick","e","jobId","workOrderId","map","jobNumber","customerName","serviceType","length","serviceDate","serviceStartTime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card, CardBody, Table } from \"reactstrap\";\n\nimport \"../../styles/workorder.scss\";\n\nconst ClosedWorkOrders = () => {\n  const [workOrders, setWorkOrders] = useState([]);\n  const getWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const history = useHistory();\n\n  useEffect(() => {\n    const array = [];\n\n    if (getWorkOrders.workOrders) {\n      getWorkOrders.workOrders.forEach((workOrder) => {\n        if (workOrder.status === \"Closed\") {\n          array.push(workOrder);\n        }\n      });\n    }\n\n    setWorkOrders(array);\n  }, [getWorkOrders]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const handleClick = (e, workOrder) => {\n    const jobId = workOrder.workOrderId;\n    history.push(`workorders/${jobId}`);\n  };\n\n  return (\n    <div className=\"work-orders-page\">\n      <h1 className=\"open-work-orders-title\">Closed Work Orders</h1>\n      {workOrders\n        ? workOrders.map((workOrder) => (\n            <Card\n              className=\"work-order-card\"\n              onClick={(e) => handleClick(e, workOrder)}\n            >\n              <CardBody>\n                <Table borderless>\n                  <thead>\n                    <tr>\n                      <th>W.O. #</th>\n                      {workOrder.jobNumber ? <th>Job #</th> : null}\n                      <th>Customer Name</th>\n                      <th>Service Type</th>\n                      <th>Service Date</th>\n                      <th>Service Time</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th>{workOrder.workOrderId}</th>\n                      {workOrder.jobNumber ? (\n                        <th>{workOrder.jobNumber}</th>\n                      ) : null}\n                      <td>{workOrder.customerName}</td>\n                      <td>\n                        {workOrder.serviceType.length > 1\n                          ? \"Multi\"\n                          : workOrder.serviceType}\n                      </td>\n                      <td>{dateConverter(workOrder.serviceDate)}</td>\n                      <td>{timeConverter(workOrder.serviceStartTime)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          ))\n        : null}\n    </div>\n  );\n};\n\nexport default ClosedWorkOrders;\n"]},"metadata":{},"sourceType":"module"}