{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/OpenWorkOrders.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst OpenWorkOrders = () => {\n  const [workOrders, setWorkOrders] = useState([]);\n  const getWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n  useEffect(() => {\n    setWorkOrders(getWorkOrders);\n  }, [getWorkOrders]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, workOrders ? workOrders.map(workOrder => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"workOrder.jobNumber\")) : null);\n};\n\nexport default OpenWorkOrders;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/OpenWorkOrders.js"],"names":["React","useState","useEffect","useSelector","OpenWorkOrders","workOrders","setWorkOrders","getWorkOrders","state","getWorkOrdersReducer","map","workOrder"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMM,aAAa,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BJ,UAArC,CAAjC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,aAAa,CAACC,aAAD,CAAb;AACH,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,UAAU,GACPA,UAAU,CAACK,GAAX,CAAeC,SAAS,iBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADO,GAIT,IALN,CADJ;AASH,CAjBD;;AAmBA,eAAeP,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst OpenWorkOrders = () => {\n    const [workOrders, setWorkOrders] = useState([]);\n    const getWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n\n    useEffect(() => {\n        setWorkOrders(getWorkOrders);\n    }, [getWorkOrders]);\n\n    return (\n        <div>\n            {workOrders ? \n                workOrders.map(workOrder => (\n                    <p>workOrder.jobNumber</p>\n                ))\n            : null}\n        </div>\n    );\n};\n\nexport default OpenWorkOrders;"]},"metadata":{},"sourceType":"module"}