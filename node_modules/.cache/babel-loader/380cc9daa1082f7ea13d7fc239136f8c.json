{"ast":null,"code":"import _defineProperty from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{Table,Modal,ModalHeader,ModalBody,ModalFooter,Button,Form,FormGroup,FormFeedback,Label,Input}from\"reactstrap\";import{editEmployee}from\"../../actions/editEmployee\";import{changeEmployeeStatus}from\"../../actions/changeEmployeeStatus\";import\"../../styles/employee.scss\";var EmployeesTable=function EmployeesTable(props){var _useState=useState({firstName:\"\",lastName:\"\",jobTitle:\"\",tierLevel:undefined,phoneNumber:\"\",email:\"\",userId:\"\",active:undefined}),_useState2=_slicedToArray(_useState,2),curEmployee=_useState2[0],setCurEmployee=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errorsOne=_useState4[0],setErrorsOne=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),successOne=_useState6[0],setSuccessOne=_useState6[1];var getErrorsOne=useSelector(function(state){return state.editEmployeeReducer.errors;});var getSuccessOne=useSelector(function(state){return state.editEmployeeReducer.success;});var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isOpenModalOne=_useState8[0],setIsOpenModalOne=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),successTwo=_useState10[0],setSuccessTwo=_useState10[1];var getSuccessTwo=useSelector(function(state){return state.changeEmployeeStatusReducer.success;});var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isOpenModalTwo=_useState12[0],setIsOpenModalTwo=_useState12[1];var dispatch=useDispatch();var isFirstRun=useRef(true);useEffect(function(){if(isFirstRun.current){isFirstRun.current=false;return;}setErrorsOne(getErrorsOne);},[getErrorsOne]);useEffect(function(){if(getSuccessOne===true){setSuccessOne(true);}if(getSuccessTwo===true){setSuccessTwo(true);}},[getSuccessOne,getSuccessTwo]);useEffect(function(){if(successOne===true){setIsOpenModalOne(false);setErrorsOne({});setSuccessOne(false);setCurEmployee({firstName:\"\",lastName:\"\",jobTitle:\"\",tierLevel:undefined,phoneNumber:\"\",email:\"\",userId:\"\",active:undefined});}if(successTwo===true){setIsOpenModalTwo(false);setSuccessTwo(false);setCurEmployee({firstName:\"\",lastName:\"\",jobTitle:\"\",tierLevel:undefined,phoneNumber:\"\",email:\"\",userId:\"\",active:undefined});}},[successOne,successTwo]);var toggleOne=function toggleOne(e,employee){if(!isOpenModalOne){setCurEmployee({firstName:employee.firstName,lastName:employee.lastName,jobTitle:employee.jobTitle,tierLevel:employee.tierLevel,phoneNumber:employee.phoneNumber,email:employee.email,userId:employee.userId,active:employee.active});}else if(isOpenModalOne){setCurEmployee({firstName:\"\",lastName:\"\",jobTitle:\"\",tierLevel:null,phoneNumber:\"\",email:\"\",userId:\"\",active:undefined});}setIsOpenModalOne(!isOpenModalOne);setErrorsOne({});};var toggleTwo=function toggleTwo(e,employee){if(!isOpenModalTwo){setCurEmployee({firstName:employee.firstName,lastName:employee.lastName,jobTitle:employee.jobTitle,tierLevel:employee.tierLevel,phoneNumber:employee.phoneNumber,email:employee.email,userId:employee.userId,active:employee.active});}else if(isOpenModalTwo){setCurEmployee({firstName:\"\",lastName:\"\",jobTitle:\"\",tierLevel:null,phoneNumber:\"\",email:\"\",userId:\"\",active:undefined});}setIsOpenModalTwo(!isOpenModalTwo);};var handleChange=function handleChange(e){setCurEmployee(_objectSpread(_objectSpread({},curEmployee),{},_defineProperty({},e.target.name,e.target.value)));};var handleSubmitOne=function handleSubmitOne(e){e.preventDefault();dispatch(editEmployee(curEmployee));};var handleSubmitTwo=function handleSubmitTwo(e){e.preventDefault();dispatch(changeEmployeeStatus(curEmployee));};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Table,{hover:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Job Title\"),/*#__PURE__*/React.createElement(\"th\",null,\"Tier Level\"),/*#__PURE__*/React.createElement(\"th\",null,\"Phone Number\"),/*#__PURE__*/React.createElement(\"th\",null,\"Email\"),/*#__PURE__*/React.createElement(\"th\",null),\" \",/*#__PURE__*/React.createElement(\"th\",null),\" \")),/*#__PURE__*/React.createElement(\"tbody\",null,props?props.props.map(function(employee){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{scope:\"row\",className:employee.active?\"\":\"text-muted\"},employee.firstName,\" \",employee.lastName),/*#__PURE__*/React.createElement(\"td\",{className:employee.active?\"\":\"text-muted\"},employee.jobTitle),/*#__PURE__*/React.createElement(\"td\",{className:\"tier-level-col \".concat(employee.active?\"\":\"text-muted\")},employee.tierLevel),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"a\",{className:employee.active?\"\":\"text-muted\",href:\"tel:+1-\".concat(employee.phoneNumber)},employee.phoneNumber)),/*#__PURE__*/React.createElement(\"td\",{className:employee.active?\"\":\"text-muted\"},employee.email),/*#__PURE__*/React.createElement(\"td\",{className:employee.active?\"\":\"text-muted\",onClick:function onClick(e){return toggleOne(e,employee);}},/*#__PURE__*/React.createElement(\"i\",{className:\"fad fa-pen\"})),/*#__PURE__*/React.createElement(\"td\",{className:employee.active?\"\":\"text-muted\",onClick:function onClick(e){return toggleTwo(e,employee);}},/*#__PURE__*/React.createElement(\"i\",{className:\"fad fa-trash\"})));}):null)),/*#__PURE__*/React.createElement(Modal,{isOpen:isOpenModalOne,toggle:toggleOne},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggleOne},\"Edit Employee\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmitOne},/*#__PURE__*/React.createElement(\"div\",{className:\"name-div\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"firstName\"},\"First Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"firstName\",id:\"firstName\",onChange:handleChange,value:curEmployee.firstName,invalid:errorsOne.firstName?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errorsOne.firstName)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"lastName\"},\"Last Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"lastName\",id:\"lastName\",onChange:handleChange,value:curEmployee.lastName,invalid:errorsOne.lastName?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errorsOne.lastName))),/*#__PURE__*/React.createElement(\"div\",{className:\"job-info-div\"},/*#__PURE__*/React.createElement(FormGroup,{className:\"job-title-form-group\"},/*#__PURE__*/React.createElement(Label,{for:\"jobTitle\"},\"Job Title\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"jobTitle\",id:\"jobTitle\",onChange:handleChange,value:curEmployee.jobTitle,invalid:errorsOne.jobTitle?true:false},/*#__PURE__*/React.createElement(\"option\",null,\"Select\"),/*#__PURE__*/React.createElement(\"option\",null,\"Service Technician\"),/*#__PURE__*/React.createElement(\"option\",null,\"Outside Sales\"),/*#__PURE__*/React.createElement(\"option\",null,\"Service Manager\"),/*#__PURE__*/React.createElement(\"option\",null,\"Dispatch\"),/*#__PURE__*/React.createElement(\"option\",null,\"Office Manager\"),/*#__PURE__*/React.createElement(\"option\",null,\"Owner\")),/*#__PURE__*/React.createElement(FormFeedback,null,errorsOne.jobTitle)),/*#__PURE__*/React.createElement(FormGroup,{className:\"tier-level-form-group\"},/*#__PURE__*/React.createElement(Label,{for:\"tierLevel\"},\"Tier Level\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"tierLevel\",id:\"tierLevel\",onChange:handleChange,value:curEmployee.tierLevel,invalid:errorsOne.tierLevel},/*#__PURE__*/React.createElement(\"option\",null,\"Select\"),/*#__PURE__*/React.createElement(\"option\",null,\"1\"),/*#__PURE__*/React.createElement(\"option\",null,\"2\"),/*#__PURE__*/React.createElement(\"option\",null,\"3\")),/*#__PURE__*/React.createElement(FormFeedback,null,errorsOne.tierLevel))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"phoneNumber\"},\"Phone Number\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"phoneNumber\",id:\"phoneNumber\",placeholder:\"XXX-XXX-XXXX\",onChange:handleChange,value:curEmployee.phoneNumber,invalid:errorsOne.phoneNumber}),/*#__PURE__*/React.createElement(FormFeedback,null,errorsOne.phoneNumber)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(Input,{type:\"email\",name:\"email\",id:\"email\",onChange:handleChange,disabled:true,value:curEmployee.email})))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"success\",type:\"submit\",onClick:handleSubmitOne},\"Submit\"))),/*#__PURE__*/React.createElement(Modal,{isOpen:isOpenModalTwo,toggle:toggleTwo},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggleTwo},curEmployee.active?\"Set Employee as Inactive\":\"Set Employee as Active\"),/*#__PURE__*/React.createElement(ModalBody,null,curEmployee.active?\"Would you like to set \".concat(curEmployee.firstName,\"'s status as inactive?\"):\"Would you like to set \".concat(curEmployee.firstName,\"'s status as active?\")),/*#__PURE__*/React.createElement(ModalFooter,{className:\"modal-two-footer\"},/*#__PURE__*/React.createElement(Button,{color:\"success\",type:\"submit\",className:\"modal-two-btn\",onClick:handleSubmitTwo},\"YES\"),/*#__PURE__*/React.createElement(Button,{color:\"danger\",className:\"modal-two-btn\",onClick:toggleTwo},\"NO\"))));};export default EmployeesTable;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/EmployeesTable.js"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Table","Modal","ModalHeader","ModalBody","ModalFooter","Button","Form","FormGroup","FormFeedback","Label","Input","editEmployee","changeEmployeeStatus","EmployeesTable","props","firstName","lastName","jobTitle","tierLevel","undefined","phoneNumber","email","userId","active","curEmployee","setCurEmployee","errorsOne","setErrorsOne","successOne","setSuccessOne","getErrorsOne","state","editEmployeeReducer","errors","getSuccessOne","success","isOpenModalOne","setIsOpenModalOne","successTwo","setSuccessTwo","getSuccessTwo","changeEmployeeStatusReducer","isOpenModalTwo","setIsOpenModalTwo","dispatch","isFirstRun","current","toggleOne","e","employee","toggleTwo","handleChange","target","name","value","handleSubmitOne","preventDefault","handleSubmitTwo","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport { editEmployee } from \"../../actions/editEmployee\";\nimport { changeEmployeeStatus } from \"../../actions/changeEmployeeStatus\";\n\nimport \"../../styles/employee.scss\";\n\nconst EmployeesTable = (props) => {\n  const [curEmployee, setCurEmployee] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    jobTitle: \"\",\n    tierLevel: undefined,\n    phoneNumber: \"\",\n    email: \"\",\n    userId: \"\",\n    active: undefined,\n  });\n  const [errorsOne, setErrorsOne] = useState({});\n  const [successOne, setSuccessOne] = useState(false);\n  const getErrorsOne = useSelector((state) => state.editEmployeeReducer.errors);\n  const getSuccessOne = useSelector(\n    (state) => state.editEmployeeReducer.success\n  );\n  const [isOpenModalOne, setIsOpenModalOne] = useState(false);\n  const [successTwo, setSuccessTwo] = useState(false);\n  const getSuccessTwo = useSelector(\n    (state) => state.changeEmployeeStatusReducer.success\n  );\n  const [isOpenModalTwo, setIsOpenModalTwo] = useState(false);\n  const dispatch = useDispatch();\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    setErrorsOne(getErrorsOne);\n  }, [getErrorsOne]);\n\n  useEffect(() => {\n    if (getSuccessOne === true) {\n      setSuccessOne(true);\n    }\n    if (getSuccessTwo === true) {\n      setSuccessTwo(true);\n    }\n  }, [getSuccessOne, getSuccessTwo]);\n\n  useEffect(() => {\n    if (successOne === true) {\n      setIsOpenModalOne(false);\n      setErrorsOne({});\n      setSuccessOne(false);\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: undefined,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n    if (successTwo === true) {\n      setIsOpenModalTwo(false);\n      setSuccessTwo(false);\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: undefined,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n  }, [successOne, successTwo]);\n\n  const toggleOne = (e, employee) => {\n    if (!isOpenModalOne) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email,\n        userId: employee.userId,\n        active: employee.active,\n      });\n    } else if (isOpenModalOne) {\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: null,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n    setIsOpenModalOne(!isOpenModalOne);\n    setErrorsOne({});\n  };\n\n  const toggleTwo = (e, employee) => {\n    if (!isOpenModalTwo) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email,\n        userId: employee.userId,\n        active: employee.active,\n      });\n    } else if (isOpenModalTwo) {\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: null,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n    setIsOpenModalTwo(!isOpenModalTwo);\n  };\n\n  const handleChange = (e) => {\n    setCurEmployee({\n      ...curEmployee,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmitOne = (e) => {\n    e.preventDefault();\n    dispatch(editEmployee(curEmployee));\n  };\n\n  const handleSubmitTwo = (e) => {\n    e.preventDefault();\n    dispatch(changeEmployeeStatus(curEmployee));\n  };\n\n  return (\n    <div>\n      <Table hover>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Job Title</th>\n            <th>Tier Level</th>\n            <th>Phone Number</th>\n            <th>Email</th>\n            <th></th> {/*This empty header is for the edit button*/}\n            <th></th> {/*This empty header is for the change status button*/}\n          </tr>\n        </thead>\n        <tbody>\n          {props\n            ? props.props.map((employee) => (\n                <tr>\n                  <th\n                    scope=\"row\"\n                    className={employee.active ? \"\" : \"text-muted\"}\n                  >\n                    {employee.firstName} {employee.lastName}\n                  </th>\n                  <td className={employee.active ? \"\" : \"text-muted\"}>\n                    {employee.jobTitle}\n                  </td>\n                  <td\n                    className={`tier-level-col ${\n                      employee.active ? \"\" : \"text-muted\"\n                    }`}\n                  >\n                    {employee.tierLevel}\n                  </td>\n                  <td>\n                    <a\n                      className={employee.active ? \"\" : \"text-muted\"}\n                      href={`tel:+1-${employee.phoneNumber}`}\n                    >\n                      {employee.phoneNumber}\n                    </a>\n                  </td>\n                  <td className={employee.active ? \"\" : \"text-muted\"}>\n                    {employee.email}\n                  </td>\n                  <td\n                    className={employee.active ? \"\" : \"text-muted\"}\n                    onClick={(e) => toggleOne(e, employee)}\n                  >\n                    <i className=\"fad fa-pen\" />\n                  </td>\n                  <td\n                    className={employee.active ? \"\" : \"text-muted\"}\n                    onClick={(e) => toggleTwo(e, employee)}\n                  >\n                    <i className=\"fad fa-trash\" />\n                  </td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n      <Modal isOpen={isOpenModalOne} toggle={toggleOne}>\n        <ModalHeader toggle={toggleOne}>Edit Employee</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitOne}>\n            <div className=\"name-div\">\n              <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  onChange={handleChange}\n                  value={curEmployee.firstName}\n                  invalid={errorsOne.firstName ? true : false}\n                />\n                <FormFeedback>{errorsOne.firstName}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  onChange={handleChange}\n                  value={curEmployee.lastName}\n                  invalid={errorsOne.lastName ? true : false}\n                />\n                <FormFeedback>{errorsOne.lastName}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"job-info-div\">\n              <FormGroup className=\"job-title-form-group\">\n                <Label for=\"jobTitle\">Job Title</Label>\n                <Input\n                  type=\"select\"\n                  name=\"jobTitle\"\n                  id=\"jobTitle\"\n                  onChange={handleChange}\n                  value={curEmployee.jobTitle}\n                  invalid={errorsOne.jobTitle ? true : false}\n                >\n                  <option>Select</option>\n                  <option>Service Technician</option>\n                  <option>Outside Sales</option>\n                  <option>Service Manager</option>\n                  <option>Dispatch</option>\n                  <option>Office Manager</option>\n                  <option>Owner</option>\n                </Input>\n                <FormFeedback>{errorsOne.jobTitle}</FormFeedback>\n              </FormGroup>\n              <FormGroup className=\"tier-level-form-group\">\n                <Label for=\"tierLevel\">Tier Level</Label>\n                <Input\n                  type=\"select\"\n                  name=\"tierLevel\"\n                  id=\"tierLevel\"\n                  onChange={handleChange}\n                  value={curEmployee.tierLevel}\n                  invalid={errorsOne.tierLevel}\n                >\n                  <option>Select</option>\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                </Input>\n                <FormFeedback>{errorsOne.tierLevel}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"phoneNumber\">Phone Number</Label>\n              <Input\n                type=\"text\"\n                name=\"phoneNumber\"\n                id=\"phoneNumber\"\n                placeholder=\"XXX-XXX-XXXX\"\n                onChange={handleChange}\n                value={curEmployee.phoneNumber}\n                invalid={errorsOne.phoneNumber}\n              />\n              <FormFeedback>{errorsOne.phoneNumber}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                onChange={handleChange}\n                disabled\n                value={curEmployee.email}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" type=\"submit\" onClick={handleSubmitOne}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenModalTwo} toggle={toggleTwo}>\n        <ModalHeader toggle={toggleTwo}>\n          {curEmployee.active\n            ? \"Set Employee as Inactive\"\n            : \"Set Employee as Active\"}\n        </ModalHeader>\n        <ModalBody>\n          {curEmployee.active\n            ? `Would you like to set ${curEmployee.firstName}'s status as inactive?`\n            : `Would you like to set ${curEmployee.firstName}'s status as active?`}\n        </ModalBody>\n        <ModalFooter className=\"modal-two-footer\">\n          <Button\n            color=\"success\"\n            type=\"submit\"\n            className=\"modal-two-btn\"\n            onClick={handleSubmitTwo}\n          >\n            YES\n          </Button>\n          <Button color=\"danger\" className=\"modal-two-btn\" onClick={toggleTwo}>\n            NO\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EmployeesTable;\n"]},"metadata":{},"sourceType":"module"}