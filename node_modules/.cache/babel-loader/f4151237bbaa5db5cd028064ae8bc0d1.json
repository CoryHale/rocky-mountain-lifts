{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Task.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Card, CardHeader, CardBody, Form, FormGroup, FormFeedback, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Table } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { getTasks } from \"../../actions/getTasks\";\nimport { getWorkOrders } from \"../../actions/getWorkOrders\";\nimport { getEmployees } from \"../../actions/getEmployees\";\nimport { editTask } from \"../../actions/editTask\";\nimport { deleteTask } from \"../../actions/deleteTask\";\nimport \"../../styles/task.scss\";\n\nconst Task = () => {\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector(state => state.getTasksReducer.tasks);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(state => state.getWorkOrdersReducer.workOrders);\n  const [employees, setEmployees] = useState();\n  const fetchEmployees = useSelector(state => state.getEmployeesReducer.employees);\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState();\n  const editSuccess = useSelector(state => state.editTaskReducer.success);\n  const deleteSuccess = useSelector(state => state.deleteTaskReducer.success);\n  const [errors, setErrors] = useState({\n    taskDescription: \"\",\n    taskDate: \"\",\n    taskTime: \"\",\n    employeeId: \"\"\n  });\n  const {\n    currentUser\n  } = useAuth();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(getTasks());\n    dispatch(getWorkOrders());\n    dispatch(getEmployees());\n  }, []);\n  useEffect(() => {\n    setTasks(fetchTasks.tasks);\n  }, [fetchTasks]);\n  useEffect(() => {\n    const array = [];\n\n    if (fetchWorkOrders.workOrders) {\n      fetchWorkOrders.workOrders.forEach(workOrder => {\n        if (workOrder.crewMembers.includes(currentUser.uid) && workOrder.status !== \"Closed\") {\n          array.push(workOrder);\n        }\n      });\n    }\n\n    setWorkOrders(array);\n  }, [fetchWorkOrders]);\n  useEffect(() => {\n    const array = [];\n\n    if (fetchEmployees.employees) {\n      fetchEmployees.employees.forEach(employee => {\n        if (employee.active === true) {\n          array.push({\n            label: `${employee.firstName} ${employee.lastName}`,\n            value: employee.userId,\n            name: \"employeeId\",\n            jobTitle: employee.jobTitle\n          });\n        }\n      });\n      setEmployees(array);\n    }\n  }, [fetchEmployees]);\n  useEffect(() => {\n    if (deleteSuccess || editSuccess) {\n      setIsOpen(false);\n    }\n  }, [deleteSuccess, editSuccess]);\n\n  const dateConverter = date => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = time => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = (e, task) => {\n    console.log(task);\n    setCurrentTask(task);\n    setIsOpen(!isOpen);\n  };\n\n  const goToWorkOrder = (e, workOrderId) => {\n    history.push(`/dashboard/workorders/${workOrderId}`);\n  };\n\n  const handleChange = e => {\n    setCurrentTask({ ...currentTask,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = e => {\n    setCurrentTask({ ...currentTask,\n      [e.name]: e.value\n    });\n  };\n\n  const handleEditTask = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(editTask(currentTask));\n  };\n\n  const handleDeleteTask = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(deleteTask(currentTask.taskId));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, \"Tasks\"), tasks ? tasks.map(task => /*#__PURE__*/React.createElement(Card, {\n    onClick: e => toggle(e, task),\n    className: \"tasks-page-task-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, \"Time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, task.taskDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, dateConverter(task.taskDate)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, timeConverter(task.taskTime))))))) : null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, \"Work Orders\"), workOrders ? workOrders.map(workOrder => /*#__PURE__*/React.createElement(Card, {\n    onClick: e => goToWorkOrder(e, workOrder.workOrderId),\n    className: \"tasks-page-task-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, \"Work Order #\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, \"Service Date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, workOrder.workOrderId), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, workOrder.customerName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, workOrder.serviceDate)))))) : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleEditTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"taskDescription\",\n    value: currentTask ? currentTask.taskDescription : null,\n    onChange: handleChange,\n    invalid: errors.taskDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, errors.taskDescription)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    placeholder: \"date placeholder\",\n    name: \"taskDate\",\n    value: currentTask ? currentTask.taskDate : null,\n    onChange: handleChange,\n    invalid: errors.taskDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, errors.taskDate)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    placeholder: \"time placeholder\",\n    name: \"taskTime\",\n    value: currentTask ? currentTask.taskTime : null,\n    onChange: handleChange,\n    invalid: errors.taskTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, errors.taskTime))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(Select, {\n    options: employees,\n    defaultValue: currentTask ? {\n      value: currentTask.employeeId\n    } : null,\n    onChange: handleSelectChange,\n    className: errors.employeeId ? \"invalid\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.employeeId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, errors.employeeId)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: e => handleEditTask(e, currentTask),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: e => handleDeleteTask(e, currentTask),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, \"Complete\"))));\n};\n\nexport default Task;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/Task.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Button","Card","CardHeader","CardBody","Form","FormGroup","FormFeedback","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","Table","Select","useHistory","useAuth","getTasks","getWorkOrders","getEmployees","editTask","deleteTask","Task","tasks","setTasks","fetchTasks","state","getTasksReducer","workOrders","setWorkOrders","fetchWorkOrders","getWorkOrdersReducer","employees","setEmployees","fetchEmployees","getEmployeesReducer","isOpen","setIsOpen","currentTask","setCurrentTask","editSuccess","editTaskReducer","success","deleteSuccess","deleteTaskReducer","errors","setErrors","taskDescription","taskDate","taskTime","employeeId","currentUser","dispatch","history","array","forEach","workOrder","crewMembers","includes","uid","status","push","employee","active","label","firstName","lastName","value","userId","name","jobTitle","dateConverter","date","dateArray","split","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","toggle","e","task","console","log","goToWorkOrder","workOrderId","handleChange","target","handleSelectChange","handleEditTask","preventDefault","handleDeleteTask","taskId","map","customerName","serviceDate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { getTasks } from \"../../actions/getTasks\";\nimport { getWorkOrders } from \"../../actions/getWorkOrders\";\nimport { getEmployees } from \"../../actions/getEmployees\";\nimport { editTask } from \"../../actions/editTask\";\nimport { deleteTask } from \"../../actions/deleteTask\";\n\nimport \"../../styles/task.scss\";\n\nconst Task = () => {\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector((state) => state.getTasksReducer.tasks);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const [employees, setEmployees] = useState();\n  const fetchEmployees = useSelector(\n    (state) => state.getEmployeesReducer.employees\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState();\n  const editSuccess = useSelector((state) => state.editTaskReducer.success);\n  const deleteSuccess = useSelector((state) => state.deleteTaskReducer.success);\n  const [errors, setErrors] = useState({\n    taskDescription: \"\",\n    taskDate: \"\",\n    taskTime: \"\",\n    employeeId: \"\",\n  });\n  const { currentUser } = useAuth();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(getTasks());\n    dispatch(getWorkOrders());\n    dispatch(getEmployees());\n  }, []);\n\n  useEffect(() => {\n    setTasks(fetchTasks.tasks);\n  }, [fetchTasks]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchWorkOrders.workOrders) {\n      fetchWorkOrders.workOrders.forEach((workOrder) => {\n        if (\n          workOrder.crewMembers.includes(currentUser.uid) &&\n          workOrder.status !== \"Closed\"\n        ) {\n          array.push(workOrder);\n        }\n      });\n    }\n\n    setWorkOrders(array);\n  }, [fetchWorkOrders]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchEmployees.employees) {\n      fetchEmployees.employees.forEach((employee) => {\n        if (employee.active === true) {\n          array.push({\n            label: `${employee.firstName} ${employee.lastName}`,\n            value: employee.userId,\n            name: \"employeeId\",\n            jobTitle: employee.jobTitle,\n          });\n        }\n      });\n\n      setEmployees(array);\n    }\n  }, [fetchEmployees]);\n\n  useEffect(() => {\n    if (deleteSuccess || editSuccess) {\n      setIsOpen(false);\n    }\n  }, [deleteSuccess, editSuccess]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = (e, task) => {\n    console.log(task);\n    setCurrentTask(task);\n    setIsOpen(!isOpen);\n  };\n\n  const goToWorkOrder = (e, workOrderId) => {\n    history.push(`/dashboard/workorders/${workOrderId}`);\n  };\n\n  const handleChange = (e) => {\n    setCurrentTask({\n      ...currentTask,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setCurrentTask({\n      ...currentTask,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleEditTask = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(editTask(currentTask));\n  };\n\n  const handleDeleteTask = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(deleteTask(currentTask.taskId));\n  };\n\n  return (\n    <div className=\"tasks-page\">\n      <h1>Tasks</h1>\n      {tasks\n        ? tasks.map((task) => (\n            <Card\n              onClick={(e) => toggle(e, task)}\n              className=\"tasks-page-task-card\"\n            >\n              <Table borderless>\n                <thead>\n                  <tr>\n                    <th>Task</th>\n                    <th>Date</th>\n                    <th>Time</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{task.taskDescription}</td>\n                    <td>{dateConverter(task.taskDate)}</td>\n                    <td>{timeConverter(task.taskTime)}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          ))\n        : null}\n      <h1>Work Orders</h1>\n      {workOrders\n        ? workOrders.map((workOrder) => (\n            <Card\n              onClick={(e) => goToWorkOrder(e, workOrder.workOrderId)}\n              className=\"tasks-page-task-card\"\n            >\n              <Table borderless>\n                <thead>\n                  <tr>\n                    <th>Work Order #</th>\n                    <th>Customer</th>\n                    <th>Service Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{workOrder.workOrderId}</td>\n                    <td>{workOrder.customerName}</td>\n                    <td>{workOrder.serviceDate}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          ))\n        : null}\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleEditTask}>\n            <FormGroup>\n              <Label>Task</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                value={currentTask ? currentTask.taskDescription : null}\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <div>\n              <FormGroup>\n                <Label>Date</Label>\n                <Input\n                  type=\"date\"\n                  placeholder=\"date placeholder\"\n                  name=\"taskDate\"\n                  value={currentTask ? currentTask.taskDate : null}\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>Time</Label>\n                <Input\n                  type=\"time\"\n                  placeholder=\"time placeholder\"\n                  name=\"taskTime\"\n                  value={currentTask ? currentTask.taskTime : null}\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label>Assigned To</Label>\n              <Select\n                options={employees}\n                defaultValue={\n                  currentTask ? { value: currentTask.employeeId } : null\n                }\n                onChange={handleSelectChange}\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"danger\"\n            onClick={(e) => handleEditTask(e, currentTask)}\n          >\n            Edit\n          </Button>\n          <Button\n            color=\"success\"\n            onClick={(e) => handleDeleteTask(e, currentTask)}\n          >\n            Complete\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}