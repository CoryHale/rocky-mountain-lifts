{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/TasksListContent.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, CardHeader, CardBody, Table } from 'reactstrap';\nimport '../../styles/employee-dashboard.scss';\n\nconst TasksListContent = () => {\n  const [tasks, setTasks] = useState([]);\n  const getTasks = useSelector(state => state.getTasksReducer.tasks);\n  useEffect(() => {\n    setTasks(getTasks.tasks);\n  }, [getTasks]);\n\n  const dateConverter = date => {\n    const dateArray = date.split('-');\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = time => {\n    const timeArray = time.split(':');\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = 'AM';\n    } else {\n      m = 'PM';\n    }\n\n    ;\n\n    if (hour === 0) {\n      const newHour = '12';\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    ;\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Tasks\"), tasks ? tasks.map(task => /*#__PURE__*/React.createElement(Card, {\n    className: \"tasks-page-task-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, \"Time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, task.taskDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, dateConverter(task.taskDate)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, timeConverter(task.taskTime))))))) : null);\n};\n\nexport default TasksListContent;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/TasksListContent.js"],"names":["React","useState","useEffect","useSelector","Card","CardHeader","CardBody","Table","TasksListContent","tasks","setTasks","getTasks","state","getTasksReducer","dateConverter","date","dateArray","split","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","map","task","taskDescription","taskDate","taskTime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    Table\n} from 'reactstrap';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst TasksListContent = () => {\n    const [tasks, setTasks] = useState([]);\n    const getTasks = useSelector(state => state.getTasksReducer.tasks);\n\n    useEffect(() => {\n        setTasks(getTasks.tasks);\n    }, [getTasks]);\n\n    const dateConverter = date => {\n        const dateArray = date.split('-');\n        return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    };\n\n    const timeConverter = time => {\n        const timeArray = time.split(':');\n        const hour = parseInt(timeArray[0]);\n        let m;\n\n        if(hour <= 11) {\n            m = 'AM';\n        } else {\n            m = 'PM';\n        };\n\n        if(hour === 0) {\n            const newHour = '12';\n            timeArray[0] = newHour;\n        } else if(hour <= 12) {\n            const newHour = hour.toString();\n            timeArray[0] = newHour;\n        } else {\n            const newHour = (hour - 12).toString();\n            timeArray[0] = newHour;\n        };\n\n        return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    };\n\n    return (\n        <div className=\"tasks-page\">\n        <h1>Tasks</h1>\n        {tasks ?\n            tasks.map(task => (\n                <Card className=\"tasks-page-task-card\">\n                    <Table borderless>\n                        <thead>\n                            <tr>\n                                <th>Task</th>\n                                <th>Date</th>\n                                <th>Time</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{task.taskDescription}</td>\n                                <td>{dateConverter(task.taskDate)}</td>\n                                <td>{timeConverter(task.taskTime)}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Card>\n            )) :\n            null\n        }\n        </div>\n    );\n};\n\nexport default TasksListContent;"]},"metadata":{},"sourceType":"module"}