{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/WorkOrder.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { Form, FormGroup, Label, Input, FormFeedback, Button, Modal, ModalHeader, ModalBody, ModalFooter, Table } from \"reactstrap\";\nimport Select from \"react-select\";\nimport SignatureCanvas from \"react-signature-canvas\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { getWorkOrder } from \"../../actions/getWorkOrder\";\nimport { getUsers } from \"../../actions/getUsers\";\nimport { workOrderReviewSubmit } from \"../../actions/workOrderReviewSubmit\";\nimport \"../../styles/workorder.scss\";\n\nconst WorkOrder = () => {\n  const [workOrder, setWorkOrder] = useState({});\n  const [customer, setCustomer] = useState({});\n  const [mapsAddress, setMapsAddress] = useState(\"\");\n  const [employees, setEmployees] = useState([]);\n  const getWorkOrderFromState = useSelector(state => state.getWorkOrderReducer.workOrder);\n  const fetchUsers = useSelector(state => state.getWorkOrderReducer.users);\n  const [allEmployees, setAllEmployees] = useState();\n  const fetchAllUsers = useSelector(state => state.getUsersReducer.users);\n  const [isOpenServiceModal, setIsOpenServiceModal] = useState(false);\n  const [service, setService] = useState({\n    make: \"\",\n    type: \"\",\n    model: \"\",\n    serialNumber: \"\",\n    bayNumber: \"\",\n    serviceDone: \"\",\n    billableHours: null,\n    partsUsed: [],\n    partsNeeded: []\n  });\n  const [serviceErrors, setServiceErrors] = useState({});\n  const [partUsed, setPartUsed] = useState({\n    quantity: \"\",\n    partDescription: \"\",\n    partNumber: \"\",\n    images: []\n  });\n  const [partUsedErrors, setPartUsedErrors] = useState({});\n  const [partNeeded, setPartNeeded] = useState({\n    quantity: \"\",\n    partDescription: \"\",\n    partNumber: \"\",\n    images: []\n  });\n  const [partNeededErrors, setPartNeededErrors] = useState({});\n  const [isOpenPartUsed, setIsOpenPartUsed] = useState(false);\n  const [isOpenPartNeeded, setIsOpenPartNeeded] = useState(false);\n  const [hideOfficeNotes, setHideOfficeNotes] = useState(false);\n  const [hideSignaturePad, setHideSignaturePad] = useState(true);\n  const [hideSubmitForSignatureButton, setHideSubmitForSignatureButton] = useState(false);\n  const [hideSubmitForReviewButton, setHideSubmitForReviewButton] = useState(true);\n  let sigPad = {};\n  const [flag, setFlag] = useState(false);\n  const [waitingForReview, setWaitingForReview] = useState(false);\n  const success = useSelector(state => state.workOrderReviewSubmitReducer.success);\n  const {\n    currentUser\n  } = useAuth();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const jobId = pathArray[pathArray.length - 1];\n    dispatch(getWorkOrder(jobId));\n  }, []);\n  useEffect(() => {\n    if (getWorkOrderFromState) {\n      setWorkOrder({ ...getWorkOrderFromState,\n        crewPunches: []\n      });\n    }\n  }, [getWorkOrderFromState]);\n  useEffect(() => {\n    let crewMembers = [];\n\n    if (fetchUsers) {\n      fetchUsers.forEach(user => {\n        if (user.userType === \"customer\") {\n          setCustomer(user);\n        } else {\n          crewMembers.push(user);\n        }\n      });\n      setEmployees(crewMembers);\n    }\n  }, [fetchUsers]);\n  useEffect(() => {\n    const array = [];\n\n    if (fetchAllUsers) {\n      fetchAllUsers.forEach(user => {\n        if (user.userType === \"employee\") {\n          array.push(user);\n          console.log(array);\n        }\n      });\n    }\n\n    setAllEmployees(array);\n  }, [fetchAllUsers]);\n  console.log(allEmployees);\n  useEffect(() => {\n    if (customer) {\n      addressConverter(customer);\n    }\n  }, [customer]);\n  useEffect(() => {\n    if (flag) {\n      dispatch(workOrderReviewSubmit(workOrder));\n      setHideSubmitForReviewButton(true);\n    }\n  }, [flag]);\n  useEffect(() => {\n    if (success) {\n      setWaitingForReview(true);\n    }\n  }, [success]);\n\n  const typeConverter = types => {\n    if (types) {\n      if (types.length === 1) {\n        return types;\n      } else {\n        return types.join(\", \");\n      }\n    }\n  };\n\n  const dateConverter = date => {\n    if (date) {\n      const dateArray = date.split(\"-\");\n      return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    }\n  };\n\n  const timeConverter = time => {\n    if (time) {\n      const timeArray = time.split(\":\");\n      const hour = parseInt(timeArray[0]);\n      let m;\n\n      if (hour <= 11) {\n        m = \"AM\";\n      } else {\n        m = \"PM\";\n      }\n\n      if (hour <= 12) {\n        const newHour = hour.toString();\n        timeArray[0] = newHour;\n      } else {\n        const newHour = (hour - 12).toString();\n        timeArray[0] = newHour;\n      }\n\n      return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    }\n  };\n\n  const addressConverter = customer => {\n    if (customer.shopAddress) {\n      const address = customer.shopAddress.address;\n      const city = customer.shopAddress.city;\n      const state = customer.shopAddress.state;\n      const zipcode = customer.shopAddress.zipcode;\n      let newAddress = \"\";\n      let newCity = \"\";\n\n      if (address) {\n        newAddress = address.split(\" \").join(\"+\");\n      }\n\n      if (city) {\n        newCity = city.split(\" \").join(\"+\");\n      }\n\n      const searchableAddress = `${newAddress},+${newCity},+${state}+${zipcode}`;\n      setMapsAddress(searchableAddress);\n    }\n  };\n\n  const crewConverter = members => {\n    let crewNames = [];\n\n    if (members) {\n      members.forEach(member => {\n        crewNames.push(`${member.firstName} ${member.lastName}`);\n      });\n\n      if (crewNames.length === 1) {\n        return crewNames;\n      } else {\n        return crewNames.join(\", \");\n      }\n    }\n  };\n\n  const crewMemberConverter = crewId => {\n    console.log(crewId);\n    allEmployees.forEach(employee => {\n      console.log(employee);\n\n      if (employee.userId === crewId) {\n        return `${employee.firstName} ${employee.lastName}`;\n      }\n    });\n  };\n\n  const clockIn = () => {\n    const date = new Date();\n    const time = date.getTime();\n\n    if (workOrder.crewPunches.length === 0) {\n      setWorkOrder({ ...workOrder,\n        crewPunches: [{\n          crewId: currentUser.uid,\n          timeAccrued: 0,\n          clockIn: time\n        }]\n      });\n    } else {\n      workOrder.crewPunches.forEach(punch => {\n        if (punch.crewId === currentUser.uid) {\n          setWorkOrder({ ...workOrder,\n            crewPunches: [...workOrder.crewPunches, { ...punch,\n              clockIn: time\n            }]\n          });\n        } else {\n          setWorkOrder({ ...workOrder,\n            crewPunches: [...workOrder.crewPunches, {\n              crewId: currentUser.uid,\n              timeAccrued: 0,\n              clockIn: time\n            }]\n          });\n        }\n      });\n    }\n  };\n\n  console.log(workOrder.crewPunches);\n\n  const clockOut = () => {\n    const date = new Date();\n    const time = date.getTime();\n\n    if (workOrder.crewPunches.length === 0) {\n      alert(\"Please clock in first\");\n    } else {\n      workOrder.crewPunches.forEach(punch => {\n        if (punch.crewId === currentUser.uid) {\n          if (punch.clockIn === null) {\n            alert(\"Please clock in first\");\n          } else {\n            setWorkOrder({ ...workOrder,\n              crewPunches: [...workOrder.crewPunches, { ...punch,\n                timeAccrued: punch.timeAccrued += time - punch.clockIn,\n                clockIn: null\n              }]\n            });\n          }\n        }\n      });\n    }\n  };\n\n  const jobTimeConverter = accruedTime => {\n    const seconds = Math.floor(accruedTime / 1000 % 60);\n    const minutes = Math.floor(accruedTime / (1000 * 60) % 60);\n    const hours = Math.floor(accruedTime / (1000 * 60 * 60) % 24);\n    const trueHours = hours < 10 ? \"0\" + hours : hours;\n    const trueMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n    const trueSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n    return trueHours + \":\" + trueMinutes + \":\" + trueSeconds;\n  };\n\n  const isClockedIn = uid => {\n    if (workOrder.crewPunches) {\n      workOrder.crewPunches.forEach(punch => {\n        if (punch.crewId === uid) {\n          if (punch.clockIn !== null) {\n            return true;\n          }\n        }\n      });\n    }\n\n    return false;\n  };\n\n  const toggleServiceModal = () => {\n    if (isOpenServiceModal) {\n      setServiceErrors({});\n    }\n\n    setIsOpenServiceModal(!isOpenServiceModal);\n  };\n\n  const handleChangeService = e => {\n    setService({ ...service,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitService = e => {\n    e.preventDefault();\n    const errors = {};\n\n    if (service.make.trim() === \"\") {\n      errors.make = \"Must not be empty\";\n    }\n\n    if (service.type.trim() === \"\") {\n      errors.type = \"Must not be empty\";\n    }\n\n    if (service.model.trim() === \"\") {\n      errors.model = \"Must not be empty\";\n    }\n\n    if (service.serialNumber.trim() === \"\") {\n      errors.serialNumber = \"Must not be empty\";\n    }\n\n    if (service.serviceDone.trim() === \"\") {\n      errors.serviceDone = \"Must not be empty\";\n    }\n\n    if (service.billableHours === null) {\n      errors.billableHours = \"Must not be empty\";\n    } else if (service.billableHours.trim() === \"\") {\n      errors.billableHours = \"Must not be empty\";\n    } else if (service.billableHours % 0.5 !== 0 || service.billableHours < 0) {\n      errors.billableHours = \"Billable hours must be priced to the next half hour\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      setServiceErrors(errors);\n    } else {\n      if (!workOrder.serviceDone) {\n        setWorkOrder({ ...workOrder,\n          serviceDone: [service]\n        });\n      } else {\n        setWorkOrder({ ...workOrder,\n          serviceDone: [...workOrder.serviceDone, service]\n        });\n      }\n\n      setService({\n        make: \"\",\n        type: \"\",\n        model: \"\",\n        serialNumber: \"\",\n        bayNumber: \"\",\n        serviceDone: \"\",\n        billableHours: null,\n        partsUsed: [],\n        partsNeeded: []\n      });\n      setIsOpenServiceModal(false);\n      setServiceErrors({});\n    }\n  };\n\n  const togglePartUsed = () => {\n    setIsOpenPartUsed(!isOpenPartUsed);\n  };\n\n  const togglePartNeeded = () => {\n    setIsOpenPartNeeded(!isOpenPartNeeded);\n  };\n\n  const handleChangePartUsed = e => {\n    setPartUsed({ ...partUsed,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitPartUsed = e => {\n    e.preventDefault();\n    const errors = {};\n\n    if (partUsed.quantity.trim() === \"\") {\n      errors.quantity = \"Must not be empty\";\n    }\n\n    if (partUsed.partDescription.trim() === \"\") {\n      errors.partDescription = \"Must not be empty\";\n    }\n\n    if (partUsed.partNumber.trim() === \"\") {\n      errors.partNumber = \"Must not be empty\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      setPartUsedErrors(errors);\n    } else {\n      setService({ ...service,\n        partsUsed: [...service.partsUsed, partUsed]\n      });\n      setPartUsed({\n        quantity: \"\",\n        partDescription: \"\",\n        partNumber: \"\",\n        images: []\n      });\n      setIsOpenPartUsed(false);\n      setPartUsedErrors({});\n    }\n  };\n\n  const handleChangePartNeeded = e => {\n    setPartNeeded({ ...partNeeded,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitPartNeeded = e => {\n    e.preventDefault();\n    const errors = {};\n\n    if (partNeeded.quantity.trim() === \"\") {\n      errors.quantity = \"Must not be empty\";\n    }\n\n    if (partNeeded.partDescription.trim() === \"\") {\n      errors.partDescription = \"Must not be empty\";\n    }\n\n    if (partNeeded.partNumber.trim() === \"\") {\n      errors.partNumber = \"Must not be empty\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      setPartNeededErrors(errors);\n    } else {\n      setService({ ...service,\n        partsNeeded: [...service.partsNeeded, partNeeded]\n      });\n      setPartNeeded({\n        quantity: \"\",\n        partDescription: \"\",\n        partNumber: \"\",\n        images: []\n      });\n      setIsOpenPartNeeded(false);\n      setPartNeededErrors({});\n    }\n  };\n\n  const handleSubmitForSignature = e => {\n    e.preventDefault();\n    setHideOfficeNotes(true);\n    setHideSignaturePad(false);\n    setHideSubmitForSignatureButton(true);\n    setHideSubmitForReviewButton(false);\n  };\n\n  const clearSignaturePad = e => {\n    sigPad.clear();\n  };\n\n  const handleSubmitForReview = e => {\n    e.preventDefault();\n    setWorkOrder({ ...workOrder,\n      signature: sigPad.getTrimmedCanvas().toDataURL(\"image/png\")\n    });\n    setFlag(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-order-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 5\n    }\n  }, workOrder ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work-order-page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 11\n    }\n  }, `Work Order #${workOrder.workOrderId}`), /*#__PURE__*/React.createElement(Form, {\n    className: \"work-order-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 15\n    }\n  }, \"Customer Name\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: customer.businessName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"customerAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 15\n    }\n  }, \"Customer Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://maps.google.com/maps?q=${mapsAddress}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: `${customer.shopAddress ? customer.shopAddress.address : null}, ${customer.shopAddress ? customer.shopAddress.city : null}, ${customer.shopAddress ? customer.shopAddress.state : null} ${customer.shopAddress ? customer.shopAddress.zipcode : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"type-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 15\n    }\n  }, \"Service Type(s)\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: typeConverter(workOrder.serviceType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 17\n    }\n  }, \"Service Date\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: dateConverter(workOrder.serviceDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceStartTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 17\n    }\n  }, \"Service Start Time\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: timeConverter(workOrder.serviceStartTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"crewMembers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 15\n    }\n  }, \"Crew Members\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    value: crewConverter(employees),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"description-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 15\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    type: \"textarea\",\n    value: workOrder.serviceDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"crewPunches\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 15\n    }\n  }, \"Crew Punches\"), workOrder.crewPunches && workOrder.crewPunches.map(punch => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 19\n    }\n  }, crewMemberConverter(punch.crewId), \" :\", \" \", jobTimeConverter(punch.accruedTime)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secondary-button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 17\n    }\n  }, !isClockedIn(currentUser.uid) ? /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: clockIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 21\n    }\n  }, \"Clock In\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 21\n    }\n  }, \"Clock In\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: clockOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 19\n    }\n  }, \"Clock Out\"))), workOrder.serviceDone ? workOrder.serviceDone.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"service-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 21\n    }\n  }, \"Services\"), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 25\n    }\n  }, \"Service Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 25\n    }\n  }, \"Service Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 25\n    }\n  }, \"Parts Needed\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 23\n    }\n  }, workOrder.serviceDone.map(service => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 29\n    }\n  }, service.type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 29\n    }\n  }, service.serviceDone), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 29\n    }\n  }, service.partsNeeded.length > 0 ? \"Y\" : \"N\")))))) : null : null, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 17\n    }\n  }, \"Add Service\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secondary-button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 19\n    }\n  }, \"Add Inspection\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"warning\",\n    className: \"training-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 19\n    }\n  }, \"Add Training\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"travel-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"travelTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 17\n    }\n  }, \"Travel Time (Roundtrip)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"travelTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"travelMileage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 17\n    }\n  }, \"Travel Mileage (Roundtrip)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 15\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    value: workOrder.notes ? workOrder.notes : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 15\n    }\n  })), !workOrder.signature ? hideOfficeNotes ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"officeNotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 19\n    }\n  }, \"Office Notes (NOT FOR CUSTOMER)\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    value: workOrder.officeNotes ? workOrder.officeNotes : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 19\n    }\n  })) : null, !workOrder.signature ? hideSignaturePad ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signature-pad-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"signature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 21\n    }\n  }, \"Signature\"), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"danger\",\n    className: \"clear-button\",\n    onClick: clearSignaturePad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 23\n    }\n  }))), !success ? /*#__PURE__*/React.createElement(SignatureCanvas, {\n    canvasProps: {\n      className: \"signature-pad\"\n    },\n    ref: ref => {\n      sigPad = ref;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: workOrder.signature,\n    alt: \"Signature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 21\n    }\n  })) : null, !workOrder.signature ? hideSubmitForSignatureButton ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitForSignature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 19\n    }\n  }, \"Submit for Signature\")) : null, !workOrder.signature ? hideSubmitForReviewButton ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitForReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 19\n    }\n  }, \"Submit for Review\")) : null, !workOrder.signature ? waitingForReview ? /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    disabled: true,\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 19\n    }\n  }, \"Waiting for Review\")) : null : null, workOrder.signature ? /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"signature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 17\n    }\n  }, \"Signature\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: workOrder.signature,\n    alt: \"Signature\",\n    className: \"signature-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 17\n    }\n  })) : null, workOrder.signature ? /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    disabled: true,\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 17\n    }\n  }, \"Waiting for Review\")) : null)) : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenServiceModal,\n    toggle: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleServiceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 9\n    }\n  }, \"Add Service\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equipment-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"make\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 17\n    }\n  }, \"Make\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"make\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.make ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 17\n    }\n  }, serviceErrors.make)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 17\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"type\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.type ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 17\n    }\n  }, serviceErrors.type))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equipment-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"model\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 17\n    }\n  }, \"Model\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"model\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.model ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 17\n    }\n  }, serviceErrors.model)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serialNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 17\n    }\n  }, \"Serial Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"serialNumber\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.serialNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 17\n    }\n  }, serviceErrors.serialNumber))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"bayNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 15\n    }\n  }, \"Bay Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"bayNumber\",\n    onChange: handleChangeService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"serviceDone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 15\n    }\n  }, \"What work was done?\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"serviceDone\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.serviceDone ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 15\n    }\n  }, serviceErrors.serviceDone)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"billableHours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 15\n    }\n  }, \"Billable Hours\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: \"0\",\n    max: \"100\",\n    step: \"0.5\",\n    name: \"billableHours\",\n    onChange: handleChangeService,\n    invalid: serviceErrors.billableHours ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 15\n    }\n  }, serviceErrors.billableHours)), service.partsUsed.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"part-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 17\n    }\n  }, \"Parts Used\"), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    size: \"sm\",\n    className: \"part-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 21\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 21\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 21\n    }\n  }, \"Images\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 19\n    }\n  }, service.partsUsed.map(part => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 25\n    }\n  }, part.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 25\n    }\n  }, part.partDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 25\n    }\n  }, part.partNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 25\n    }\n  }, part.images)))))) : null, service.partsNeeded.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"part-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 17\n    }\n  }, \"Parts Needed\"), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    size: \"sm\",\n    className: \"part-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 21\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 21\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 21\n    }\n  }, \"Images\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 19\n    }\n  }, service.partsNeeded.map(part => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 25\n    }\n  }, part.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 25\n    }\n  }, part.partDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 25\n    }\n  }, part.partNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 25\n    }\n  }, part.images)))))) : null, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"parts-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 15\n    }\n  }, \"Add Part Used\"), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"danger\",\n    onClick: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 15\n    }\n  }, \"Add Part Needed\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 11\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenPartUsed,\n    toggle: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: togglePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 9\n    }\n  }, \"Add Part Used\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitPartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 15\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"quantity\",\n    onChange: handleChangePartUsed,\n    invalid: partUsedErrors.quantity ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 15\n    }\n  }, partUsedErrors.quantity)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 15\n    }\n  }, \"Part Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partDescription\",\n    onChange: handleChangePartUsed,\n    invalid: partUsedErrors.partDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 15\n    }\n  }, partUsedErrors.partDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 15\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partNumber\",\n    onChange: handleChangePartUsed,\n    invalid: partUsedErrors.partNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 15\n    }\n  }, partUsedErrors.partNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 15\n    }\n  }, \"Picture(s)\"), /*#__PURE__*/React.createElement(Input, {\n    multiple: true,\n    type: \"file\",\n    name: \"images\",\n    onChange: handleChangePartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitPartUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 11\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenPartNeeded,\n    toggle: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: togglePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 9\n    }\n  }, \"Add Part Needed\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitPartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 15\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"quantity\",\n    onChange: handleChangePartNeeded,\n    invalid: partNeededErrors.quantity ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 959,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 15\n    }\n  }, partNeededErrors.quantity)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 15\n    }\n  }, \"Part Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partDescription\",\n    onChange: handleChangePartNeeded,\n    invalid: partNeededErrors.partDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 15\n    }\n  }, partNeededErrors.partDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 15\n    }\n  }, \"Part Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"partNumber\",\n    onChange: handleChangePartNeeded,\n    invalid: partNeededErrors.partNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 15\n    }\n  }, partNeededErrors.partNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 15\n    }\n  }, \"Picture(s)\"), /*#__PURE__*/React.createElement(Input, {\n    multiple: true,\n    type: \"file\",\n    name: \"images\",\n    onChange: handleChangePartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmitPartNeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 999,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default WorkOrder;","map":{"version":3,"sources":["/Users/coryhale/Documents/Rocky Mountain Lifts/rocky-mountain-lifts copy/src/components/content-components/WorkOrder.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLocation","Form","FormGroup","Label","Input","FormFeedback","Button","Modal","ModalHeader","ModalBody","ModalFooter","Table","Select","SignatureCanvas","useAuth","getWorkOrder","getUsers","workOrderReviewSubmit","WorkOrder","workOrder","setWorkOrder","customer","setCustomer","mapsAddress","setMapsAddress","employees","setEmployees","getWorkOrderFromState","state","getWorkOrderReducer","fetchUsers","users","allEmployees","setAllEmployees","fetchAllUsers","getUsersReducer","isOpenServiceModal","setIsOpenServiceModal","service","setService","make","type","model","serialNumber","bayNumber","serviceDone","billableHours","partsUsed","partsNeeded","serviceErrors","setServiceErrors","partUsed","setPartUsed","quantity","partDescription","partNumber","images","partUsedErrors","setPartUsedErrors","partNeeded","setPartNeeded","partNeededErrors","setPartNeededErrors","isOpenPartUsed","setIsOpenPartUsed","isOpenPartNeeded","setIsOpenPartNeeded","hideOfficeNotes","setHideOfficeNotes","hideSignaturePad","setHideSignaturePad","hideSubmitForSignatureButton","setHideSubmitForSignatureButton","hideSubmitForReviewButton","setHideSubmitForReviewButton","sigPad","flag","setFlag","waitingForReview","setWaitingForReview","success","workOrderReviewSubmitReducer","currentUser","dispatch","location","pathArray","pathname","split","jobId","length","crewPunches","crewMembers","forEach","user","userType","push","array","console","log","addressConverter","typeConverter","types","join","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","shopAddress","address","city","zipcode","newAddress","newCity","searchableAddress","crewConverter","members","crewNames","member","firstName","lastName","crewMemberConverter","crewId","employee","userId","clockIn","Date","getTime","uid","timeAccrued","punch","clockOut","alert","jobTimeConverter","accruedTime","seconds","Math","floor","minutes","hours","trueHours","trueMinutes","trueSeconds","isClockedIn","toggleServiceModal","handleChangeService","e","target","name","value","handleSubmitService","preventDefault","errors","trim","Object","keys","togglePartUsed","togglePartNeeded","handleChangePartUsed","handleSubmitPartUsed","handleChangePartNeeded","handleSubmitPartNeeded","handleSubmitForSignature","clearSignaturePad","clear","handleSubmitForReview","signature","getTrimmedCanvas","toDataURL","workOrderId","businessName","serviceType","serviceDate","serviceStartTime","serviceDescription","map","notes","officeNotes","className","ref","part"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport SignatureCanvas from \"react-signature-canvas\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { getWorkOrder } from \"../../actions/getWorkOrder\";\nimport { getUsers } from \"../../actions/getUsers\";\nimport { workOrderReviewSubmit } from \"../../actions/workOrderReviewSubmit\";\n\nimport \"../../styles/workorder.scss\";\n\nconst WorkOrder = () => {\n  const [workOrder, setWorkOrder] = useState({});\n  const [customer, setCustomer] = useState({});\n  const [mapsAddress, setMapsAddress] = useState(\"\");\n  const [employees, setEmployees] = useState([]);\n  const getWorkOrderFromState = useSelector(\n    (state) => state.getWorkOrderReducer.workOrder\n  );\n  const fetchUsers = useSelector((state) => state.getWorkOrderReducer.users);\n  const [allEmployees, setAllEmployees] = useState();\n  const fetchAllUsers = useSelector((state) => state.getUsersReducer.users);\n  const [isOpenServiceModal, setIsOpenServiceModal] = useState(false);\n  const [service, setService] = useState({\n    make: \"\",\n    type: \"\",\n    model: \"\",\n    serialNumber: \"\",\n    bayNumber: \"\",\n    serviceDone: \"\",\n    billableHours: null,\n    partsUsed: [],\n    partsNeeded: [],\n  });\n  const [serviceErrors, setServiceErrors] = useState({});\n  const [partUsed, setPartUsed] = useState({\n    quantity: \"\",\n    partDescription: \"\",\n    partNumber: \"\",\n    images: [],\n  });\n  const [partUsedErrors, setPartUsedErrors] = useState({});\n  const [partNeeded, setPartNeeded] = useState({\n    quantity: \"\",\n    partDescription: \"\",\n    partNumber: \"\",\n    images: [],\n  });\n  const [partNeededErrors, setPartNeededErrors] = useState({});\n  const [isOpenPartUsed, setIsOpenPartUsed] = useState(false);\n  const [isOpenPartNeeded, setIsOpenPartNeeded] = useState(false);\n  const [hideOfficeNotes, setHideOfficeNotes] = useState(false);\n  const [hideSignaturePad, setHideSignaturePad] = useState(true);\n  const [\n    hideSubmitForSignatureButton,\n    setHideSubmitForSignatureButton,\n  ] = useState(false);\n  const [hideSubmitForReviewButton, setHideSubmitForReviewButton] = useState(\n    true\n  );\n  let sigPad = {};\n  const [flag, setFlag] = useState(false);\n  const [waitingForReview, setWaitingForReview] = useState(false);\n  const success = useSelector(\n    (state) => state.workOrderReviewSubmitReducer.success\n  );\n  const { currentUser } = useAuth();\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const jobId = pathArray[pathArray.length - 1];\n    dispatch(getWorkOrder(jobId));\n  }, []);\n\n  useEffect(() => {\n    if (getWorkOrderFromState) {\n      setWorkOrder({\n        ...getWorkOrderFromState,\n        crewPunches: [],\n      });\n    }\n  }, [getWorkOrderFromState]);\n\n  useEffect(() => {\n    let crewMembers = [];\n\n    if (fetchUsers) {\n      fetchUsers.forEach((user) => {\n        if (user.userType === \"customer\") {\n          setCustomer(user);\n        } else {\n          crewMembers.push(user);\n        }\n      });\n      setEmployees(crewMembers);\n    }\n  }, [fetchUsers]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchAllUsers) {\n      fetchAllUsers.forEach((user) => {\n        if (user.userType === \"employee\") {\n          array.push(user);\n          console.log(array)\n        }\n      });\n    }\n    setAllEmployees(array);\n  }, [fetchAllUsers]);\n\n  console.log(allEmployees)\n\n  useEffect(() => {\n    if (customer) {\n      addressConverter(customer);\n    }\n  }, [customer]);\n\n  useEffect(() => {\n    if (flag) {\n      dispatch(workOrderReviewSubmit(workOrder));\n      setHideSubmitForReviewButton(true);\n    }\n  }, [flag]);\n\n  useEffect(() => {\n    if (success) {\n      setWaitingForReview(true);\n    }\n  }, [success]);\n\n  const typeConverter = (types) => {\n    if (types) {\n      if (types.length === 1) {\n        return types;\n      } else {\n        return types.join(\", \");\n      }\n    }\n  };\n\n  const dateConverter = (date) => {\n    if (date) {\n      const dateArray = date.split(\"-\");\n      return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    }\n  };\n\n  const timeConverter = (time) => {\n    if (time) {\n      const timeArray = time.split(\":\");\n      const hour = parseInt(timeArray[0]);\n      let m;\n\n      if (hour <= 11) {\n        m = \"AM\";\n      } else {\n        m = \"PM\";\n      }\n\n      if (hour <= 12) {\n        const newHour = hour.toString();\n        timeArray[0] = newHour;\n      } else {\n        const newHour = (hour - 12).toString();\n        timeArray[0] = newHour;\n      }\n\n      return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    }\n  };\n\n  const addressConverter = (customer) => {\n    if (customer.shopAddress) {\n      const address = customer.shopAddress.address;\n      const city = customer.shopAddress.city;\n      const state = customer.shopAddress.state;\n      const zipcode = customer.shopAddress.zipcode;\n\n      let newAddress = \"\";\n      let newCity = \"\";\n\n      if (address) {\n        newAddress = address.split(\" \").join(\"+\");\n      }\n      if (city) {\n        newCity = city.split(\" \").join(\"+\");\n      }\n\n      const searchableAddress = `${newAddress},+${newCity},+${state}+${zipcode}`;\n      setMapsAddress(searchableAddress);\n    }\n  };\n\n  const crewConverter = (members) => {\n    let crewNames = [];\n\n    if (members) {\n      members.forEach((member) => {\n        crewNames.push(`${member.firstName} ${member.lastName}`);\n      });\n\n      if (crewNames.length === 1) {\n        return crewNames;\n      } else {\n        return crewNames.join(\", \");\n      }\n    }\n  };\n\n  const crewMemberConverter = (crewId) => {\n    console.log(crewId)\n    allEmployees.forEach((employee) => {\n      console.log(employee)\n      if (employee.userId === crewId) {\n        return `${employee.firstName} ${employee.lastName}`;\n      }\n    });\n  };\n\n  const clockIn = () => {\n    const date = new Date();\n    const time = date.getTime();\n\n    if (workOrder.crewPunches.length === 0) {\n      setWorkOrder({\n        ...workOrder,\n        crewPunches: [\n          {\n            crewId: currentUser.uid,\n            timeAccrued: 0,\n            clockIn: time,\n          },\n        ],\n      });\n    } else {\n      workOrder.crewPunches.forEach((punch) => {\n        if (punch.crewId === currentUser.uid) {\n          setWorkOrder({\n            ...workOrder,\n            crewPunches: [\n              ...workOrder.crewPunches,\n              {\n                ...punch,\n                clockIn: time,\n              },\n            ],\n          });\n        } else {\n          setWorkOrder({\n            ...workOrder,\n            crewPunches: [\n              ...workOrder.crewPunches,\n              {\n                crewId: currentUser.uid,\n                timeAccrued: 0,\n                clockIn: time,\n              },\n            ],\n          });\n        }\n      });\n    }\n  };\n\n  console.log(workOrder.crewPunches);\n\n  const clockOut = () => {\n    const date = new Date();\n    const time = date.getTime();\n\n    if (workOrder.crewPunches.length === 0) {\n      alert(\"Please clock in first\");\n    } else {\n      workOrder.crewPunches.forEach((punch) => {\n        if (punch.crewId === currentUser.uid) {\n          if (punch.clockIn === null) {\n            alert(\"Please clock in first\");\n          } else {\n            setWorkOrder({\n              ...workOrder,\n              crewPunches: [\n                ...workOrder.crewPunches,\n                {\n                  ...punch,\n                  timeAccrued: (punch.timeAccrued += time - punch.clockIn),\n                  clockIn: null,\n                },\n              ],\n            });\n          }\n        }\n      });\n    }\n  };\n\n  const jobTimeConverter = (accruedTime) => {\n    const seconds = Math.floor((accruedTime / 1000) % 60);\n    const minutes = Math.floor((accruedTime / (1000 * 60)) % 60);\n    const hours = Math.floor((accruedTime / (1000 * 60 * 60)) % 24);\n\n    const trueHours = hours < 10 ? \"0\" + hours : hours;\n    const trueMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n    const trueSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n    return trueHours + \":\" + trueMinutes + \":\" + trueSeconds;\n  };\n\n  const isClockedIn = (uid) => {\n    if (workOrder.crewPunches) {\n      workOrder.crewPunches.forEach((punch) => {\n        if (punch.crewId === uid) {\n          if (punch.clockIn !== null) {\n            return true;\n          }\n        }\n      });\n    }\n    return false;\n  };\n\n  const toggleServiceModal = () => {\n    if (isOpenServiceModal) {\n      setServiceErrors({});\n    }\n    setIsOpenServiceModal(!isOpenServiceModal);\n  };\n\n  const handleChangeService = (e) => {\n    setService({\n      ...service,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmitService = (e) => {\n    e.preventDefault();\n    const errors = {};\n\n    if (service.make.trim() === \"\") {\n      errors.make = \"Must not be empty\";\n    }\n    if (service.type.trim() === \"\") {\n      errors.type = \"Must not be empty\";\n    }\n    if (service.model.trim() === \"\") {\n      errors.model = \"Must not be empty\";\n    }\n    if (service.serialNumber.trim() === \"\") {\n      errors.serialNumber = \"Must not be empty\";\n    }\n    if (service.serviceDone.trim() === \"\") {\n      errors.serviceDone = \"Must not be empty\";\n    }\n    if (service.billableHours === null) {\n      errors.billableHours = \"Must not be empty\";\n    } else if (service.billableHours.trim() === \"\") {\n      errors.billableHours = \"Must not be empty\";\n    } else if (service.billableHours % 0.5 !== 0 || service.billableHours < 0) {\n      errors.billableHours =\n        \"Billable hours must be priced to the next half hour\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      setServiceErrors(errors);\n    } else {\n      if (!workOrder.serviceDone) {\n        setWorkOrder({\n          ...workOrder,\n          serviceDone: [service],\n        });\n      } else {\n        setWorkOrder({\n          ...workOrder,\n          serviceDone: [...workOrder.serviceDone, service],\n        });\n      }\n\n      setService({\n        make: \"\",\n        type: \"\",\n        model: \"\",\n        serialNumber: \"\",\n        bayNumber: \"\",\n        serviceDone: \"\",\n        billableHours: null,\n        partsUsed: [],\n        partsNeeded: [],\n      });\n\n      setIsOpenServiceModal(false);\n      setServiceErrors({});\n    }\n  };\n\n  const togglePartUsed = () => {\n    setIsOpenPartUsed(!isOpenPartUsed);\n  };\n\n  const togglePartNeeded = () => {\n    setIsOpenPartNeeded(!isOpenPartNeeded);\n  };\n\n  const handleChangePartUsed = (e) => {\n    setPartUsed({\n      ...partUsed,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmitPartUsed = (e) => {\n    e.preventDefault();\n    const errors = {};\n\n    if (partUsed.quantity.trim() === \"\") {\n      errors.quantity = \"Must not be empty\";\n    }\n    if (partUsed.partDescription.trim() === \"\") {\n      errors.partDescription = \"Must not be empty\";\n    }\n    if (partUsed.partNumber.trim() === \"\") {\n      errors.partNumber = \"Must not be empty\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      setPartUsedErrors(errors);\n    } else {\n      setService({\n        ...service,\n        partsUsed: [...service.partsUsed, partUsed],\n      });\n\n      setPartUsed({\n        quantity: \"\",\n        partDescription: \"\",\n        partNumber: \"\",\n        images: [],\n      });\n\n      setIsOpenPartUsed(false);\n      setPartUsedErrors({});\n    }\n  };\n\n  const handleChangePartNeeded = (e) => {\n    setPartNeeded({\n      ...partNeeded,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmitPartNeeded = (e) => {\n    e.preventDefault();\n    const errors = {};\n\n    if (partNeeded.quantity.trim() === \"\") {\n      errors.quantity = \"Must not be empty\";\n    }\n    if (partNeeded.partDescription.trim() === \"\") {\n      errors.partDescription = \"Must not be empty\";\n    }\n    if (partNeeded.partNumber.trim() === \"\") {\n      errors.partNumber = \"Must not be empty\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      setPartNeededErrors(errors);\n    } else {\n      setService({\n        ...service,\n        partsNeeded: [...service.partsNeeded, partNeeded],\n      });\n\n      setPartNeeded({\n        quantity: \"\",\n        partDescription: \"\",\n        partNumber: \"\",\n        images: [],\n      });\n\n      setIsOpenPartNeeded(false);\n      setPartNeededErrors({});\n    }\n  };\n\n  const handleSubmitForSignature = (e) => {\n    e.preventDefault();\n    setHideOfficeNotes(true);\n    setHideSignaturePad(false);\n    setHideSubmitForSignatureButton(true);\n    setHideSubmitForReviewButton(false);\n  };\n\n  const clearSignaturePad = (e) => {\n    sigPad.clear();\n  };\n\n  const handleSubmitForReview = (e) => {\n    e.preventDefault();\n    setWorkOrder({\n      ...workOrder,\n      signature: sigPad.getTrimmedCanvas().toDataURL(\"image/png\"),\n    });\n    setFlag(true);\n  };\n\n  return (\n    <div className=\"work-order-page\">\n      {workOrder ? (\n        <div className=\"work-order-page-content\">\n          <h1>{`Work Order #${workOrder.workOrderId}`}</h1>\n          <Form className=\"work-order-info\">\n            <FormGroup>\n              <Label for=\"customerName\">Customer Name</Label>\n              <Input disabled value={customer.businessName} />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"customerAddress\">Customer Address</Label>\n              <a\n                href={`http://maps.google.com/maps?q=${mapsAddress}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Input\n                  disabled\n                  value={`${\n                    customer.shopAddress ? customer.shopAddress.address : null\n                  }, ${\n                    customer.shopAddress ? customer.shopAddress.city : null\n                  }, ${\n                    customer.shopAddress ? customer.shopAddress.state : null\n                  } ${\n                    customer.shopAddress ? customer.shopAddress.zipcode : null\n                  }`}\n                />\n              </a>\n            </FormGroup>\n            <FormGroup className=\"type-input\">\n              <Label for=\"serviceType\">Service Type(s)</Label>\n              <Input disabled value={typeConverter(workOrder.serviceType)} />\n            </FormGroup>\n            <div className=\"date-div\">\n              <FormGroup>\n                <Label for=\"serviceDate\">Service Date</Label>\n                <Input disabled value={dateConverter(workOrder.serviceDate)} />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"serviceStartTime\">Service Start Time</Label>\n                <Input\n                  disabled\n                  value={timeConverter(workOrder.serviceStartTime)}\n                />\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"crewMembers\">Crew Members</Label>\n              <Input disabled value={crewConverter(employees)} />\n            </FormGroup>\n            <FormGroup className=\"description-input\">\n              <Label for=\"serviceDescription\">Service Description</Label>\n              <Input\n                disabled\n                type=\"textarea\"\n                value={workOrder.serviceDescription}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"crewPunches\">Crew Punches</Label>\n              {workOrder.crewPunches &&\n                workOrder.crewPunches.map((punch) => (\n                  <span>\n                    {crewMemberConverter(punch.crewId)} :{\" \"}\n                    {jobTimeConverter(punch.accruedTime)}\n                  </span>\n                ))}\n            </FormGroup>\n            <div className=\"button-div\">\n              <div className=\"secondary-button-div\">\n                <FormGroup>\n                  {!isClockedIn(currentUser.uid) ? (\n                    <Button color=\"primary\" onClick={clockIn}>\n                      Clock In\n                    </Button>\n                  ) : (\n                    <Button disabled color=\"primary\">\n                      Clock In\n                    </Button>\n                  )}\n                </FormGroup>\n                <FormGroup>\n                  <Button color=\"primary\" onClick={clockOut}>\n                    Clock Out\n                  </Button>\n                </FormGroup>\n              </div>\n              {workOrder.serviceDone ? (\n                workOrder.serviceDone.length > 0 ? (\n                  <div className=\"service-table\">\n                    <h5>Services</h5>\n                    <Table hover size=\"sm\">\n                      <thead>\n                        <th>Service Type</th>\n                        <th>Service Description</th>\n                        <th>Parts Needed</th>\n                      </thead>\n                      <tbody>\n                        {workOrder.serviceDone.map((service) => (\n                          <tr>\n                            <td scope=\"row\">{service.type}</td>\n                            <td>{service.serviceDone}</td>\n                            <td>\n                              {service.partsNeeded.length > 0 ? \"Y\" : \"N\"}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                  </div>\n                ) : null\n              ) : null}\n              <FormGroup>\n                <Button outline color=\"success\" onClick={toggleServiceModal}>\n                  Add Service\n                </Button>\n              </FormGroup>\n              <div className=\"secondary-button-div\">\n                <FormGroup>\n                  <Button outline color=\"info\">\n                    Add Inspection\n                  </Button>\n                </FormGroup>\n                <FormGroup>\n                  <Button outline color=\"warning\" className=\"training-button\">\n                    Add Training\n                  </Button>\n                </FormGroup>\n              </div>\n            </div>\n            <div className=\"travel-div\">\n              <FormGroup>\n                <Label for=\"travelTime\">Travel Time (Roundtrip)</Label>\n                <Input type=\"text\" name=\"travelTime\" />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"travelMileage\">Travel Mileage (Roundtrip)</Label>\n                <Input type=\"text\" />\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"notes\">Notes</Label>\n              <Input\n                type=\"textarea\"\n                value={workOrder.notes ? workOrder.notes : null}\n              />\n            </FormGroup>\n            {!workOrder.signature ? (\n              hideOfficeNotes ? null : (\n                <FormGroup>\n                  <Label for=\"officeNotes\">\n                    Office Notes (NOT FOR CUSTOMER)\n                  </Label>\n                  <Input\n                    type=\"textarea\"\n                    value={workOrder.officeNotes ? workOrder.officeNotes : null}\n                  />\n                </FormGroup>\n              )\n            ) : null}\n            {!workOrder.signature ? (\n              hideSignaturePad ? null : (\n                <FormGroup>\n                  <div className=\"signature-pad-header\">\n                    <Label for=\"signature\">Signature</Label>\n                    <Button\n                      outline\n                      color=\"danger\"\n                      className=\"clear-button\"\n                      onClick={clearSignaturePad}\n                    >\n                      <i className=\"far fa-times\" />\n                    </Button>\n                  </div>\n                  {!success ? (\n                    <SignatureCanvas\n                      canvasProps={{ className: \"signature-pad\" }}\n                      ref={(ref) => {\n                        sigPad = ref;\n                      }}\n                    />\n                  ) : (\n                    <img src={workOrder.signature} alt=\"Signature\" />\n                  )}\n                </FormGroup>\n              )\n            ) : null}\n            {!workOrder.signature ? (\n              hideSubmitForSignatureButton ? null : (\n                <FormGroup className=\"submit-button\">\n                  <Button color=\"success\" onClick={handleSubmitForSignature}>\n                    Submit for Signature\n                  </Button>\n                </FormGroup>\n              )\n            ) : null}\n            {!workOrder.signature ? (\n              hideSubmitForReviewButton ? null : (\n                <FormGroup className=\"submit-button\">\n                  <Button color=\"success\" onClick={handleSubmitForReview}>\n                    Submit for Review\n                  </Button>\n                </FormGroup>\n              )\n            ) : null}\n            {!workOrder.signature ? (\n              waitingForReview ? (\n                <FormGroup className=\"submit-button\">\n                  <Button outline disabled color=\"danger\">\n                    Waiting for Review\n                  </Button>\n                </FormGroup>\n              ) : null\n            ) : null}\n            {workOrder.signature ? (\n              <FormGroup>\n                <Label for=\"signature\">Signature</Label>\n                <img\n                  src={workOrder.signature}\n                  alt=\"Signature\"\n                  className=\"signature-img\"\n                />\n              </FormGroup>\n            ) : null}\n            {workOrder.signature ? (\n              <FormGroup className=\"submit-button\">\n                <Button outline disabled color=\"danger\">\n                  Waiting for Review\n                </Button>\n              </FormGroup>\n            ) : null}\n          </Form>\n        </div>\n      ) : null}\n      <Modal isOpen={isOpenServiceModal} toggle={toggleServiceModal}>\n        <ModalHeader toggle={toggleServiceModal}>Add Service</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitService}>\n            <div className=\"equipment-div\">\n              <FormGroup>\n                <Label for=\"make\">Make</Label>\n                <Input\n                  type=\"text\"\n                  name=\"make\"\n                  onChange={handleChangeService}\n                  invalid={serviceErrors.make ? true : false}\n                />\n                <FormFeedback>{serviceErrors.make}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"type\">Type</Label>\n                <Input\n                  type=\"text\"\n                  name=\"type\"\n                  onChange={handleChangeService}\n                  invalid={serviceErrors.type ? true : false}\n                />\n                <FormFeedback>{serviceErrors.type}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"equipment-div\">\n              <FormGroup>\n                <Label for=\"model\">Model</Label>\n                <Input\n                  type=\"text\"\n                  name=\"model\"\n                  onChange={handleChangeService}\n                  invalid={serviceErrors.model ? true : false}\n                />\n                <FormFeedback>{serviceErrors.model}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"serialNumber\">Serial Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"serialNumber\"\n                  onChange={handleChangeService}\n                  invalid={serviceErrors.serialNumber ? true : false}\n                />\n                <FormFeedback>{serviceErrors.serialNumber}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"bayNumber\">Bay Number</Label>\n              <Input\n                type=\"text\"\n                name=\"bayNumber\"\n                onChange={handleChangeService}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"serviceDone\">What work was done?</Label>\n              <Input\n                type=\"textarea\"\n                name=\"serviceDone\"\n                onChange={handleChangeService}\n                invalid={serviceErrors.serviceDone ? true : false}\n              />\n              <FormFeedback>{serviceErrors.serviceDone}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"billableHours\">Billable Hours</Label>\n              <Input\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                step=\"0.5\"\n                name=\"billableHours\"\n                onChange={handleChangeService}\n                invalid={serviceErrors.billableHours ? true : false}\n              />\n              <FormFeedback>{serviceErrors.billableHours}</FormFeedback>\n            </FormGroup>\n            {service.partsUsed.length > 0 ? (\n              <div className=\"part-div\">\n                <h5>Parts Used</h5>\n                <Table hover size=\"sm\" className=\"part-table\">\n                  <thead>\n                    <th>Quantity</th>\n                    <th>Description</th>\n                    <th>Part Number</th>\n                    <th>Images</th>\n                  </thead>\n                  <tbody>\n                    {service.partsUsed.map((part) => (\n                      <tr>\n                        <td scope=\"row\">{part.quantity}</td>\n                        <td>{part.partDescription}</td>\n                        <td>{part.partNumber}</td>\n                        <td>{part.images}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            ) : null}\n            {service.partsNeeded.length > 0 ? (\n              <div className=\"part-div\">\n                <h5>Parts Needed</h5>\n                <Table hover size=\"sm\" className=\"part-table\">\n                  <thead>\n                    <th>Quantity</th>\n                    <th>Description</th>\n                    <th>Part Number</th>\n                    <th>Images</th>\n                  </thead>\n                  <tbody>\n                    {service.partsNeeded.map((part) => (\n                      <tr>\n                        <td scope=\"row\">{part.quantity}</td>\n                        <td>{part.partDescription}</td>\n                        <td>{part.partNumber}</td>\n                        <td>{part.images}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            ) : null}\n            <FormGroup className=\"parts-group\">\n              <Button outline color=\"success\" onClick={togglePartUsed}>\n                Add Part Used\n              </Button>\n              <Button outline color=\"danger\" onClick={togglePartNeeded}>\n                Add Part Needed\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmitService}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenPartUsed} toggle={togglePartUsed}>\n        <ModalHeader toggle={togglePartUsed}>Add Part Used</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitPartUsed}>\n            <FormGroup>\n              <Label>Quantity</Label>\n              <Input\n                type=\"text\"\n                name=\"quantity\"\n                onChange={handleChangePartUsed}\n                invalid={partUsedErrors.quantity ? true : false}\n              />\n              <FormFeedback>{partUsedErrors.quantity}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Part Description</Label>\n              <Input\n                type=\"text\"\n                name=\"partDescription\"\n                onChange={handleChangePartUsed}\n                invalid={partUsedErrors.partDescription ? true : false}\n              />\n              <FormFeedback>{partUsedErrors.partDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Part Number</Label>\n              <Input\n                type=\"text\"\n                name=\"partNumber\"\n                onChange={handleChangePartUsed}\n                invalid={partUsedErrors.partNumber ? true : false}\n              />\n              <FormFeedback>{partUsedErrors.partNumber}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Picture(s)</Label>\n              <Input\n                multiple\n                type=\"file\"\n                name=\"images\"\n                onChange={handleChangePartUsed}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmitPartUsed}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenPartNeeded} toggle={togglePartNeeded}>\n        <ModalHeader toggle={togglePartNeeded}>Add Part Needed</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitPartNeeded}>\n            <FormGroup>\n              <Label>Quantity</Label>\n              <Input\n                type=\"text\"\n                name=\"quantity\"\n                onChange={handleChangePartNeeded}\n                invalid={partNeededErrors.quantity ? true : false}\n              />\n              <FormFeedback>{partNeededErrors.quantity}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Part Description</Label>\n              <Input\n                type=\"text\"\n                name=\"partDescription\"\n                onChange={handleChangePartNeeded}\n                invalid={partNeededErrors.partDescription ? true : false}\n              />\n              <FormFeedback>{partNeededErrors.partDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Part Number</Label>\n              <Input\n                type=\"text\"\n                name=\"partNumber\"\n                onChange={handleChangePartNeeded}\n                invalid={partNeededErrors.partNumber ? true : false}\n              />\n              <FormFeedback>{partNeededErrors.partNumber}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Picture(s)</Label>\n              <Input\n                multiple\n                type=\"file\"\n                name=\"images\"\n                onChange={handleChangePartNeeded}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmitPartNeeded}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default WorkOrder;\n"]},"metadata":{},"sourceType":"module"}