{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Form, FormGroup, Label, Input, FormFeedback, Button, Modal, ModalHeader, ModalBody, ModalFooter, Table, Card } from 'reactstrap';\nimport Select from 'react-select';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getCustomer } from '../../actions/getCustomer';\nimport { addEmployeeToCustomer } from '../../actions/addEmployeeToCustomer';\nimport { getCustomerTasks } from '../../actions/getCustomerTasks';\nimport { getUsers } from '../../actions/getUsers';\nimport { addTask } from '../../actions/addTask';\nimport { getCustomerNotes } from '../../actions/getCustomerNotes';\nimport '../../styles/employee-dashboard.scss';\nimport classnames from 'classnames';\n\nconst CustomerPage = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n  const [activeTab, setActiveTab] = useState('1');\n  const [addEmployeeModalOpen, setAddEmployeeModalOpen] = useState(false);\n  const [employee, setEmployee] = useState({\n    firstName: '',\n    lastName: '',\n    phoneNumber: '',\n    email: ''\n  });\n  const [addEmployeeErrors, setAddEmployeeErrors] = useState({});\n  const [flag, setFlag] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const getTasksFromState = useSelector(state => state.getCustomerTasksReducer.tasks);\n  const [addTaskModalOpen, setAddTaskModalOpen] = useState(false);\n  const [task, setTask] = useState({\n    taskDate: '',\n    taskTime: '',\n    taskDescription: '',\n    customerId: '',\n    employeeId: ''\n  });\n  const [employees, setEmployees] = useState([]);\n  const employeeArray = [];\n  const getUsersFromState = useSelector(state => state.getUsersReducer.users);\n  const getAddTaskSuccess = useSelector(state => state.addTaskReducer.success);\n  const [addTaskErrors, setAddTaskErrors] = useState({});\n  const getAddTaskErrors = useSelector(state => state.addTaskReducer.errors);\n  const [notes, setNotes] = useState([]);\n  const getNotesFromState = useSelector(state => state.getCustomerNotesReducer.notes);\n  const [addNoteModalOpen, setAddNoteModalOpen] = useState(false);\n  const [note, setNote] = useState({\n    note: '',\n    createdAt: '',\n    createdBy: ''\n  });\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split('/');\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomer(customerId));\n    dispatch(getCustomerTasks(customerId));\n    dispatch(getUsers());\n    dispatch(getCustomerNotes(customerId));\n  }, []);\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n      setTask({ ...task,\n        customerId: getCustomerFromState.userId\n      });\n    }\n\n    ;\n  }, [getCustomerFromState]);\n  useEffect(() => {\n    if (getTasksFromState) {\n      setTasks(getTasksFromState);\n    }\n\n    ;\n  }, [getTasksFromState]);\n  useEffect(() => {\n    if (getNotesFromState) {\n      console.log(getNotesFromState);\n      setNotes(getNotesFromState);\n    }\n\n    ;\n  }, [getNotesFromState]);\n  useEffect(() => {\n    if (flag) {\n      setFlag(false);\n      dispatch(addEmployeeToCustomer(customer));\n      toggleAddEmployeeModal();\n    }\n\n    ;\n  }, [flag]);\n  useEffect(() => {\n    if (getUsersFromState.users) {\n      getUsersFromState.users.map(user => {\n        if (user.userType === 'employee' && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: 'employeeId',\n            jobTitle: user.jobTitle\n          });\n        }\n\n        ;\n      });\n      setEmployees(employeeArray);\n    }\n\n    ;\n  }, [getUsersFromState]);\n  useEffect(() => {\n    if (getAddTaskSuccess) {\n      console.log(getAddTaskSuccess);\n      toggleAddTaskModal();\n    }\n\n    ;\n  }, [getAddTaskSuccess]);\n  useEffect(() => {\n    if (getAddTaskErrors) {\n      setAddTaskErrors(getAddTaskErrors);\n    }\n\n    ;\n  }, [getAddTaskErrors]);\n\n  const dateConverter = date => {\n    const dateArray = date.split('-');\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = time => {\n    const timeArray = time.split(':');\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = 'AM';\n    } else {\n      m = 'PM';\n    }\n\n    ;\n\n    if (hour === 0) {\n      const newHour = '12';\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    ;\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const employeeFinder = employeeId => {\n    employees.forEach(employee => {\n      if (employee.userId === employeeId) {\n        return `${employee.firstName} ${employee.lastName}`;\n      }\n\n      ;\n    });\n  };\n\n  const toggleTab = tab => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n\n    ;\n  };\n\n  const toggleAddEmployeeModal = () => {\n    if (addEmployeeModalOpen) {\n      setEmployee({\n        firstName: '',\n        lastName: '',\n        phoneNumber: '',\n        email: ''\n      });\n      setAddEmployeeErrors({});\n    }\n\n    ;\n    setAddEmployeeModalOpen(!addEmployeeModalOpen);\n  };\n\n  const toggleAddTaskModal = () => {\n    if (addTaskModalOpen) {\n      setTask({ ...task,\n        taskDate: '',\n        taskTime: '',\n        taskDescription: '',\n        employeeId: ''\n      });\n      setAddTaskErrors({});\n    }\n\n    ;\n    setAddTaskModalOpen(!addTaskModalOpen);\n  };\n\n  const toggleAddNoteModal = () => {\n    if (addNoteModalOpen) {\n      setNote({\n        note: '',\n        createdAt: '',\n        createdBy: ''\n      });\n    }\n\n    ;\n    setAddNoteModalOpen(!addNoteModalOpen);\n  };\n\n  const handleAddEmployeeChange = e => {\n    setEmployee({ ...employee,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleAddTaskChange = e => {\n    setTask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleAddTaskSelectChange = e => {\n    setTask({ ...task,\n      [e.name]: e.value\n    });\n  };\n\n  const handleAddNoteChange = e => {\n    setNote({ ...note,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleAddEmployeeSubmit = e => {\n    e.preventDefault();\n    let errors = {};\n\n    if (employee.firstName === '') {\n      errors.firstName = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.lastName === '') {\n      errors.lastName = 'Must not be empty';\n    }\n\n    ;\n\n    if (employee.phoneNumber === '') {\n      errors.phoneNumber = 'Must not be empty';\n    } else if (!employee.phoneNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n      errors.phoneNumber = 'Must be a valid phone number';\n    }\n\n    ;\n\n    if (employee.email === '') {\n      errors.email = 'Must not be empty';\n    } else if (!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n      errors.email = 'Must be a valid email address';\n    }\n\n    ;\n    setAddEmployeeErrors(errors);\n\n    if (Object.keys(addEmployeeErrors).length === 0) {\n      if (customer.employees.length === 0) {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [employee]\n        });\n      } else {\n        setFlag(true);\n        setCustomer({ ...customer,\n          employees: [...customer.employees, employee]\n        });\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const handleAddTaskSubmit = e => {\n    e.preventDefault();\n    dispatch(addTask(task));\n  };\n\n  const handleAddNoteSubmit = e => {\n    e.preventDefault();\n    console.log(\"Note Submitted\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 21\n    }\n  }, customer.businessName), /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggleTab('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  }, \"Info\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: () => {\n      toggleTab('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 29\n    }\n  }, \"Tasks\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '3'\n    }),\n    onClick: () => {\n      toggleTab('3');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 29\n    }\n  }, \"Appointments\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '4'\n    }),\n    onClick: () => {\n      toggleTab('4');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 29\n    }\n  }, \"Notes\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '5'\n    }),\n    onClick: () => {\n      toggleTab('5');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 29\n    }\n  }, \"Employees\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '6'\n    }),\n    onClick: () => {\n      toggleTab('6');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 29\n    }\n  }, \"Lifts\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '7'\n    }),\n    onClick: () => {\n      toggleTab('7');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }, \"Documents\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"customer-page-info-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 45\n    }\n  }, \"Primary Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 49\n    }\n  }, \"Name: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 58\n    }\n  }, customer.primaryContact ? customer.primaryContact.firstName : null, \" \", customer.primaryContact ? customer.primaryContact.lastName : null)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 49\n    }\n  }, \"Email: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.primaryEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 59\n    }\n  }, customer.primaryEmail)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 49\n    }\n  }, \"Phone: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryPhoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 59\n    }\n  }, customer.primaryPhoneNumber)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 45\n    }\n  }, \"Billing Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 49\n    }\n  }, \"Name: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 58\n    }\n  }, customer.billingContact ? customer.billingContact.firstName : null, \" \", customer.billingContact ? customer.billingContact.lastName : null)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 49\n    }\n  }, \"Email: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.billingEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 59\n    }\n  }, customer.billingEmail)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 49\n    }\n  }, \"Phone: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingPhoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 59\n    }\n  }, customer.billingPhoneNumber))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-addresses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 45\n    }\n  }, \"Shop Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://maps.google.com/?q=${customer.shopAddress ? customer.shopAddress.address : null}, ${customer.shopAddress ? customer.shopAddress.city : null}, ${customer.shopAddress ? customer.shopAddress.state : null} ${customer.shopAddress ? customer.shopAddress.zipcode : null}`,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    className: \"address-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 49\n    }\n  }, customer.shopAddress ? customer.shopAddress.address : null, \",\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 49\n    }\n  }, customer.shopAddress ? customer.shopAddress.city : null, \", \", customer.shopAddress ? customer.shopAddress.state : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 49\n    }\n  }, customer.shopAddress ? customer.shopAddress.zipcode : null))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 45\n    }\n  }, \"Billing Address\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://maps.google.com/?q=${customer.billingAddress ? customer.billingAddress.address : null}, ${customer.billingAddress ? customer.billingAddress.city : null}, ${customer.billingAddress ? customer.billingAddress.state : null} ${customer.billingAddress ? customer.billingAddress.zipcode : null}`,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    className: \"address-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 49\n    }\n  }, customer.billingAddress ? customer.billingAddress.address : null, \",\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 49\n    }\n  }, customer.billingAddress ? customer.billingAddress.city : null, \", \", customer.billingAddress ? customer.billingAddress.state : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 49\n    }\n  }, customer.billingAddress ? customer.billingAddress.zipcode : null))))))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-task-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    className: \"task-table-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-headers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 45\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 45\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 45\n    }\n  }, \"Time\")))), tasks ? tasks.tasks ? tasks.tasks.map(task => /*#__PURE__*/React.createElement(Card, {\n    className: \"task-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    className: \"task-card-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 53\n    }\n  }, task.taskDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 53\n    }\n  }, dateConverter(task.taskDate)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 53\n    }\n  }, timeConverter(task.taskTime))))))) : null : null, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleAddTaskModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 33\n    }\n  }, \"Add Task\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 29\n    }\n  }, \"Appointments\")), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-note-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 29\n    }\n  }, notes ? notes.notes ? notes.notes.map(note => /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 41\n    }\n  }, note.note), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 45\n    }\n  }, \"Created By: \", employeeFinder(note.createdBy)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 45\n    }\n  }, \"Created At: \", note.createdAt)))) : null : null, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleAddNoteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 33\n    }\n  }, \"Add Note\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"customer-page-employees-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 41\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 41\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 41\n    }\n  }, \"Email\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 42\n    }\n  }, customer.primaryContact ? customer.primaryContact.firstName : null, \" \", customer.primaryContact ? customer.primaryContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.primaryPhoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 46\n    }\n  }, customer.primaryPhoneNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.primaryEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 46\n    }\n  }, customer.primaryEmail))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 38\n    }\n  }, customer.billingContact ? customer.billingContact.firstName : null, \" \", customer.billingContact ? customer.billingContact.lastName : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${customer.billingPhoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 46\n    }\n  }, customer.billingPhoneNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${customer.billingEmail}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 46\n    }\n  }, customer.billingEmail))), customer.employees ? customer.employees.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 45\n    }\n  }, employee.firstName, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.phoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 49\n    }\n  }, employee.phoneNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${employee.email}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 49\n    }\n  }, employee.email)))) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 33\n    }\n  }, \"Add Employee\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 29\n    }\n  }, \"Lifts\")), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 29\n    }\n  }, \"Coming Soon!!!\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: addEmployeeModalOpen,\n    toggle: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleAddEmployeeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 21\n    }\n  }, \"Add Employee\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddEmployeeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-employee-name-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeFirstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 37\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.firstName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 37\n    }\n  }, addEmployeeErrors.firstName)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeLastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 37\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.lastName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 37\n    }\n  }, addEmployeeErrors.lastName))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeePhoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 33\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"phoneNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.phoneNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.phoneNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"example@example.com\",\n    onChange: handleAddEmployeeChange,\n    invalid: addEmployeeErrors.email ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 33\n    }\n  }, addEmployeeErrors.email)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleAddEmployeeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: addTaskModalOpen,\n    toggle: toggleAddTaskModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleAddTaskModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 21\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddTaskSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task-date-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 37\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"taskDate\",\n    placeholder: \"date placeholder\",\n    onChange: handleAddTaskChange,\n    invalid: addTaskErrors.taskDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 37\n    }\n  }, addTaskErrors.taskDate)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 37\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"taskTime\",\n    placeholder: \"time placeholder\",\n    onChange: handleAddTaskChange,\n    invalid: addTaskErrors.taskTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 37\n    }\n  }, addTaskErrors.taskTime))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 33\n    }\n  }, \"Task Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"taskDescription\",\n    onChange: handleAddTaskChange,\n    invalid: addTaskErrors.taskDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 33\n    }\n  }, addTaskErrors.taskDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 33\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"employeeId\",\n    options: employees,\n    onChange: handleAddTaskSelectChange,\n    className: addTaskErrors.employeeId ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: addTaskErrors.employeeId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 33\n    }\n  }, addTaskErrors.employeeId)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleAddTaskSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: addNoteModalOpen,\n    toggle: toggleAddNoteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleAddNoteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 21\n    }\n  }, \"Add Note\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddNoteSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 33\n    }\n  }, \"Note\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"note\",\n    onChange: handleAddNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleAddNoteSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 25\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CustomerPage;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLocation","TabContent","TabPane","Nav","NavItem","NavLink","Form","FormGroup","Label","Input","FormFeedback","Button","Modal","ModalHeader","ModalBody","ModalFooter","Table","Card","Select","EmployeeNavbar","EmployeeSidebar","Footer","getCustomer","addEmployeeToCustomer","getCustomerTasks","getUsers","addTask","getCustomerNotes","classnames","CustomerPage","customer","setCustomer","getCustomerFromState","state","getCustomerReducer","activeTab","setActiveTab","addEmployeeModalOpen","setAddEmployeeModalOpen","employee","setEmployee","firstName","lastName","phoneNumber","email","addEmployeeErrors","setAddEmployeeErrors","flag","setFlag","tasks","setTasks","getTasksFromState","getCustomerTasksReducer","addTaskModalOpen","setAddTaskModalOpen","task","setTask","taskDate","taskTime","taskDescription","customerId","employeeId","employees","setEmployees","employeeArray","getUsersFromState","getUsersReducer","users","getAddTaskSuccess","addTaskReducer","success","addTaskErrors","setAddTaskErrors","getAddTaskErrors","errors","notes","setNotes","getNotesFromState","getCustomerNotesReducer","addNoteModalOpen","setAddNoteModalOpen","note","setNote","createdAt","createdBy","dispatch","location","pathArray","pathname","split","length","userId","console","log","toggleAddEmployeeModal","map","user","userType","active","push","label","value","name","jobTitle","toggleAddTaskModal","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","employeeFinder","forEach","toggleTab","tab","toggleAddNoteModal","handleAddEmployeeChange","e","target","handleAddTaskChange","handleAddTaskSelectChange","handleAddNoteChange","handleAddEmployeeSubmit","preventDefault","match","Object","keys","handleAddTaskSubmit","handleAddNoteSubmit","businessName","primaryContact","primaryEmail","primaryPhoneNumber","billingContact","billingEmail","billingPhoneNumber","shopAddress","address","city","zipcode","billingAddress"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    TabContent,\n    TabPane,\n    Nav,\n    NavItem,\n    NavLink,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Table,\n    Card\n} from 'reactstrap';\nimport Select from 'react-select';\nimport EmployeeNavbar from './EmployeeNavbar';\nimport EmployeeSidebar from './EmployeeSidebar';\nimport Footer from './Footer';\nimport { getCustomer } from '../../actions/getCustomer';\nimport { addEmployeeToCustomer } from '../../actions/addEmployeeToCustomer';\nimport { getCustomerTasks } from '../../actions/getCustomerTasks';\nimport { getUsers } from '../../actions/getUsers';\nimport { addTask } from '../../actions/addTask';\nimport { getCustomerNotes } from '../../actions/getCustomerNotes';\n\nimport '../../styles/employee-dashboard.scss'\nimport classnames from 'classnames';\n\nconst CustomerPage = () => {\n    const [customer, setCustomer] = useState({});\n    const getCustomerFromState = useSelector(state => state.getCustomerReducer.customer);\n    const [activeTab, setActiveTab] = useState('1');\n    const [addEmployeeModalOpen, setAddEmployeeModalOpen] = useState(false);\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        lastName: '',\n        phoneNumber: '',\n        email: ''\n    });\n    const [addEmployeeErrors, setAddEmployeeErrors] = useState({});\n    const [flag, setFlag] = useState(false);\n    const [tasks, setTasks] = useState([]);\n    const getTasksFromState = useSelector(state => state.getCustomerTasksReducer.tasks);\n    const [addTaskModalOpen, setAddTaskModalOpen] = useState(false);\n    const [task, setTask] = useState({\n        taskDate: '',\n        taskTime: '',\n        taskDescription: '',\n        customerId: '',\n        employeeId: ''\n    });\n    const [employees, setEmployees] = useState([]);\n    const employeeArray = [];\n    const getUsersFromState = useSelector(state => state.getUsersReducer.users);\n    const getAddTaskSuccess = useSelector(state => state.addTaskReducer.success);\n    const [addTaskErrors, setAddTaskErrors] = useState({});\n    const getAddTaskErrors = useSelector(state => state.addTaskReducer.errors);\n    const [notes, setNotes] = useState([]);\n    const getNotesFromState = useSelector(state => state.getCustomerNotesReducer.notes);\n    const [addNoteModalOpen, setAddNoteModalOpen] = useState(false);\n    const [note, setNote] = useState({\n        note: '',\n        createdAt: '',\n        createdBy: ''\n    });\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const customerId = pathArray[pathArray.length - 1];\n        dispatch(getCustomer(customerId));\n        dispatch(getCustomerTasks(customerId));\n        dispatch(getUsers());\n        dispatch(getCustomerNotes(customerId));\n    }, []);\n\n    useEffect(() => {\n        if(getCustomerFromState) {\n            setCustomer(getCustomerFromState);\n            setTask({\n                ...task,\n                customerId: getCustomerFromState.userId\n            })\n        };\n    }, [getCustomerFromState]);\n\n    useEffect(() => {\n        if(getTasksFromState) {\n            setTasks(getTasksFromState);\n        };\n    }, [getTasksFromState]);\n\n    useEffect(() => {\n        if(getNotesFromState) {\n            console.log(getNotesFromState)\n            setNotes(getNotesFromState);\n        };\n    }, [getNotesFromState]);\n\n    useEffect(() => {\n        if(flag) {\n            setFlag(false);\n            dispatch(addEmployeeToCustomer(customer));\n            toggleAddEmployeeModal();\n        };\n    }, [flag]);\n\n    useEffect(() => {\n        if(getUsersFromState.users) {\n            getUsersFromState.users.map(user => {\n                if(user.userType === 'employee' && user.active === true) {\n                    employeeArray.push({\n                        label: `${user.firstName} ${user.lastName}`,\n                        value: user.userId,\n                        name: 'employeeId',\n                        jobTitle: user.jobTitle\n                    });\n                };\n            });\n\n            setEmployees(employeeArray);\n        };\n    }, [getUsersFromState]);\n\n    useEffect(() => {\n        if(getAddTaskSuccess) {\n            console.log(getAddTaskSuccess)\n            toggleAddTaskModal();\n        };\n    }, [getAddTaskSuccess]);\n\n    useEffect(() => {\n        if(getAddTaskErrors) {\n            setAddTaskErrors(getAddTaskErrors);\n        };\n    }, [getAddTaskErrors]);\n\n    const dateConverter = date => {\n        const dateArray = date.split('-');\n        return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    };\n\n    const timeConverter = time => {\n        const timeArray = time.split(':');\n        const hour = parseInt(timeArray[0]);\n        let m;\n\n        if(hour <= 11) {\n            m = 'AM';\n        } else {\n            m = 'PM';\n        };\n\n        if(hour === 0) {\n            const newHour = '12';\n            timeArray[0] = newHour;\n        } else if(hour <= 12) {\n            const newHour = hour.toString();\n            timeArray[0] = newHour;\n        } else {\n            const newHour = (hour - 12).toString();\n            timeArray[0] = newHour;\n        };\n\n        return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    };\n\n    const employeeFinder = employeeId => {\n        employees.forEach(employee => {\n            if(employee.userId === employeeId) {\n                return `${employee.firstName} ${employee.lastName}`;\n            };\n        });\n    };\n\n    const toggleTab = tab => {\n        if(activeTab !== tab) {\n            setActiveTab(tab);\n        };\n    };\n\n    const toggleAddEmployeeModal = () => {\n        if(addEmployeeModalOpen) {\n            setEmployee({\n                firstName: '',\n                lastName: '',\n                phoneNumber: '',\n                email: ''\n            });\n            setAddEmployeeErrors({});\n        };\n        setAddEmployeeModalOpen(!addEmployeeModalOpen);\n    };\n\n    const toggleAddTaskModal = () => {\n        if(addTaskModalOpen) {\n            setTask({\n                ...task,\n                taskDate: '',\n                taskTime: '',\n                taskDescription: '',\n                employeeId: ''\n            });\n            setAddTaskErrors({});\n        };\n        setAddTaskModalOpen(!addTaskModalOpen);\n    };\n\n    const toggleAddNoteModal = () => {\n        if(addNoteModalOpen) {\n            setNote({\n                note: '',\n                createdAt: '',\n                createdBy: ''\n            });\n        };\n        setAddNoteModalOpen(!addNoteModalOpen);\n    };\n\n    const handleAddEmployeeChange = e => {\n        setEmployee({\n            ...employee,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleAddTaskChange = e => {\n        setTask({\n            ...task,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleAddTaskSelectChange = e => {\n        setTask({\n            ...task,\n            [e.name]: e.value\n        });\n    };\n\n    const handleAddNoteChange = e => {\n        setNote({\n            ...note,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleAddEmployeeSubmit = e => {\n        e.preventDefault();\n        \n        let errors = {};\n\n        if(employee.firstName === '') {\n            errors.firstName = 'Must not be empty';\n        };\n        if(employee.lastName === '') {\n            errors.lastName = 'Must not be empty';\n        };\n        if(employee.phoneNumber === '') {\n            errors.phoneNumber = 'Must not be empty';\n        } else if(!employee.phoneNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)) {\n            errors.phoneNumber = 'Must be a valid phone number';\n        };\n        if(employee.email === '') {\n            errors.email = 'Must not be empty';\n        } else if(!employee.email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n            errors.email = 'Must be a valid email address';\n        };\n\n        setAddEmployeeErrors(errors);\n\n        if(Object.keys(addEmployeeErrors).length === 0) {\n            if(customer.employees.length === 0) {\n                setFlag(true);\n                setCustomer({\n                    ...customer,\n                    employees: [employee]\n                });\n            } else {\n                setFlag(true);\n                setCustomer({\n                    ...customer,\n                    employees: [...customer.employees, employee]\n                });\n            };\n        };\n    };\n\n    const handleAddTaskSubmit = e => {\n        e.preventDefault();\n        dispatch(addTask(task));\n    };\n\n    const handleAddNoteSubmit = e => {\n        e.preventDefault();\n        console.log(\"Note Submitted\");\n    };\n    \n    return (\n        <div>\n            <EmployeeNavbar />\n            <div className=\"customer-page\">\n                <EmployeeSidebar />\n                <div className=\"customer-page-content\">\n                    <h1>{customer.businessName}</h1>\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { toggleTab('1'); }}>\n                                Info\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { toggleTab('2') }}>\n                                Tasks\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '3' })} onClick={() => { toggleTab('3') }}>\n                                Appointments\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '4' })} onClick={() => { toggleTab('4') }}>\n                                Notes\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '5' })} onClick={() => { toggleTab('5') }}>\n                                Employees\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '6' })} onClick={() => { toggleTab('6') }}>\n                                Lifts\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className={classnames({ active: activeTab === '7' })} onClick={() => { toggleTab('7') }}>\n                                Documents\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                            <div>\n                                <Form className=\"customer-page-info-tab\">\n                                    <div className=\"customer-page-contacts\">\n                                        <FormGroup>\n                                            <h3>Primary Contact</h3>\n                                            <div>\n                                                <p>Name: <span>{customer.primaryContact ? customer.primaryContact.firstName : null} {customer.primaryContact ? customer.primaryContact.lastName : null}</span></p>\n                                                <p>Email: <a href={`mailto:${customer.primaryEmail}`}>{customer.primaryEmail}</a></p>\n                                                <p>Phone: <a href={`tel:+1-${customer.primaryPhoneNumber}`}>{customer.primaryPhoneNumber}</a></p>\n                                            </div>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <h3>Billing Contact</h3>\n                                            <div>\n                                                <p>Name: <span>{customer.billingContact ? customer.billingContact.firstName : null} {customer.billingContact ? customer.billingContact.lastName : null}</span></p>\n                                                <p>Email: <a href={`mailto:${customer.billingEmail}`}>{customer.billingEmail}</a></p>\n                                                <p>Phone: <a href={`tel:+1-${customer.billingPhoneNumber}`}>{customer.billingPhoneNumber}</a></p>\n                                            </div>\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"customer-page-addresses\">\n                                        <FormGroup>\n                                            <h3>Shop Address</h3>\n                                            <a href={`http://maps.google.com/?q=${customer.shopAddress ? customer.shopAddress.address : null}, ${customer.shopAddress ? customer.shopAddress.city : null}, ${customer.shopAddress ? customer.shopAddress.state : null} ${customer.shopAddress ? customer.shopAddress.zipcode : null}`} target=\"_blank\" rel=\"noreferrer\" className=\"address-link\">\n                                                <p>{customer.shopAddress ? customer.shopAddress.address : null},</p>\n                                                <p>{customer.shopAddress ? customer.shopAddress.city : null}, {customer.shopAddress ? customer.shopAddress.state : null}</p>\n                                                <p>{customer.shopAddress ? customer.shopAddress.zipcode : null}</p>\n                                            </a>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <h3>Billing Address</h3>\n                                            <a href={`http://maps.google.com/?q=${customer.billingAddress ? customer.billingAddress.address : null}, ${customer.billingAddress ? customer.billingAddress.city : null}, ${customer.billingAddress ? customer.billingAddress.state : null} ${customer.billingAddress ? customer.billingAddress.zipcode : null}`} target=\"_blank\" rel=\"noreferrer\" className=\"address-link\">\n                                                <p>{customer.billingAddress ? customer.billingAddress.address : null},</p>\n                                                <p>{customer.billingAddress ? customer.billingAddress.city : null}, {customer.billingAddress ? customer.billingAddress.state : null}</p>\n                                                <p>{customer.billingAddress ? customer.billingAddress.zipcode : null}</p>\n                                            </a>\n                                        </FormGroup>\n                                    </div>\n                                </Form>\n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            <div className=\"customer-page-task-tab\">\n                                <Table borderless className=\"task-table-header\">\n                                    <thead>\n                                        <tr className=\"table-headers\">\n                                            <th>Task</th>\n                                            <th>Date</th>\n                                            <th>Time</th>\n                                        </tr>\n                                    </thead>\n                                </Table>\n                                    {tasks ? tasks.tasks ? tasks.tasks.map(task => (\n                                        <Card className=\"task-card\">\n                                            <Table borderless className=\"task-card-table\">\n                                            <tbody>\n                                                <tr className=\"table-data\">\n                                                    <td>{task.taskDescription}</td>\n                                                    <td>{dateConverter(task.taskDate)}</td>\n                                                    <td>{timeConverter(task.taskTime)}</td>\n                                                </tr>\n                                            </tbody>\n                                            </Table>\n                                        </Card>\n                                    )) : null : null}\n                                <Button outline color=\"success\" onClick={toggleAddTaskModal}>Add Task</Button>\n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                            <span>Appointments</span>\n                        </TabPane>\n                        <TabPane tabId=\"4\">\n                            <div className=\"customer-page-note-tab\">\n                                {notes ? notes.notes ? notes.notes.map(note => (\n                                    <Card>\n                                        <p>{note.note}</p>\n                                        <div>\n                                            <p>Created By: {employeeFinder(note.createdBy)}</p>\n                                            <p>Created At: {note.createdAt}</p>\n                                        </div>\n                                    </Card>\n                                )) : null : null}\n                                <Button outline color=\"success\" onClick={toggleAddNoteModal}>Add Note</Button> \n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"5\">\n                            <Table className=\"customer-page-employees-table\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Phone Number</th>\n                                        <th>Email</th> \n                                    </tr>\n                                </thead>\n                                <tbody>\n                                     <tr>\n                                         <td>{customer.primaryContact ? customer.primaryContact.firstName : null} {customer.primaryContact ? customer.primaryContact.lastName : null}</td>\n                                         <td><a href={`tel:+1-${customer.primaryPhoneNumber}`}>{customer.primaryPhoneNumber}</a></td>\n                                         <td><a href={`mailto:${customer.primaryEmail}`}>{customer.primaryEmail}</a></td>\n                                     </tr>\n                                     <tr>\n                                     <td>{customer.billingContact ? customer.billingContact.firstName : null} {customer.billingContact ? customer.billingContact.lastName : null}</td>\n                                         <td><a href={`tel:+1-${customer.billingPhoneNumber}`}>{customer.billingPhoneNumber}</a></td>\n                                         <td><a href={`mailto:${customer.billingEmail}`}>{customer.billingEmail}</a></td>\n                                     </tr>\n                                    {customer.employees ? customer.employees.map(employee => (\n                                        <tr>\n                                            <td>{employee.firstName} {employee.lastName}</td>\n                                            <td><a href={`tel:+1-${employee.phoneNumber}`}>{employee.phoneNumber}</a></td>\n                                            <td><a href={`mailto:${employee.email}`}>{employee.email}</a></td>\n                                        </tr>\n                                    )) : null}\n                                </tbody>\n                            </Table>\n                            <div className=\"add-employee-div\">\n                                <Button outline color=\"success\" onClick={toggleAddEmployeeModal}>Add Employee</Button>\n                            </div>\n                        </TabPane>\n                        <TabPane tabId=\"6\">\n                            <span>Lifts</span>\n                        </TabPane>\n                        <TabPane tabId=\"7\">\n                            <span>Coming Soon!!!</span>\n                        </TabPane>\n                    </TabContent>\n                </div>\n                <Modal isOpen={addEmployeeModalOpen} toggle={toggleAddEmployeeModal}>\n                    <ModalHeader toggle={toggleAddEmployeeModal}>Add Employee</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleAddEmployeeSubmit}>\n                            <div className=\"add-employee-name-div\">\n                                <FormGroup>\n                                    <Label for=\"employeeFirstName\">First Name</Label>\n                                    <Input type=\"text\" name=\"firstName\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.firstName ? true : false} />\n                                    <FormFeedback>{addEmployeeErrors.firstName}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"employeeLastName\">Last Name</Label>\n                                    <Input type=\"text\" name=\"lastName\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.lastName ? true : false} />\n                                    <FormFeedback>{addEmployeeErrors.lastName}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"employeePhoneNumber\">Phone Number</Label>\n                                <Input type=\"text\" name=\"phoneNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.phoneNumber ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.phoneNumber}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeEmail\">Email</Label>\n                                <Input type=\"text\" name=\"email\" placeholder=\"example@example.com\" onChange={handleAddEmployeeChange} invalid={addEmployeeErrors.email ? true : false} />\n                                <FormFeedback>{addEmployeeErrors.email}</FormFeedback>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleAddEmployeeSubmit}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={addTaskModalOpen} toggle={toggleAddTaskModal}>\n                    <ModalHeader toggle={toggleAddTaskModal}>Add Task</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleAddTaskSubmit}>\n                            <div className=\"add-task-date-div\">\n                                <FormGroup>\n                                    <Label for=\"taskDate\">Date</Label>\n                                    <Input type=\"date\" name=\"taskDate\" placeholder=\"date placeholder\" onChange={handleAddTaskChange} invalid={addTaskErrors.taskDate ? true : false} />\n                                    <FormFeedback>{addTaskErrors.taskDate}</FormFeedback>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"taskTime\">Time</Label>\n                                    <Input type=\"time\" name=\"taskTime\" placeholder=\"time placeholder\" onChange={handleAddTaskChange} invalid={addTaskErrors.taskTime ? true : false} />\n                                    <FormFeedback>{addTaskErrors.taskTime}</FormFeedback>\n                                </FormGroup>\n                            </div>\n                            <FormGroup>\n                                <Label for=\"taskDescription\">Task Description</Label>\n                                <Input type=\"textarea\" name=\"taskDescription\" onChange={handleAddTaskChange} invalid={addTaskErrors.taskDescription ? true : false} />\n                                <FormFeedback>{addTaskErrors.taskDescription}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"employeeId\">Assigned To</Label>\n                                <Select name=\"employeeId\" options={employees} onChange={handleAddTaskSelectChange} className={addTaskErrors.employeeId ? 'invalid' : ''} />\n                                <Input type=\"hidden\" disabled invalid={addTaskErrors.employeeId ? true : false} />\n                                <FormFeedback>{addTaskErrors.employeeId}</FormFeedback>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleAddTaskSubmit}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={addNoteModalOpen} toggle={toggleAddNoteModal}>\n                    <ModalHeader toggle={toggleAddNoteModal}>Add Note</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={handleAddNoteSubmit}>\n                            <FormGroup>\n                                <Label for=\"note\">Note</Label>\n                                <Input type=\"textarea\" name=\"note\" onChange={handleAddNoteChange} />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={handleAddNoteSubmit}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default CustomerPage;"]},"metadata":{},"sourceType":"module"}