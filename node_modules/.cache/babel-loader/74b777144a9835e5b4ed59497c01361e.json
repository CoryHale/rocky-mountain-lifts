{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddTaskBtn.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport '../../styles/sidebar.scss';\n\nconst AddTaskBtn = () => {\n  const [hidden, setHidden] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const location = useLocation();\n  useEffect(() => {\n    changeHidden(location);\n  }, [location]);\n\n  const changeHidden = location => {\n    if (location.pathname === '/e_dashboard' || location.pathname === '/e_dashboard/') {\n      setHidden(true);\n    } else {\n      setHidden(false);\n    }\n\n    ;\n  };\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, hidden ? /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"Add Task\") : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    placeholder: \"date placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    placeholder: \"time placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default AddTaskBtn;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddTaskBtn.js"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","Select","useLocation","AddTaskBtn","hidden","setHidden","isOpen","setIsOpen","location","changeHidden","pathname","toggle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\n\nimport '../../styles/sidebar.scss';\n\nconst AddTaskBtn = () => {\n    const [hidden, setHidden] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const location = useLocation();\n\n    useEffect(() => {\n        changeHidden(location);\n    }, [location]);\n    \n    const changeHidden = location => {\n        if(location.pathname === '/e_dashboard' || location.pathname === '/e_dashboard/') {\n            setHidden(true);\n        } else {\n            setHidden(false);\n        };\n    };\n\n    const toggle = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <div className=\"add-task-div\">\n            {hidden ? <Button color=\"success\" onClick={toggle}>Add Task</Button> : null}\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Add Task</ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <Label>Task</Label>\n                        <Input type=\"textarea\" />\n                    </FormGroup>\n                    <div>\n                        <FormGroup>\n                            <Label>Date</Label>\n                            <Input type=\"date\" placeholder=\"date placeholder\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Time</Label>\n                            <Input type=\"time\" placeholder=\"time placeholder\" />\n                        </FormGroup>\n                    </div>\n                    <FormGroup>\n                        <Label>Assigned To</Label>\n                        <Select />\n                        <Input type=\"hidden\" disabled />\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\">Submit</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddTaskBtn;"]},"metadata":{},"sourceType":"module"}