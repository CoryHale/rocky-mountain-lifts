{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPageTasksTab.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Table, Card, Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\nimport Select from 'react-select';\nimport { getUsers } from '../../actions/getUsers';\nimport { getCustomerTasks } from '../../actions/getCustomerTasks';\nimport { addTask } from '../../actions/addTask';\nimport '../../styles/employee-dashboard.scss';\n\nconst CustomerPageTasksTab = () => {\n  const [tasks, setTasks] = useState([]);\n  const getTasksFromState = useSelector(state => state.getCustomerTasksReducer.tasks);\n  const [isOpen, setIsOpen] = useState(false);\n  const [task, setTask] = useState({\n    taskDate: '',\n    taskTime: '',\n    taskDescription: '',\n    customerId: '',\n    employeeId: ''\n  });\n  const success = useSelector(state => state.addTaskReducer.success);\n  const [errors, setErrors] = useState({});\n  const getErrors = useSelector(state => state.addTaskReducer.errors);\n  const [employees, setEmployees] = useState([]);\n  const employeeArray = [];\n  const getUsersFromState = useSelector(state => state.getUsersReducer.users);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    const pathArray = location.pathname.split('/');\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomerTasks(customerId));\n    dispatch(getUsers());\n  }, []);\n  useEffect(() => {\n    if (getTasksFromState) {\n      setTasks(getTasksFromState);\n    }\n\n    ;\n  }, [getTasksFromState]);\n  useEffect(() => {\n    if (getUsersFromState.users) {\n      getUsersFromState.users.map(user => {\n        if (user.userType === 'employee' && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: 'employeeId',\n            jobTitle: user.jobTitle\n          });\n        }\n\n        ;\n      });\n      setEmployees(employeeArray);\n    }\n\n    ;\n  }, [getUsersFromState]);\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n\n    ;\n  }, [success]);\n  useEffect(() => {\n    if (getErrors) {\n      setErrors(getErrors);\n    }\n\n    ;\n  }, [getErrors]);\n\n  const dateConverter = date => {\n    const dateArray = date.split('-');\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = time => {\n    const timeArray = time.split(':');\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = 'AM';\n    } else {\n      m = 'PM';\n    }\n\n    ;\n\n    if (hour === 0) {\n      const newHour = '12';\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    ;\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = () => {\n    if (isOpen) {\n      setTask({ ...task,\n        taskDate: '',\n        taskTime: '',\n        taskDescription: '',\n        employeeId: ''\n      });\n      setErrors({});\n    }\n\n    ;\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = e => {\n    setTask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = e => {\n    setTask({ ...task,\n      [e.name]: e.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addTask(task));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-page-task-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    className: \"task-table-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-headers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, \"Time\")))), tasks ? tasks.tasks ? tasks.tasks.map(task => /*#__PURE__*/React.createElement(Card, {\n    className: \"task-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderless: true,\n    className: \"task-card-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, task.taskDescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, dateConverter(task.taskDate)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, timeConverter(task.taskTime))))))) : null : null, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task-date-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"taskDate\",\n    placeholder: \"date placeholder\",\n    onChange: handleChange,\n    invalid: errors.taskDate ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, errors.taskDate)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"time\",\n    name: \"taskTime\",\n    placeholder: \"time placeholder\",\n    onChange: handleChange,\n    invalid: errors.taskTime ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 33\n    }\n  }, errors.taskTime))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"taskDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, \"Task Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"taskDescription\",\n    onChange: handleChange,\n    invalid: errors.taskDescription ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, errors.taskDescription)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"employeeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"employeeId\",\n    options: employees,\n    onChange: handleSelectChange,\n    className: errors.employeeId ? 'invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    disabled: true,\n    invalid: errors.employeeId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, errors.employeeId)))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default CustomerPageTasksTab;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPageTasksTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useLocation","Table","Card","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","Select","getUsers","getCustomerTasks","addTask","CustomerPageTasksTab","tasks","setTasks","getTasksFromState","state","getCustomerTasksReducer","isOpen","setIsOpen","task","setTask","taskDate","taskTime","taskDescription","customerId","employeeId","success","addTaskReducer","errors","setErrors","getErrors","employees","setEmployees","employeeArray","getUsersFromState","getUsersReducer","users","dispatch","location","pathArray","pathname","split","length","map","user","userType","active","push","label","firstName","lastName","value","userId","name","jobTitle","toggle","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","handleChange","e","target","handleSelectChange","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    Table,\n    Card,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { getUsers } from '../../actions/getUsers';\nimport { getCustomerTasks } from '../../actions/getCustomerTasks';\nimport { addTask } from '../../actions/addTask';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst CustomerPageTasksTab = () => {\n    const [tasks, setTasks] = useState([]);\n    const getTasksFromState = useSelector(state => state.getCustomerTasksReducer.tasks);\n    const [isOpen, setIsOpen] = useState(false);\n    const [task, setTask] = useState({\n        taskDate: '',\n        taskTime: '',\n        taskDescription: '',\n        customerId: '',\n        employeeId: ''\n    });\n    const success = useSelector(state => state.addTaskReducer.success);\n    const [errors, setErrors] = useState({});\n    const getErrors = useSelector(state => state.addTaskReducer.errors);\n    const [employees, setEmployees] = useState([]);\n    const employeeArray = [];\n    const getUsersFromState = useSelector(state => state.getUsersReducer.users);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const customerId = pathArray[pathArray.length - 1];\n        dispatch(getCustomerTasks(customerId));\n        dispatch(getUsers());\n    }, []);\n\n    useEffect(() => {\n        if(getTasksFromState) {\n            setTasks(getTasksFromState);\n        };\n    }, [getTasksFromState]);\n\n    useEffect(() => {\n        if(getUsersFromState.users) {\n            getUsersFromState.users.map(user => {\n                if(user.userType === 'employee' && user.active === true) {\n                    employeeArray.push({\n                        label: `${user.firstName} ${user.lastName}`,\n                        value: user.userId,\n                        name: 'employeeId',\n                        jobTitle: user.jobTitle\n                    });\n                };\n            });\n\n            setEmployees(employeeArray);\n        };\n    }, [getUsersFromState]);\n\n    useEffect(() => {\n        if(success) {\n            toggle();\n        };\n    }, [success]);\n\n    useEffect(() => {\n        if(getErrors) {\n            setErrors(getErrors);\n        };\n    }, [getErrors]);\n\n    const dateConverter = date => {\n        const dateArray = date.split('-');\n        return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    };\n\n    const timeConverter = time => {\n        const timeArray = time.split(':');\n        const hour = parseInt(timeArray[0]);\n        let m;\n\n        if(hour <= 11) {\n            m = 'AM';\n        } else {\n            m = 'PM';\n        };\n\n        if(hour === 0) {\n            const newHour = '12';\n            timeArray[0] = newHour;\n        } else if(hour <= 12) {\n            const newHour = hour.toString();\n            timeArray[0] = newHour;\n        } else {\n            const newHour = (hour - 12).toString();\n            timeArray[0] = newHour;\n        };\n\n        return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    };\n\n    const toggle = () => {\n        if(isOpen) {\n            setTask({\n                ...task,\n                taskDate: '',\n                taskTime: '',\n                taskDescription: '',\n                employeeId: ''\n            });\n            setErrors({});\n        };\n        setIsOpen(!isOpen);\n    };\n\n    const handleChange = e => {\n        setTask({\n            ...task,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSelectChange = e => {\n        setTask({\n            ...task,\n            [e.name]: e.value\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(addTask(task));\n    };\n\n    return (\n        <div className=\"customer-page-task-tab\">\n            <Table borderless className=\"task-table-header\">\n                <thead>\n                    <tr className=\"table-headers\">\n                        <th>Task</th>\n                        <th>Date</th>\n                        <th>Time</th>\n                    </tr>\n                </thead>\n            </Table>\n            {tasks ? tasks.tasks ? tasks.tasks.map(task => (\n                <Card className=\"task-card\">\n                    <Table borderless className=\"task-card-table\">\n                        <tbody>\n                            <tr className=\"table-data\">\n                                <td>{task.taskDescription}</td>\n                                <td>{dateConverter(task.taskDate)}</td>\n                                <td>{timeConverter(task.taskTime)}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Card>\n            )) : null : null}\n            <Button outline color=\"success\" onClick={toggle}>Add Task</Button>\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Add Task</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmit}>\n                        <div className=\"add-task-date-div\">\n                            <FormGroup>\n                                <Label for=\"taskDate\">Date</Label>\n                                <Input type=\"date\" name=\"taskDate\" placeholder=\"date placeholder\" onChange={handleChange} invalid={errors.taskDate ? true : false} />\n                                <FormFeedback>{errors.taskDate}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"taskTime\">Time</Label>\n                                <Input type=\"time\" name=\"taskTime\" placeholder=\"time placeholder\" onChange={handleChange} invalid={errors.taskTime ? true : false} />\n                                <FormFeedback>{errors.taskTime}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"taskDescription\">Task Description</Label>\n                            <Input type=\"textarea\" name=\"taskDescription\" onChange={handleChange} invalid={errors.taskDescription ? true : false} />\n                            <FormFeedback>{errors.taskDescription}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"employeeId\">Assigned To</Label>\n                            <Select name=\"employeeId\" options={employees} onChange={handleSelectChange} className={errors.employeeId ? 'invalid' : ''} />\n                            <Input type=\"hidden\" disabled invalid={errors.employeeId ? true : false} />\n                            <FormFeedback>{errors.employeeId}</FormFeedback>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" onClick={handleSubmit}>Submit</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CustomerPageTasksTab;"]},"metadata":{},"sourceType":"module"}