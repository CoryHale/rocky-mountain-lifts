{"ast":null,"code":"import _defineProperty from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{useLocation}from'react-router-dom';import{Table,Card,Button,Modal,ModalHeader,ModalBody,ModalFooter,Form,FormGroup,Label,Input,FormFeedback}from'reactstrap';import Select from'react-select';import{getUsers}from'../../actions/getUsers';import{getCustomerTasks}from'../../actions/getCustomerTasks';import{addTask}from'../../actions/addTask';import'../../styles/employee-dashboard.scss';var CustomerPageTasksTab=function CustomerPageTasksTab(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var getTasksFromState=useSelector(function(state){return state.getCustomerTasksReducer.tasks;});var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOpen=_useState4[0],setIsOpen=_useState4[1];var _useState5=useState({taskDate:'',taskTime:'',taskDescription:'',customerId:'',employeeId:''}),_useState6=_slicedToArray(_useState5,2),task=_useState6[0],setTask=_useState6[1];var success=useSelector(function(state){return state.addTaskReducer.success;});var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),errors=_useState8[0],setErrors=_useState8[1];var getErrors=useSelector(function(state){return state.addTaskReducer.errors;});var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),employees=_useState10[0],setEmployees=_useState10[1];var employeeArray=[];var getUsersFromState=useSelector(function(state){return state.getUsersReducer.users;});var dispatch=useDispatch();var location=useLocation();useEffect(function(){var pathArray=location.pathname.split('/');var customerId=pathArray[pathArray.length-1];dispatch(getCustomerTasks(customerId));dispatch(getUsers());},[]);useEffect(function(){if(getTasksFromState){setTasks(getTasksFromState);};},[getTasksFromState]);useEffect(function(){if(getUsersFromState.users){getUsersFromState.users.map(function(user){if(user.userType==='employee'&&user.active===true){employeeArray.push({label:\"\".concat(user.firstName,\" \").concat(user.lastName),value:user.userId,name:'employeeId',jobTitle:user.jobTitle});};});setEmployees(employeeArray);};},[getUsersFromState]);useEffect(function(){if(success){toggle();};},[success]);useEffect(function(){if(getErrors){setErrors(getErrors);};},[getErrors]);var dateConverter=function dateConverter(date){var dateArray=date.split('-');return\"\".concat(dateArray[1],\"/\").concat(dateArray[2],\"/\").concat(dateArray[0]);};var timeConverter=function timeConverter(time){var timeArray=time.split(':');var hour=parseInt(timeArray[0]);var m;if(hour<=11){m='AM';}else{m='PM';};if(hour===0){var newHour='12';timeArray[0]=newHour;}else if(hour<=12){var _newHour=hour.toString();timeArray[0]=_newHour;}else{var _newHour2=(hour-12).toString();timeArray[0]=_newHour2;};return\"\".concat(timeArray[0],\":\").concat(timeArray[1],\" \").concat(m);};var toggle=function toggle(){if(isOpen){setTask(_objectSpread(_objectSpread({},task),{},{taskDate:'',taskTime:'',taskDescription:'',employeeId:''}));setErrors({});};setIsOpen(!isOpen);};var handleChange=function handleChange(e){setTask(_objectSpread(_objectSpread({},task),{},_defineProperty({},e.target.name,e.target.value)));};var handleSelectChange=function handleSelectChange(e){setTask(_objectSpread(_objectSpread({},task),{},_defineProperty({},e.name,e.value)));};var handleSubmit=function handleSubmit(e){e.preventDefault();dispatch(addTask(task));};return/*#__PURE__*/React.createElement(\"div\",{className:\"customer-page-task-tab\"},/*#__PURE__*/React.createElement(Table,{borderless:true,className:\"task-table-header\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"table-headers\"},/*#__PURE__*/React.createElement(\"th\",null,\"Task\"),/*#__PURE__*/React.createElement(\"th\",null,\"Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Time\")))),tasks?tasks.tasks?tasks.tasks.map(function(task){return/*#__PURE__*/React.createElement(Card,{className:\"task-card\"},/*#__PURE__*/React.createElement(Table,{borderless:true,className:\"task-card-table\"},/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"table-data\"},/*#__PURE__*/React.createElement(\"td\",null,task.taskDescription),/*#__PURE__*/React.createElement(\"td\",null,dateConverter(task.taskDate)),/*#__PURE__*/React.createElement(\"td\",null,timeConverter(task.taskTime))))));}):null:null,/*#__PURE__*/React.createElement(Button,{outline:true,color:\"success\",onClick:toggle},\"Add Task\"),/*#__PURE__*/React.createElement(Modal,{isOpen:isOpen,toggle:toggle},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggle},\"Add Task\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"add-task-date-div\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"taskDate\"},\"Date\"),/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"taskDate\",placeholder:\"date placeholder\",onChange:handleChange,invalid:errors.taskDate?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskDate)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"taskTime\"},\"Time\"),/*#__PURE__*/React.createElement(Input,{type:\"time\",name:\"taskTime\",placeholder:\"time placeholder\",onChange:handleChange,invalid:errors.taskTime?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskTime))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"taskDescription\"},\"Task Description\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",name:\"taskDescription\",onChange:handleChange,invalid:errors.taskDescription?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.taskDescription)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"employeeId\"},\"Assigned To\"),/*#__PURE__*/React.createElement(Select,{name:\"employeeId\",options:employees,onChange:handleSelectChange,className:errors.employeeId?'invalid':''}),/*#__PURE__*/React.createElement(Input,{type:\"hidden\",disabled:true,invalid:errors.employeeId?true:false}),/*#__PURE__*/React.createElement(FormFeedback,null,errors.employeeId)))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"success\",onClick:handleSubmit},\"Submit\"))));};export default CustomerPageTasksTab;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/CustomerPageTasksTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useLocation","Table","Card","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormFeedback","Select","getUsers","getCustomerTasks","addTask","CustomerPageTasksTab","tasks","setTasks","getTasksFromState","state","getCustomerTasksReducer","isOpen","setIsOpen","taskDate","taskTime","taskDescription","customerId","employeeId","task","setTask","success","addTaskReducer","errors","setErrors","getErrors","employees","setEmployees","employeeArray","getUsersFromState","getUsersReducer","users","dispatch","location","pathArray","pathname","split","length","map","user","userType","active","push","label","firstName","lastName","value","userId","name","jobTitle","toggle","dateConverter","date","dateArray","timeConverter","time","timeArray","hour","parseInt","m","newHour","toString","handleChange","e","target","handleSelectChange","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n    Table,\n    Card,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { getUsers } from '../../actions/getUsers';\nimport { getCustomerTasks } from '../../actions/getCustomerTasks';\nimport { addTask } from '../../actions/addTask';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst CustomerPageTasksTab = () => {\n    const [tasks, setTasks] = useState([]);\n    const getTasksFromState = useSelector(state => state.getCustomerTasksReducer.tasks);\n    const [isOpen, setIsOpen] = useState(false);\n    const [task, setTask] = useState({\n        taskDate: '',\n        taskTime: '',\n        taskDescription: '',\n        customerId: '',\n        employeeId: ''\n    });\n    const success = useSelector(state => state.addTaskReducer.success);\n    const [errors, setErrors] = useState({});\n    const getErrors = useSelector(state => state.addTaskReducer.errors);\n    const [employees, setEmployees] = useState([]);\n    const employeeArray = [];\n    const getUsersFromState = useSelector(state => state.getUsersReducer.users);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        const pathArray = location.pathname.split('/');\n        const customerId = pathArray[pathArray.length - 1];\n        dispatch(getCustomerTasks(customerId));\n        dispatch(getUsers());\n    }, []);\n\n    useEffect(() => {\n        if(getTasksFromState) {\n            setTasks(getTasksFromState);\n        };\n    }, [getTasksFromState]);\n\n    useEffect(() => {\n        if(getUsersFromState.users) {\n            getUsersFromState.users.map(user => {\n                if(user.userType === 'employee' && user.active === true) {\n                    employeeArray.push({\n                        label: `${user.firstName} ${user.lastName}`,\n                        value: user.userId,\n                        name: 'employeeId',\n                        jobTitle: user.jobTitle\n                    });\n                };\n            });\n\n            setEmployees(employeeArray);\n        };\n    }, [getUsersFromState]);\n\n    useEffect(() => {\n        if(success) {\n            toggle();\n        };\n    }, [success]);\n\n    useEffect(() => {\n        if(getErrors) {\n            setErrors(getErrors);\n        };\n    }, [getErrors]);\n\n    const dateConverter = date => {\n        const dateArray = date.split('-');\n        return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    };\n\n    const timeConverter = time => {\n        const timeArray = time.split(':');\n        const hour = parseInt(timeArray[0]);\n        let m;\n\n        if(hour <= 11) {\n            m = 'AM';\n        } else {\n            m = 'PM';\n        };\n\n        if(hour === 0) {\n            const newHour = '12';\n            timeArray[0] = newHour;\n        } else if(hour <= 12) {\n            const newHour = hour.toString();\n            timeArray[0] = newHour;\n        } else {\n            const newHour = (hour - 12).toString();\n            timeArray[0] = newHour;\n        };\n\n        return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    };\n\n    const toggle = () => {\n        if(isOpen) {\n            setTask({\n                ...task,\n                taskDate: '',\n                taskTime: '',\n                taskDescription: '',\n                employeeId: ''\n            });\n            setErrors({});\n        };\n        setIsOpen(!isOpen);\n    };\n\n    const handleChange = e => {\n        setTask({\n            ...task,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSelectChange = e => {\n        setTask({\n            ...task,\n            [e.name]: e.value\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(addTask(task));\n    };\n\n    return (\n        <div className=\"customer-page-task-tab\">\n            <Table borderless className=\"task-table-header\">\n                <thead>\n                    <tr className=\"table-headers\">\n                        <th>Task</th>\n                        <th>Date</th>\n                        <th>Time</th>\n                    </tr>\n                </thead>\n            </Table>\n            {tasks ? tasks.tasks ? tasks.tasks.map(task => (\n                <Card className=\"task-card\">\n                    <Table borderless className=\"task-card-table\">\n                        <tbody>\n                            <tr className=\"table-data\">\n                                <td>{task.taskDescription}</td>\n                                <td>{dateConverter(task.taskDate)}</td>\n                                <td>{timeConverter(task.taskTime)}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Card>\n            )) : null : null}\n            <Button outline color=\"success\" onClick={toggle}>Add Task</Button>\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Add Task</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmit}>\n                        <div className=\"add-task-date-div\">\n                            <FormGroup>\n                                <Label for=\"taskDate\">Date</Label>\n                                <Input type=\"date\" name=\"taskDate\" placeholder=\"date placeholder\" onChange={handleChange} invalid={errors.taskDate ? true : false} />\n                                <FormFeedback>{errors.taskDate}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"taskTime\">Time</Label>\n                                <Input type=\"time\" name=\"taskTime\" placeholder=\"time placeholder\" onChange={handleChange} invalid={errors.taskTime ? true : false} />\n                                <FormFeedback>{errors.taskTime}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"taskDescription\">Task Description</Label>\n                            <Input type=\"textarea\" name=\"taskDescription\" onChange={handleChange} invalid={errors.taskDescription ? true : false} />\n                            <FormFeedback>{errors.taskDescription}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"employeeId\">Assigned To</Label>\n                            <Select name=\"employeeId\" options={employees} onChange={handleSelectChange} className={errors.employeeId ? 'invalid' : ''} />\n                            <Input type=\"hidden\" disabled invalid={errors.employeeId ? true : false} />\n                            <FormFeedback>{errors.employeeId}</FormFeedback>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" onClick={handleSubmit}>Submit</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CustomerPageTasksTab;"]},"metadata":{},"sourceType":"module"}