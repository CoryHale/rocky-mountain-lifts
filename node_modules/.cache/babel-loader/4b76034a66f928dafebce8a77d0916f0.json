{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/EmployeeTable.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Table, Modal, ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, FormFeedback, Label, Input } from 'reactstrap';\nimport { editEmployee } from '../../actions/editEmployee';\nimport '../../styles/employee-dashboard.scss';\n\nconst EmployeeTable = props => {\n  const [curEmployee, setCurEmployee] = useState({\n    firstName: '',\n    lastName: '',\n    jobTitle: '',\n    tierLevel: null,\n    phoneNumber: '',\n    email: ''\n  });\n  const [errorsOne, setErrorsOne] = useState({});\n  const [successOne, setSuccessOne] = useState(false);\n  const getErrorsOne = useSelector(state => state.editEmployeeReducer.errors);\n  const getSuccessOne = useSelector(state => state.editEmployeeReducer.success);\n  const [isOpenModalOne, setIsOpenModalOne] = useState(false);\n  const [isOpenModalTwo, setIsOpenModalTwo] = useState(false);\n  const dispatch = useDispatch();\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    ;\n    setErrorsOne(getErrorsOne);\n  }, [getErrorsOne]);\n  useEffect(() => {\n    if (getSuccessOne === true) {\n      setSuccessOne(true);\n    }\n\n    ;\n  }, [getSuccessOne]);\n  useEffect(() => {\n    if (successOne === true) {\n      setIsOpenModalOne(false);\n      setErrorsOne({});\n      setSuccessOne(false);\n      setCurEmployee({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        tierLevel: null,\n        phoneNumber: '',\n        email: ''\n      });\n    }\n\n    ;\n  }, [successOne]);\n\n  const toggleOne = (e, employee) => {\n    if (!isOpenModalOne) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email,\n        userId: employee.userId\n      });\n    } else if (isOpenModalOne) {\n      setCurEmployee({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        tierLevel: null,\n        phoneNumber: '',\n        email: '',\n        userId: ''\n      });\n    }\n\n    setIsOpenModalOne(!isOpenModalOne);\n    setErrorsOne({});\n  };\n\n  const toggleTwo = (e, employee) => {\n    if (!isOpenModalTwo) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email,\n        userId: employee.userId\n      });\n    } else if (isOpenModalTwo) {\n      setCurEmployee({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        tierLevel: null,\n        phoneNumber: '',\n        email: '',\n        userId: ''\n      });\n    }\n\n    setIsOpenModalTwo(!isOpenModalTwo);\n  };\n\n  const handleChange = e => {\n    setCurEmployee({ ...curEmployee,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitOne = e => {\n    return;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, \"Tier Level\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, props ? props.props.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, employee.firstName, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, employee.jobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, employee.tierLevel), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.phoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }, employee.phoneNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, employee.email), /*#__PURE__*/React.createElement(\"td\", {\n    onClick: e => toggleOne(e, employee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-pen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 73\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    onClick: e => toggleTwo(e, employee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 73\n    }\n  })))) : null)), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModalOne,\n    toggle: toggleOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, \"Edit Employee\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    onChange: handleChange,\n    value: curEmployee.firstName,\n    invalid: errors.firstName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    onChange: handleChange,\n    value: curEmployee.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-info-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"job-title-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"jobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"jobTitle\",\n    id: \"jobTitle\",\n    onChange: handleChange,\n    value: curEmployee.jobTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 37\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 37\n    }\n  }, \"Service Technician\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }, \"Outside Sales\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, \"Service Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  }, \"Dispatch\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }, \"Office Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 37\n    }\n  }, \"Owner\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"tier-level-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"tierLevel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }, \"Tier Level\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"tierLevel\",\n    id: \"tierLevel\",\n    onChange: handleChange,\n    value: curEmployee.tierLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 37\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 37\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 37\n    }\n  }, \"3\")))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"phoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"phoneNumber\",\n    id: \"phoneNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    value: curEmployee.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleChange,\n    disabled: true,\n    value: curEmployee.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"submit\",\n    onClick: handleSubmitOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default EmployeeTable;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/EmployeeTable.js"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Table","Modal","ModalHeader","ModalBody","ModalFooter","Button","Form","FormGroup","FormFeedback","Label","Input","editEmployee","EmployeeTable","props","curEmployee","setCurEmployee","firstName","lastName","jobTitle","tierLevel","phoneNumber","email","errorsOne","setErrorsOne","successOne","setSuccessOne","getErrorsOne","state","editEmployeeReducer","errors","getSuccessOne","success","isOpenModalOne","setIsOpenModalOne","isOpenModalTwo","setIsOpenModalTwo","dispatch","isFirstRun","current","toggleOne","e","employee","userId","toggleTwo","handleChange","target","name","value","handleSubmitOne","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n    Table,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    Form,\n    FormGroup,\n    FormFeedback,\n    Label,\n    Input\n} from 'reactstrap';\nimport { editEmployee } from '../../actions/editEmployee';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst EmployeeTable = props => {\n    const [curEmployee, setCurEmployee] = useState({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        tierLevel: null,\n        phoneNumber: '',\n        email: ''\n    });\n    const [errorsOne, setErrorsOne] = useState({});\n    const [successOne, setSuccessOne] = useState(false);\n    const getErrorsOne = useSelector(state => state.editEmployeeReducer.errors);\n    const getSuccessOne = useSelector(state => state.editEmployeeReducer.success);\n    const [isOpenModalOne, setIsOpenModalOne] = useState(false);\n    const [isOpenModalTwo, setIsOpenModalTwo] = useState(false);\n    const dispatch = useDispatch();\n\n    const isFirstRun = useRef(true);\n    useEffect(() => {\n        if(isFirstRun.current) {\n            isFirstRun.current = false;\n            return;\n        };\n        setErrorsOne(getErrorsOne);\n    }, [getErrorsOne]);\n\n    useEffect(() => {\n        if(getSuccessOne === true) {\n            setSuccessOne(true);\n        };\n    }, [getSuccessOne]);\n\n    useEffect(() => {\n        if(successOne === true) {\n            setIsOpenModalOne(false);\n            setErrorsOne({});\n            setSuccessOne(false);\n            setCurEmployee({\n                firstName: '',\n                lastName: '',\n                jobTitle: '',\n                tierLevel: null,\n                phoneNumber: '',\n                email: ''\n            });\n        };\n    }, [successOne]);\n\n    const toggleOne = (e, employee) => {\n        if(!isOpenModalOne) {\n            setCurEmployee({\n                firstName: employee.firstName,\n                lastName: employee.lastName,\n                jobTitle: employee.jobTitle,\n                tierLevel: employee.tierLevel,\n                phoneNumber: employee.phoneNumber,\n                email: employee.email,\n                userId: employee.userId\n            });\n        } else if(isOpenModalOne) {\n            setCurEmployee({\n                firstName: '',\n                lastName: '',\n                jobTitle: '',\n                tierLevel: null,\n                phoneNumber: '',\n                email: '',\n                userId: '',\n            });\n        }\n        setIsOpenModalOne(!isOpenModalOne);\n        setErrorsOne({});\n    };\n\n    const toggleTwo = (e, employee) => {\n        if(!isOpenModalTwo) {\n            setCurEmployee({\n                firstName: employee.firstName,\n                lastName: employee.lastName,\n                jobTitle: employee.jobTitle,\n                tierLevel: employee.tierLevel,\n                phoneNumber: employee.phoneNumber,\n                email: employee.email,\n                userId: employee.userId\n            });\n        } else if(isOpenModalTwo) {\n            setCurEmployee({\n                firstName: '',\n                lastName: '',\n                jobTitle: '',\n                tierLevel: null,\n                phoneNumber: '',\n                email: '',\n                userId: ''\n            });\n        }\n        setIsOpenModalTwo(!isOpenModalTwo);\n    };\n\n    const handleChange = e => {\n        setCurEmployee({\n            ...curEmployee,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmitOne = e => {\n        return;\n    }\n    \n    return (\n        <div>\n            <Table hover>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Job Title</th>\n                        <th>Tier Level</th>\n                        <th>Phone Number</th>\n                        <th>Email</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props ? props.props.map(employee => (\n                        <tr>\n                            <th scope=\"row\">{employee.firstName} {employee.lastName}</th>\n                            <td>{employee.jobTitle}</td>\n                            <td>{employee.tierLevel}</td>\n                            <td>\n                                <a href={`tel:+1-${employee.phoneNumber}`}>{employee.phoneNumber}</a>\n                            </td>\n                            <td>{employee.email}</td>\n                            <td onClick={(e) => toggleOne(e, employee)}><i className=\"fad fa-pen\" /></td>\n                            <td onClick={(e) => toggleTwo(e, employee)}><i className=\"fad fa-trash\" /></td>\n                        </tr>\n                    )) : null}\n                </tbody>\n            </Table>\n            <Modal isOpen={isOpenModalOne} toggle={toggleOne}>\n                <ModalHeader toggle={toggleOne}>Edit Employee</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmitOne}>\n                        <div className=\"name-div\">\n                            <FormGroup>\n                                <Label for=\"firstName\">First Name</Label>\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={handleChange} value={curEmployee.firstName} invalid={errors.firstName ? true : false} />\n                                <FormFeedback></FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name</Label>\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={handleChange} value={curEmployee.lastName} />\n                            </FormGroup>\n                        </div>\n                        <div className=\"job-info-div\">\n                            <FormGroup className=\"job-title-form-group\">\n                                <Label for=\"jobTitle\">Job Title</Label>\n                                <Input type=\"select\" name=\"jobTitle\" id=\"jobTitle\" onChange={handleChange} value={curEmployee.jobTitle}>\n                                    <option>Select</option>\n                                    <option>Service Technician</option>\n                                    <option>Outside Sales</option>\n                                    <option>Service Manager</option>\n                                    <option>Dispatch</option>\n                                    <option>Office Manager</option>\n                                    <option>Owner</option>\n                                </Input>\n                            </FormGroup>\n                            <FormGroup className=\"tier-level-form-group\">\n                                <Label for=\"tierLevel\">Tier Level</Label>\n                                <Input type=\"select\" name=\"tierLevel\" id=\"tierLevel\" onChange={handleChange} value={curEmployee.tierLevel}>\n                                    <option>Select</option>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                </Input>\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"phoneNumber\">Phone Number</Label>\n                            <Input type=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleChange} value={curEmployee.phoneNumber} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange} disabled value={curEmployee.email} />\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" type=\"submit\" onClick={handleSubmitOne}>Submit</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n};\n\nexport default EmployeeTable;"]},"metadata":{},"sourceType":"module"}