{"ast":null,"code":"import axios from 'axios';\nimport { dbUrl } from './index';\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\nexport const login = creds => async dispatch => {\n  dispatch({\n    type: LOGIN_START\n  });\n\n  if (!creds.email) {\n    dispatch({\n      type: LOGIN_FAILED,\n      error: 'incorrect email'\n    });\n  }\n\n  ;\n\n  if (!creds.password) {\n    dispatch({\n      type: LOGIN_FAILED,\n      error: 'incorrect password'\n    });\n  }\n\n  ;\n  return await axios.post(`${dbUrl}/login`, creds).then(res => {\n    // localStorage.setItem('token', res.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    // localStorage.removeItem('token');\n    dispatch({\n      type: LOGIN_FAILED,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/src/actions/login.js"],"names":["axios","dbUrl","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILED","login","creds","dispatch","type","email","error","password","post","then","res","payload","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,KAAK,GAAGC,KAAK,IAAI,MAAMC,QAAN,IAAkB;AAC5CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;;AACA,MAAG,CAACI,KAAK,CAACG,KAAV,EAAiB;AACbF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,YAAR;AAAsBM,MAAAA,KAAK,EAAE;AAA7B,KAAD,CAAR;AACH;;AAAA;;AACD,MAAG,CAACJ,KAAK,CAACK,QAAV,EAAoB;AAChBJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,YAAR;AAAsBM,MAAAA,KAAK,EAAE;AAA7B,KAAD,CAAR;AACH;;AAAA;AAED,SAAO,MAAMV,KAAK,CACbY,IADQ,CACF,GAAEX,KAAM,QADN,EACeK,KADf,EAERO,IAFQ,CAEHC,GAAG,IAAI;AACT;AACAP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,aADD;AAELY,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GARQ,EASRC,KATQ,CASFC,GAAG,IAAI;AACV;AACAX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,YADD;AAELW,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIH,GAfQ,CAAb;AAgBH,CAzBM","sourcesContent":["import axios from 'axios';\nimport { dbUrl } from './index';\n\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\n\nexport const login = creds => async dispatch => {\n    dispatch({ type: LOGIN_START });\n    if(!creds.email) {\n        dispatch({ type: LOGIN_FAILED, error: 'incorrect email' });\n    };\n    if(!creds.password) {\n        dispatch({ type: LOGIN_FAILED, error: 'incorrect password' });\n    };\n\n    return await axios\n        .post(`${dbUrl}/login`, creds)\n        .then(res => {\n            // localStorage.setItem('token', res.data.token);\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            // localStorage.removeItem('token');\n            dispatch({\n                type: LOGIN_FAILED,\n                payload: err\n            });\n        });\n};"]},"metadata":{},"sourceType":"module"}