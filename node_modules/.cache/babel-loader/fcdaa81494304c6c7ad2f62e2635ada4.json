{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddWorkOrderBtn.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, FormFeedback, Label, Input } from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\nimport '../../styles/sidebar.scss';\n\nconst AddWorkOrderBtn = () => {\n  const [workOrder, setWorkOrder] = useState({\n    jobNumber: undefined,\n    customer: '',\n    serviceDate: '',\n    serviceType: '',\n    prevJobNumber: undefined,\n    quote: '',\n    notes: '',\n    officeNotes: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector(state => state);\n  const getSuccess = useSelector(state => state);\n  const employees = [];\n  const customers = [];\n  const getUsers = useSelector(state => state.getUsersReducer.users);\n  const [hidden, setHidden] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    changeHidden(location);\n  }, [location]);\n  useEffect(() => {\n    if (getUsers.users) {\n      getUsers.users.forEach(user => {\n        if (user.userType === 'employee') {\n          employees.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId\n          });\n        } else {\n          customers.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId\n          });\n        }\n\n        ;\n      });\n    }\n\n    ;\n  }, [getUsers]);\n\n  const toggle = e => {\n    setIsOpen(!isOpen);\n    setErrors({});\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    return;\n  };\n\n  const changeHidden = location => {\n    if (location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n      setHidden(true);\n    } else {\n      setHidden(false);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: hidden ? \"add-work-order-div\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, hidden ? /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }\n  }, \"Create Work Order\") : null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Create Work Order\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(Select, {\n    options: customers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default AddWorkOrderBtn;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/AddWorkOrderBtn.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","FormFeedback","Label","Input","Select","useLocation","AddWorkOrderBtn","workOrder","setWorkOrder","jobNumber","undefined","customer","serviceDate","serviceType","prevJobNumber","quote","notes","officeNotes","errors","setErrors","success","setSuccess","getErrors","state","getSuccess","employees","customers","getUsers","getUsersReducer","users","hidden","setHidden","isOpen","setIsOpen","dispatch","location","changeHidden","forEach","user","userType","push","label","firstName","lastName","value","userId","toggle","e","handleSubmit","preventDefault","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    FormFeedback,\n    Label,\n    Input\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { useLocation } from 'react-router-dom';\n\nimport '../../styles/sidebar.scss';\n\nconst AddWorkOrderBtn = () => {\n    const [workOrder, setWorkOrder] = useState({\n        jobNumber: undefined,\n        customer: '',\n        serviceDate: '',\n        serviceType: '',\n        prevJobNumber: undefined,\n        quote: '',\n        notes: '',\n        officeNotes: ''\n    });\n    const [errors, setErrors] = useState({});\n    const [success, setSuccess] = useState(false);\n    const getErrors = useSelector(state => state);\n    const getSuccess = useSelector(state => state);\n    const employees = [];\n    const customers = [];\n    const getUsers = useSelector(state => state.getUsersReducer.users); \n    const [hidden, setHidden] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        changeHidden(location);\n    }, [location]);\n\n    useEffect(() => {\n        if(getUsers.users) {\n            getUsers.users.forEach(user => {\n                if(user.userType === 'employee') {\n                    employees.push(\n                        {\n                            label: `${user.firstName} ${user.lastName}`,\n                            value: user.userId\n                        }\n                    );\n                } else {\n                    customers.push(\n                        {\n                            label: `${user.firstName} ${user.lastName}`,\n                            value: user.userId\n                        }\n                    );\n                };\n            });\n        };\n    }, [getUsers]);\n\n    const toggle = e => {\n        setIsOpen(!isOpen);\n        setErrors({});\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        return;\n    };\n\n    const changeHidden = location => {\n        if(location.pathname === '/e_dashboard/workorders' || location.pathname === '/e_dashboard/workorders/') {\n            setHidden(true);\n        } else {\n            setHidden(false);\n        };\n    };\n\n    return (\n        <div className={hidden ? \"add-work-order-div\": \"\"}>\n            {hidden ? <Button color=\"success\" onClick={toggle}>Create Work Order</Button> : null}\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Create Work Order</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <Label>Customer</Label>\n                            <Select options={customers} />\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddWorkOrderBtn;"]},"metadata":{},"sourceType":"module"}