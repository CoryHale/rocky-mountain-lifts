{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/EmployeeTable.js\";\nimport React, { useState } from 'react';\nimport { Table, Modal, ModalHeader, ModalBody, Button } from 'reactstrap';\nimport '../../styles/employee-dashboard.scss';\n\nconst EmployeeTable = props => {\n  const [isOpenModalOne, setIsOpenModalOne] = useState(false);\n  const [isOpenModalTwo, setIsOpenModalTwo] = useState(false);\n  const [curEmployee, setCurEmployee] = useState({});\n\n  const toggleOne = employee => {\n    setIsOpenModalOne(!isOpenModalOne);\n    console.log(employee);\n    setCurEmployee(employee);\n  };\n\n  const toggleTwo = employee => {\n    setIsOpenModalTwo(!isOpenModalTwo);\n    setCurEmployee(employee);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, \"Tier Level\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, props ? props.props.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, employee.firstName, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, employee.jobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, employee.tierLevel), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.phoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }, employee.phoneNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, employee.email), /*#__PURE__*/React.createElement(\"td\", {\n    onClick: (e, employee) => {\n      console.log(employee);\n      toggleOne(employee);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-pen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 105\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    onClick: employee => toggleTwo(employee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 75\n    }\n  })))) : null)), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModalOne,\n    toggle: toggleOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Edit Employee\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, curEmployee.firstName)));\n};\n\nexport default EmployeeTable;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/EmployeeTable.js"],"names":["React","useState","Table","Modal","ModalHeader","ModalBody","Button","EmployeeTable","props","isOpenModalOne","setIsOpenModalOne","isOpenModalTwo","setIsOpenModalTwo","curEmployee","setCurEmployee","toggleOne","employee","console","log","toggleTwo","map","firstName","lastName","jobTitle","tierLevel","phoneNumber","email","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { \n    Table,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Button\n} from 'reactstrap';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst EmployeeTable = props => {\n    const [isOpenModalOne, setIsOpenModalOne] = useState(false);\n    const [isOpenModalTwo, setIsOpenModalTwo] = useState(false);\n    const [curEmployee, setCurEmployee] = useState({});\n\n    const toggleOne = employee => {\n        setIsOpenModalOne(!isOpenModalOne);\n        console.log(employee)\n        setCurEmployee(employee);\n    };\n\n    const toggleTwo = employee => {\n        setIsOpenModalTwo(!isOpenModalTwo);\n        setCurEmployee(employee);\n    };\n    \n    return (\n        <div>\n            <Table hover>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Job Title</th>\n                        <th>Tier Level</th>\n                        <th>Phone Number</th>\n                        <th>Email</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props ? props.props.map(employee => (\n                        <tr>\n                            <th scope=\"row\">{employee.firstName} {employee.lastName}</th>\n                            <td>{employee.jobTitle}</td>\n                            <td>{employee.tierLevel}</td>\n                            <td>\n                                <a href={`tel:+1-${employee.phoneNumber}`}>{employee.phoneNumber}</a>\n                            </td>\n                            <td>{employee.email}</td>\n                            <td onClick={(e, employee) => {console.log(employee); toggleOne(employee)}}><i className=\"fad fa-pen\" /></td>\n                            <td onClick={employee => toggleTwo(employee)}><i className=\"fad fa-trash\" /></td>\n                        </tr>\n                    )) : null}\n                </tbody>\n            </Table>\n            <Modal isOpen={isOpenModalOne} toggle={toggleOne}>\n                <ModalHeader toggle={toggleOne}>Edit Employee</ModalHeader>\n                <ModalBody>\n                {curEmployee.firstName}\n                {/* <Form onSubmit={handleSubmit}>\n                        <div className=\"name-div\">\n                            <FormGroup>\n                                <Label for=\"firstName\">First Name</Label>\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={handleChange} invalid={errors.firstName ? true : false} />\n                                <FormFeedback>{errors.firstName}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name</Label>\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={handleChange} invalid={errors.lastName ? true : false} />\n                                <FormFeedback>{errors.lastName}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <div className=\"job-info-div\">\n                            <FormGroup className=\"job-title-form-group\">\n                                <Label for=\"jobTitle\">Job Title</Label>\n                                <Input type=\"select\" name=\"jobTitle\" id=\"jobTitle\" onChange={handleChange} invalid={errors.jobTitle ? true : false}>\n                                    <option>Select</option>\n                                    <option>Service Technician</option>\n                                    <option>Outside Sales</option>\n                                    <option>Service Manager</option>\n                                    <option>Dispatch</option>\n                                    <option>Office Manager</option>\n                                    <option>Owner</option>\n                                </Input>\n                                <FormFeedback>{errors.jobTitle}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup className=\"tier-level-form-group\">\n                                <Label for=\"tierLevel\">Tier Level</Label>\n                                <Input type=\"select\" name=\"tierLevel\" id=\"tierLevel\" onChange={handleChange} invalid={errors.tierLevel ? true : false}>\n                                    <option>Select</option>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                </Input>\n                                <FormFeedback>{errors.tierLevel}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"phoneNumber\">Phone Number</Label>\n                            <Input type=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleChange} invalid={errors.phoneNumber ? true : false} />\n                            <FormFeedback>{errors.phoneNumber}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"example@example.com\" onChange={handleChange} invalid={errors.email ? true : false} />\n                            <FormFeedback>{errors.email}</FormFeedback>\n                        </FormGroup>\n                        <div className=\"password-div\">\n                            <FormGroup>\n                                <Label for=\"password\">Password</Label>\n                                <Input type=\"password\" name=\"password\" id=\"password\" onChange={handleChange} invalid={errors.password ? true : false} />\n                                <FormFeedback>{errors.password}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"confirmPassword\">Confirm Password</Label>\n                                <Input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" onChange={handleChange} invalid={errors.confirmPassword ? true : false} />\n                                <FormFeedback>{errors.confirmPassword}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                    </Form> */}\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\nexport default EmployeeTable;"]},"metadata":{},"sourceType":"module"}