{"ast":null,"code":"var _jsxFileName = \"/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/EmployeeTable.js\";\nimport React, { useState } from 'react';\nimport { Table, Modal, ModalHeader, ModalBody, Button } from 'reactstrap';\nimport '../../styles/employee-dashboard.scss';\n\nconst EmployeeTable = props => {\n  const [isOpenModalOne, setIsOpenModalOne] = useState(false);\n  const [isOpenModalTwo, setIsOpenModalTwo] = useState(false);\n  const [curEmployee, setCurEmployee] = useState({\n    firstName: '',\n    lastName: '',\n    jobTitle: '',\n    tierLevel: null,\n    phoneNumber: '',\n    email: ''\n  });\n\n  const toggleOne = (e, employee) => {\n    setIsOpenModalOne(!isOpenModalOne);\n\n    if (isOpenModalOne) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email\n      });\n    } else {\n      setCurEmployee({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        tierLevel: null,\n        phoneNumber: '',\n        email: ''\n      });\n    }\n\n    ;\n  };\n\n  const toggleTwo = (e, employee) => {\n    setIsOpenModalTwo(!isOpenModalTwo);\n\n    if (isOpenModalTwo) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email\n      });\n    } else {\n      setCurEmployee({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        tierLevel: null,\n        phoneNumber: '',\n        email: ''\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Tier Level\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, props ? props.props.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, employee.firstName, \" \", employee.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, employee.jobTitle), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, employee.tierLevel), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:+1-${employee.phoneNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, employee.phoneNumber)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, employee.email), /*#__PURE__*/React.createElement(\"td\", {\n    onClick: e => toggleOne(e, employee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-pen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 73\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    onClick: employee => toggleTwo(employee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 75\n    }\n  })))) : null)), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModalOne,\n    toggle: toggleOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Edit Employee\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    onChange: handleChange,\n    invalid: errors.firstName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, errors.firstName)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    onChange: handleChange,\n    invalid: errors.lastName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, errors.lastName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-info-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"job-title-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"jobTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, \"Job Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"jobTitle\",\n    id: \"jobTitle\",\n    onChange: handleChange,\n    invalid: errors.jobTitle ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }, \"Service Technician\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }, \"Outside Sales\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, \"Service Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }, \"Dispatch\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 37\n    }\n  }, \"Office Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, \"Owner\")), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, errors.jobTitle)), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"tier-level-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"tierLevel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, \"Tier Level\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"tierLevel\",\n    id: \"tierLevel\",\n    onChange: handleChange,\n    invalid: errors.tierLevel ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, \"3\")), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, errors.tierLevel))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"phoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"phoneNumber\",\n    id: \"phoneNumber\",\n    placeholder: \"XXX-XXX-XXXX\",\n    onChange: handleChange,\n    invalid: errors.phoneNumber ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, errors.phoneNumber)), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, employee.email))))));\n};\n\nexport default EmployeeTable;","map":{"version":3,"sources":["/Users/coryhale/Documents/rocky-mountain-lifts/rocky_mountain_lifts_crm/rml_crm/src/components/Employees/EmployeeTable.js"],"names":["React","useState","Table","Modal","ModalHeader","ModalBody","Button","EmployeeTable","props","isOpenModalOne","setIsOpenModalOne","isOpenModalTwo","setIsOpenModalTwo","curEmployee","setCurEmployee","firstName","lastName","jobTitle","tierLevel","phoneNumber","email","toggleOne","e","employee","toggleTwo","map","handleSubmit","handleChange","errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { \n    Table,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Button\n} from 'reactstrap';\n\nimport '../../styles/employee-dashboard.scss';\n\nconst EmployeeTable = props => {\n    const [isOpenModalOne, setIsOpenModalOne] = useState(false);\n    const [isOpenModalTwo, setIsOpenModalTwo] = useState(false);\n    const [curEmployee, setCurEmployee] = useState({\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        tierLevel: null,\n        phoneNumber: '',\n        email: ''\n    });\n\n    const toggleOne = (e, employee) => {\n        setIsOpenModalOne(!isOpenModalOne);\n        if(isOpenModalOne) {\n            setCurEmployee({\n                firstName: employee.firstName,\n                lastName: employee.lastName,\n                jobTitle: employee.jobTitle,\n                tierLevel: employee.tierLevel,\n                phoneNumber: employee.phoneNumber,\n                email: employee.email\n            });\n        } else {\n            setCurEmployee({\n                firstName: '',\n                lastName: '',\n                jobTitle: '',\n                tierLevel: null,\n                phoneNumber: '',\n                email: ''\n            });\n        };\n    };\n\n    const toggleTwo = (e, employee) => {\n        setIsOpenModalTwo(!isOpenModalTwo);\n        if(isOpenModalTwo) {\n            setCurEmployee({\n                firstName: employee.firstName,\n                lastName: employee.lastName,\n                jobTitle: employee.jobTitle,\n                tierLevel: employee.tierLevel,\n                phoneNumber: employee.phoneNumber,\n                email: employee.email\n            });\n        } else {\n            setCurEmployee({\n                firstName: '',\n                lastName: '',\n                jobTitle: '',\n                tierLevel: null,\n                phoneNumber: '',\n                email: ''\n            });\n        };\n    };\n    \n    return (\n        <div>\n            <Table hover>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Job Title</th>\n                        <th>Tier Level</th>\n                        <th>Phone Number</th>\n                        <th>Email</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props ? props.props.map(employee => (\n                        <tr>\n                            <th scope=\"row\">{employee.firstName} {employee.lastName}</th>\n                            <td>{employee.jobTitle}</td>\n                            <td>{employee.tierLevel}</td>\n                            <td>\n                                <a href={`tel:+1-${employee.phoneNumber}`}>{employee.phoneNumber}</a>\n                            </td>\n                            <td>{employee.email}</td>\n                            <td onClick={(e) => toggleOne(e, employee)}><i className=\"fad fa-pen\" /></td>\n                            <td onClick={employee => toggleTwo(employee)}><i className=\"fad fa-trash\" /></td>\n                        </tr>\n                    )) : null}\n                </tbody>\n            </Table>\n            <Modal isOpen={isOpenModalOne} toggle={toggleOne}>\n                <ModalHeader toggle={toggleOne}>Edit Employee</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={handleSubmit}>\n                        <div className=\"name-div\">\n                            <FormGroup>\n                                <Label for=\"firstName\">First Name</Label>\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={handleChange} invalid={errors.firstName ? true : false} />\n                                <FormFeedback>{errors.firstName}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name</Label>\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={handleChange} invalid={errors.lastName ? true : false} />\n                                <FormFeedback>{errors.lastName}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <div className=\"job-info-div\">\n                            <FormGroup className=\"job-title-form-group\">\n                                <Label for=\"jobTitle\">Job Title</Label>\n                                <Input type=\"select\" name=\"jobTitle\" id=\"jobTitle\" onChange={handleChange} invalid={errors.jobTitle ? true : false}>\n                                    <option>Select</option>\n                                    <option>Service Technician</option>\n                                    <option>Outside Sales</option>\n                                    <option>Service Manager</option>\n                                    <option>Dispatch</option>\n                                    <option>Office Manager</option>\n                                    <option>Owner</option>\n                                </Input>\n                                <FormFeedback>{errors.jobTitle}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup className=\"tier-level-form-group\">\n                                <Label for=\"tierLevel\">Tier Level</Label>\n                                <Input type=\"select\" name=\"tierLevel\" id=\"tierLevel\" onChange={handleChange} invalid={errors.tierLevel ? true : false}>\n                                    <option>Select</option>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                </Input>\n                                <FormFeedback>{errors.tierLevel}</FormFeedback>\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"phoneNumber\">Phone Number</Label>\n                            <Input type=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" placeholder=\"XXX-XXX-XXXX\" onChange={handleChange} invalid={errors.phoneNumber ? true : false} />\n                            <FormFeedback>{errors.phoneNumber}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange}>{employee.email}</Input>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\nexport default EmployeeTable;"]},"metadata":{},"sourceType":"module"}