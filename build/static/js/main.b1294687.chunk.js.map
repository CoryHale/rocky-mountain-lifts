{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/login-components/PrivateRoute.js","components/dashboard-components/Footer.js","contexts/withAuth.js","actions/getCurrentUser.js","actions/getUsers.js","actions/addTask.js","actions/editTask.js","actions/deleteTask.js","actions/addWorkOrder.js","actions/editWorkOrder.js","actions/getCustomers.js","actions/getCustomer.js","actions/getEmployees.js","actions/index.js","components/login-components/Login.js","components/login-components/ForgotPassword.js","components/dashboard-components/Header.js","components/sidebar-components/Search.js","components/sidebar-components/TaskToggle.js","actions/taskToggle.js","components/sidebar-components/AddTaskBtn.js","components/sidebar-components/AddEventBtn.js","actions/addEvent.js","components/sidebar-components/WorkOrderToggle.js","actions/workOrderToggle.js","components/sidebar-components/AddWorkOrderBtn.js","components/sidebar-components/JobToggle.js","actions/jobToggle.js","components/sidebar-components/AddCustomerBtn.js","actions/registerCustomer.js","components/sidebar-components/EmployeesToggle.js","actions/employeesToggle.js","components/sidebar-components/AddEmployeeBtn.js","actions/registerEmployee.js","components/dashboard-components/Sidebar.js","components/content-components/Task.js","actions/getTasks.js","actions/getEvents.js","actions/getWorkOrders.js","components/content-components/Calendar.js","actions/deleteEvent.js","components/content-components/OpenWorkOrders.js","components/content-components/ClosedWorkOrders.js","components/content-components/WorkOrder.js","actions/getWorkOrder.js","components/content-components/Customers.js","components/customer-page-components/InfoTab.js","actions/editCustomer.js","components/customer-page-components/TaskTab.js","actions/getCustomerTasks.js","components/customer-page-components/AppointmentTab.js","components/customer-page-components/NoteTab.js","actions/getCustomerNotes.js","actions/addNote.js","components/customer-page-components/EmployeeTab.js","actions/addEmployeeToCustomer.js","components/customer-page-components/LiftTab.js","components/customer-page-components/DocumentTab.js","components/content-components/Customer.js","components/content-components/EmployeesTable.js","actions/editEmployee.js","actions/changeEmployeeStatus.js","components/content-components/CurrentEmployees.js","components/content-components/AllEmployees.js","components/dashboard-components/Content.js","components/dashboard-components/Dashboard.js","App.js","reducers/getCurrentUserReducer.js","reducers/getUsersReducer.js","reducers/taskToggleReducer.js","reducers/addTaskReducer.js","reducers/getTasksReducer.js","reducers/editTaskReducer.js","reducers/deleteTaskReducer.js","reducers/addEventReducer.js","reducers/getEventsReducer.js","reducers/deleteEventReducer.js","reducers/workOrderToggleReducer.js","reducers/addWorkOrderReducer.js","reducers/getWorkOrdersReducer.js","reducers/getWorkOrderReducer.js","reducers/editWorkOrderReducer.js","reducers/jobToggleReducer.js","reducers/registerCustomerReducer.js","reducers/getCustomersReducer.js","reducers/getCustomerReducer.js","reducers/editCustomerReducer.js","reducers/getCustomerTasksReducer.js","reducers/getCustomerNotesReducer.js","reducers/addEmployeeToCustomerReducer.js","reducers/addNoteReducer.js","reducers/employeesToggleReducer.js","reducers/registerEmployeeReducer.js","reducers/getEmployeesReducer.js","reducers/editEmployeeReducer.js","reducers/changeEmployeeStatusReducer.js","reducers/index.js","configureStore.js","index.js","assets/logo.png"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLodaing","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","PrivateRoute","Component","component","rest","render","props","to","Footer","className","a","getIdToken","token","axios","create","headers","Accept","Authorization","getUsers","dispatch","type","axiosWithAuth","axiosAuth","get","dbUrl","then","res","payload","data","catch","err","addTask","task","post","response","editTask","console","log","put","deleteTask","taskId","delete","addWorkOrder","workOrder","editWorkOrder","getCustomers","getCustomer","customerId","getEmployees","Login","creds","setCreds","error","setError","setLoading","fetchCurrentUser","useSelector","state","getCurrentUserReducer","flag","setFlag","flagTwo","setFlagTwo","useDispatch","history","useHistory","uid","push","handleChange","e","target","name","handleSubmit","preventDefault","Navbar","NavbarBrand","href","src","logo","alt","Card","CardBody","Alert","color","Form","onSubmit","FormGroup","Label","for","Input","onChange","Button","disabled","ForgotPassword","message","setMessage","forgotPassword","Header","isOpen","setIsOpen","isOpenNotifications","setIsOpenNotifications","fetchUser","handleLogout","localStorage","clear","expand","Logo","Nav","navbar","userType","NavItem","NavLink","tag","RRNavLink","activeClassName","exact","tierLevel","Dropdown","toggle","DropdownToggle","DropdownMenu","direction","DropdownItem","firstName","lastName","primaryContact","onClick","Search","search","setSearch","placeholder","TaskToggle","calendarView","taskToggleReducer","ButtonGroup","active","AddTaskBtn","taskDescription","taskDate","taskTime","employeeId","setTask","employeeArray","employees","setEmployees","getUsersReducer","users","errors","setErrors","getErrors","addTaskReducer","success","map","label","userId","jobTitle","Modal","ModalHeader","ModalBody","invalid","FormFeedback","options","ModalFooter","AddEventBtn","title","startDate","endDate","startTime","endTime","allDay","recurring","daysOfWeek","extendedProps","location","invitees","description","event","setEvent","fetchUsers","addEventReducer","fetchErrors","array","forEach","handleExtendedChange","handleDaysChange","temp","day","parseInt","includes","filter","i","sort","addEvent","inline","check","isMulti","WorkOrderToggle","open","workOrderToggleReducer","AddWorkOrderBtn","customer","serviceDate","serviceStartTime","serviceEndTime","serviceDescription","serviceType","dispatcher","serviceManager","officeManager","crewMembers","jobNumber","notes","officeNotes","quote","setWorkOrder","setSuccess","addWorkOrderReducer","getSuccess","serviceManagers","setServiceManagers","officeManagers","setOfficeManagers","employeesArray","serviceManagersArray","officeManagersArray","customers","setCustomers","customersArray","isOpenCheck","setIsOpenCheck","warnings","setWarnings","isFirstRun","useRef","current","businessName","serviceManagerId","officeManagerId","employee","toggleCheck","handleSelectChange","warningCheck","warningsObject","trim","Object","keys","length","id","serviceTypes","services","defaultValue","members","values","warning","JobToggle","jobToggleReducer","AddCustomerBtn","industry","billingContact","primaryOfficeNumber","primaryExt","primaryCellNumber","primaryEmail","primaryJobTitle","billingOfficeNumber","billingExt","billingCellNumber","billingEmail","billingJobTitle","shopAddress","address","city","zipcode","billingAddress","noBillingContact","setCustomer","registerCustomerReducer","handlePrimaryContactChange","handleBillingContactChange","handleShopAddressChange","handleBillingAddressChange","EmployeesToggle","all","employeesToggleReducer","AddEmployeeBtn","phoneNumber","confirmPassword","credentials","setCredentials","registerEmployeeReducer","Sidebar","path","Task","tasks","setTasks","fetchTasks","getTasksReducer","workOrders","setWorkOrders","fetchWorkOrders","getWorkOrdersReducer","fetchEmployees","getEmployeesReducer","currentTask","setCurrentTask","editSuccess","editTaskReducer","deleteSuccess","deleteTaskReducer","status","handleEditTask","Table","borderless","date","dateArray","split","dateConverter","time","m","timeArray","hour","newHour","toString","timeConverter","workOrderId","customerName","handleDeleteTask","TaskCalendar","events","setEvents","eventId","curEvent","setCurEvent","fetchEvents","getEventsReducer","deleteEventReducer","start","end","startRecur","eventType","handleDeleteEvent","deleteEvent","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","bootstrapPlugin","initialView","headerToolbar","left","center","right","eventClick","_def","themeSystem","height","person","join","decoder","OpenWorkOrders","getWorkOrders","jobId","handleClick","ClosedWorkOrders","WorkOrder","mapsAddress","setMapsAddress","getWorkOrderFromState","getWorkOrderReducer","allEmployees","setAllEmployees","fetchAllUsers","isOpenServiceModal","setIsOpenServiceModal","make","model","serialNumber","bayNumber","serviceDone","billableHours","partsUsed","partsNeeded","images","service","setService","serviceErrors","setServiceErrors","quantity","partDescription","partNumber","partUsed","setPartUsed","partUsedErrors","setPartUsedErrors","partNeeded","setPartNeeded","partNeededErrors","setPartNeededErrors","isOpenPartUsed","setIsOpenPartUsed","isOpenPartNeeded","setIsOpenPartNeeded","hideOfficeNotes","setHideOfficeNotes","hideSignaturePad","setHideSignaturePad","hideEditButton","setHideEditButton","hideSubmitForSignatureButton","setHideSubmitForSignatureButton","hideSubmitForReviewButton","setHideSubmitForReviewButton","sigPad","reviewFlag","setReviewFlag","editPunchOpen","setEditPunchOpen","currentPunch","setCurrentPunch","hours","setHours","minutes","setMinutes","editServiceOpen","setEditServiceOpen","currentService","setCurrentService","inspectionForm","setInspectionForm","rmlTrainingForm","setRmlTrainingForm","setSkTrainingForm","useLocation","pathArray","pathname","getWorkOrder","storage","ref","child","getDownloadURL","url","addressConverter","newAddress","newCity","searchableAddress","jobTimeConverter","timeAccrued","seconds","Math","floor","toggleServiceModal","handleChangeService","handleSubmitService","togglePartUsed","togglePartNeeded","handleChangePartUsed","handleSubmitPartUsed","handleChangePartNeeded","handleSubmitPartNeeded","handleEditWorkOrder","toggleEditPunch","punch","crewId","clockIn","submitTimeChange","totalMilliSec","crewPunches","toggleEditService","handleServiceEditChange","submitServiceEditChange","rel","types","typeConverter","crewNames","member","crewConverter","crewMemberConverter","total","answer","reduce","acc","curVal","totalTime","Date","getTime","punches","alert","hover","size","scope","outline","window","travelTime","travelMileage","signature","canvasProps","getTrimmedCanvas","toDataURL","min","max","step","part","multiple","accept","capture","Customers","fetchCustomers","getCustomersReducer","InfoTab","getCustomerFromState","getCustomerReducer","editedCustomer","setEditedCustomer","editCustomerReducer","getErrorsFromState","firstname","TaskTab","getTasksFromState","getCustomerTasksReducer","isOpenEdit","setIsOpenEdit","getUsersFromState","getCustomerTasks","toggleEdit","handleEditChange","handleSubmitEdit","AppointmentTab","NoteTab","setNotes","getNotesFromState","getCustomerNotesReducer","note","createdBy","createdOnDate","createdAtTime","setNote","addNoteReducer","getCustomerNotes","addNote","toLocaleDateString","toLocaleTimeString","employeeFinder","EmployeeTab","officeNumber","officeExt","cellNumber","setEmployee","updatedCustomer","errorsObject","match","LiftTab","DocumentTab","CustomerPage","activeTab","setActiveTab","toggleTab","tab","tabs","classnames","TabContent","TabPane","tabId","EmployeesTable","undefined","curEmployee","setCurEmployee","errorsOne","setErrorsOne","successOne","setSuccessOne","getErrorsOne","editEmployeeReducer","getSuccessOne","isOpenModalOne","setIsOpenModalOne","successTwo","setSuccessTwo","getSuccessTwo","changeEmployeeStatusReducer","isOpenModalTwo","setIsOpenModalTwo","toggleOne","toggleTwo","handleSubmitOne","CurrentEmployees","currentEmployees","setCurrentEmployees","activeEmployees","AllEmployees","Content","taskView","openWorkOrders","Calendar","Customer","Dashboard","App","initialState","gettingCurrentUser","gettingUsers","adding","gettingTasks","editing","deleting","gettingEvents","gettingWorkOrders","gettingWorkOrder","registering","gettingCustomers","gettingCustomer","gettingNotes","gettingEmployees","changingStatus","persistConfig","key","whitelist","rootReducer","combineReducers","action","responseArray","editWorkOrderReducer","addEmployeeToCustomerReducer","persistReducer","store","createStore","applyMiddleware","logger","thunk","persistor","persistStore","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b1294687.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport default app;\nexport const auth = app.auth();","import React, { useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLodaing] = useState(true);\n\n  const login = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const logout = () => {\n    return auth.signOut();\n  };\n\n  const resetPassword = (email) => {\n    return auth.sendPasswordResetEmail();\n  };\n\n  const updateEmail = (email) => {\n    return currentUser.updateEmail(email);\n  };\n\n  const updatePassword = (password) => {\n    return currentUser.updatePassword(password);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLodaing(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"credits\">\n        <p>&copy; 2020 - Rocky Mountain Lifts - All rights reserved</p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nimport { auth } from \"../firebase\";\n\nexport default async function () {\n  const token = await auth.currentUser.getIdToken();\n\n  return axios.create({\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"POST, GET, OPTIONS, PUT\",\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n","import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_CURRENT_USER_START = \"GET_CURRENT_USER_START\";\nexport const GET_CURRENT_USER_SUCCESS = \"GET_CURRENT_USER_SUCCESS\";\nexport const GET_CURRENT_USER_FAILED = \"GET_CURRENT_USER_FAILED\";\n\nexport const getCurrentUser = (uid) => async (dispatch) => {\n  dispatch({ type: GET_CURRENT_USER_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return await axiosAuth\n    .get(`${dbUrl}/currentUser`, uid)\n    .then((res) => {\n      dispatch({\n        type: GET_CURRENT_USER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_CURRENT_USER_FAILED,\n        payload: err,\n      });\n    });\n};\n","import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_USERS_START = \"GET_USERS_START\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\n\nexport const getUsers = () => async (dispatch) => {\n  dispatch({ type: GET_USERS_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return await axiosAuth\n    .get(`${dbUrl}/users`)\n    .then((res) => {\n      dispatch({\n        type: GET_USERS_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_USERS_FAILURE,\n        payload: err,\n      });\n    });\n};\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const ADD_TASK_START = \"ADD_TASK_START\";\nexport const ADD_TASK_SUCCESS = \"ADD_TASK_SUCCESS\";\nexport const ADD_TASK_FAILURE = \"ADD_TASK_FAILURE\";\n\nexport const addTask = (task) => async (dispatch) => {\n  dispatch({ type: ADD_TASK_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .post(`${dbUrl}/tasks`, task)\n    .then(() => {\n      dispatch({\n        type: ADD_TASK_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ADD_TASK_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const EDIT_TASK_START = \"EDIT_TASK_START\";\nexport const EDIT_TASK_SUCCESS = \"EDIT_TASK_SUCCESS\";\nexport const EDIT_TASK_FAILURE = \"EDIT_TASK_FAILURE\";\n\nexport const editTask = (data) => async (dispatch) => {\n  dispatch({ type: EDIT_TASK_START });\n\n  console.log(data)\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .put(`${dbUrl}/task`, data)\n    .then(() => {\n      dispatch({\n        type: EDIT_TASK_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: EDIT_TASK_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const DELETE_TASK_START = \"DELETE_TASK_START\";\nexport const DELETE_TASK_SUCCESS = \"DELETE_TASK_SUCCESS\";\nexport const DELETE_TASK_FAILURE = \"DELETE_TASK_FAILURE\";\n\nexport const deleteTask = (taskId) => async (dispatch) => {\n  dispatch({ type: DELETE_TASK_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .delete(`${dbUrl}/task/${taskId}`)\n    .then(() => {\n      dispatch({\n        type: DELETE_TASK_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: DELETE_TASK_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const ADD_WORK_ORDER_START = \"ADD_WORK_ORDER_START\";\nexport const ADD_WORK_ORDER_SUCCESS = \"ADD_WORK_ORDER_SUCCESS\";\nexport const ADD_WORK_ORDER_FAILURE = \"ADD_WORK_ORDER_FAILURE\";\n\nexport const addWorkOrder = (workOrder) => async (dispatch) => {\n  dispatch({ type: ADD_WORK_ORDER_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .post(`${dbUrl}/work_orders`, workOrder)\n    .then(() => {\n      dispatch({\n        type: ADD_WORK_ORDER_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ADD_WORK_ORDER_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const EDIT_WORK_ORDER_START = \"EDIT_WORK_ORDER_START\";\nexport const EDIT_WORK_ORDER_SUCCESS = \"EDIT_WORK_ORDER_SUCCESS\";\nexport const EDIT_WORK_ORDER_FAILURE = \"EDIT_WORK_ORDER_FAILURE\";\n\nexport const editWorkOrder = (data) => async (dispatch) => {\n  dispatch({ type: EDIT_WORK_ORDER_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .put(`${dbUrl}/work_order`, data)\n    .then(() => {\n      dispatch({\n        type: EDIT_WORK_ORDER_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: EDIT_WORK_ORDER_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};","import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_CUSTOMERS_START = \"GET_CUSTOMERS_START\";\nexport const GET_CUSTOMERS_SUCCESS = \"GET_CUSTOMERS_SUCCESS\";\nexport const GET_CUSTOMERS_FAILURE = \"GET_CUSTOMERS_FAILURE\";\n\nexport const getCustomers = () => async (dispatch) => {\n  dispatch({ type: GET_CUSTOMERS_START });\n\n  const axiosAuth = await axiosWithAuth()\n\n  return axiosAuth\n    .get(`${dbUrl}/customers`)\n    .then((res) => {\n      dispatch({\n        type: GET_CUSTOMERS_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_CUSTOMERS_FAILURE,\n        payload: err,\n      });\n    });\n};\n","import { dbUrl } from './index';\nimport axiosWithAuth from '../contexts/withAuth';\n\nexport const GET_CUSTOMER_START = 'GET_CUSTOMER_START';\nexport const GET_CUSTOMER_SUCCESS = 'GET_CUSTOMER_SUCCESS';\nexport const GET_CUSTOMER_FAILURE = 'GET_CUSTOMER_FAILURE';\n\nexport const getCustomer = customerId => async dispatch => {\n    dispatch({ type: GET_CUSTOMER_START });\n\n    const axiosAuth = await axiosWithAuth();\n\n    return axiosAuth\n        .get(`${dbUrl}/customer/${customerId}`)\n        .then(res => {\n            dispatch({\n                type: GET_CUSTOMER_SUCCESS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_CUSTOMER_FAILURE,\n                payload: err\n            });\n        });\n};","import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_EMPLOYEES_START = \"GET_EMPLOYEES_START\";\nexport const GET_EMPLOYEES_SUCCESS = \"GET_EMPLOYEES_SUCCESS\";\nexport const GET_EMPLOYEES_FAILURE = \"GET_EMPLOYEES_FAILURE\";\n\nexport const getEmployees = () => async (dispatch) => {\n  dispatch({ type: GET_EMPLOYEES_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .get(`${dbUrl}/employees`)\n    .then((res) => {\n      dispatch({\n        type: GET_EMPLOYEES_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_EMPLOYEES_FAILURE,\n        payload: err,\n      });\n    });\n};\n","// USER ACTIONS\n\nexport {\n  GET_CURRENT_USER_START,\n  GET_CURRENT_USER_SUCCESS,\n  GET_CURRENT_USER_FAILED,\n  getCurrentUser,\n} from \"./getCurrentUser\";\n\nexport {\n  GET_USERS_START,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILURE,\n  getUsers,\n} from \"./getUsers\";\n\n// TASK ACTIONS\n\nexport {\n  CALENDAR_VIEW,\n  LIST_VIEW,\n  toggleCalendarView,\n  toggleListView,\n} from \"./taskToggle\";\n\nexport {\n  ADD_TASK_START,\n  ADD_TASK_SUCCESS,\n  ADD_TASK_FAILURE,\n  addTask,\n} from \"./addTask\";\n\nexport {\n  GET_TASKS_START,\n  GET_TASKS_SUCCESS,\n  GET_TASKS_FAILURE,\n  getTasks,\n} from \"./getTasks\";\n\nexport {\n  EDIT_TASK_START,\n  EDIT_TASK_SUCCESS,\n  EDIT_TASK_FAILURE,\n  editTask,\n} from \"./editTask\";\n\nexport {\n  DELETE_TASK_START,\n  DELETE_TASK_SUCCESS,\n  DELETE_TASK_FAILURE,\n  deleteTask,\n} from \"./deleteTask\";\n\n// EVENT ACTIONS\n\nexport {\n  ADD_EVENT_START,\n  ADD_EVENT_SUCCESS,\n  ADD_EVENT_FAILURE,\n  addEvent,\n} from \"./addEvent\";\n\nexport {\n  GET_EVENTS_START,\n  GET_EVENTS_SUCCESS,\n  GET_EVENTS_FAILURE,\n  getEvents,\n} from \"./getEvents\";\n\nexport {\n  DELETE_EVENT_START,\n  DELETE_EVENT_SUCCESS,\n  DELETE_EVENT_FAILURE,\n  deleteEvent,\n} from \"./deleteEvent\";\n\n// WORK ORDER ACTIONS\n\nexport {\n  OPEN_WORK_ORDERS,\n  CLOSE_WORK_ORDERS,\n  openWorkOrders,\n  closeWorkOrders,\n} from \"./workOrderToggle\";\n\nexport {\n  ADD_WORK_ORDER_START,\n  ADD_WORK_ORDER_SUCCESS,\n  ADD_WORK_ORDER_FAILURE,\n  addWorkOrder,\n} from \"./addWorkOrder\";\n\nexport {\n  GET_WORK_ORDERS_START,\n  GET_WORK_ORDERS_SUCCESS,\n  GET_WORK_ORDERS_FAILURE,\n  getWorkOrders,\n} from \"./getWorkOrders\";\n\nexport {\n  GET_WORK_ORDER_START,\n  GET_WORK_ORDER_SUCCESS,\n  GET_WORK_ORDER_FAILURE,\n  getWorkOrder,\n} from \"./getWorkOrder\";\n\nexport {\n  EDIT_WORK_ORDER_START,\n  EDIT_WORK_ORDER_SUCCESS,\n  EDIT_WORK_ORDER_FAILURE,\n  editWorkOrder,\n} from \"./editWorkOrder\";\n\n// JOB ACTIONS\n\nexport { OPEN_JOBS, CLOSE_JOBS, openJobs, closeJobs } from \"./jobToggle\";\n\n// CUSTOMER ACTIONS\n\nexport {\n  REGISTER_CUSTOMER_START,\n  REGISTER_CUSTOMER_SUCCESS,\n  REGISTER_CUSTOMER_FAILURE,\n  registerCustomer,\n} from \"./registerCustomer\";\n\nexport {\n  GET_CUSTOMERS_START,\n  GET_CUSTOMERS_SUCCESS,\n  GET_CUSTOMERS_FAILURE,\n  getCustomers,\n} from \"./getCustomers\";\n\nexport {\n  GET_CUSTOMER_START,\n  GET_CUSTOMER_SUCCESS,\n  GET_CUSTOMER_FAILURE,\n  getCustomer,\n} from \"./getCustomer\";\n\nexport {\n  EDIT_CUSTOMER_START,\n  EDIT_CUSTOMER_SUCCESS,\n  EDIT_CUSTOMER_FAILURE,\n  editCustomer,\n} from \"./editCustomer\";\n\nexport {\n  GET_CUSTOMER_TASKS_START,\n  GET_CUSTOMER_TASKS_SUCCESS,\n  GET_CUSTOMER_TASKS_FAILURE,\n  getCustomerTasks,\n} from \"./getCustomerTasks\";\n\nexport {\n  ADD_EMPLOYEE_START,\n  ADD_EMPLOYEE_SUCCESS,\n  ADD_EMPLOYEE_FAILURE,\n  addEmployeeToCustomer,\n} from \"./addEmployeeToCustomer\";\n\nexport {\n  GET_CUSTOMER_NOTES_START,\n  GET_CUSTOMER_NOTES_SUCCESS,\n  GET_CUSTOMER_NOTES_FAILURE,\n  getCustomerNotes,\n} from \"./getCustomerNotes\";\n\n// NOTE ACTIONS\n\nexport {\n  ADD_NOTE_START,\n  ADD_NOTE_SUCCESS,\n  ADD_NOTE_FAILURE,\n  addNote,\n} from \"./addNote\";\n\n// EMPLOYEE ACTIONS\n\nexport {\n  CURRENT_EMPLOYEES,\n  ALL_EMPLOYEES,\n  toggleCurrentEmployees,\n  toggleAllEmployees,\n} from \"./employeesToggle\";\n\nexport {\n  REGISTER_EMPLOYEE_START,\n  REGISTER_EMPLOYEE_SUCCESS,\n  REGISTER_EMPLOYEE_FAILURE,\n  registerEmployee,\n} from \"./registerEmployee\";\n\nexport {\n  GET_EMPLOYEES_START,\n  GET_EMPLOYEES_SUCCESS,\n  GET_EMPLOYEES_FAILURE,\n  getEmployees,\n} from \"./getEmployees\";\n\nexport {\n  EDIT_EMPLOYEE_START,\n  EDIT_EMPLOYEE_SUCCESS,\n  EDIT_EMPLOYEE_FAILURE,\n  editEmployee,\n} from \"./editEmployee\";\n\nexport {\n  CHANGE_EMPLOYEE_STATUS_START,\n  CHANGE_EMPLOYEE_STATUS_SUCCESS,\n  CHANGE_EMPLOYEE_STATUS_FAILURE,\n  changeEmployeeStatus,\n} from \"./changeEmployeeStatus\";\n\n// const dbUrl =\n//   \"http://localhost:5000/rocky-mountain-lifts-crm-db/us-central1/api\"; // Development URL\nconst dbUrl = 'https://us-central1-rocky-mountain-lifts-crm-db.cloudfunctions.net/api'; // Production URL\n\nexport { dbUrl };\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Alert,\n  Button,\n  Card,\n  CardBody,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Navbar,\n  NavbarBrand,\n} from \"reactstrap\";\n\nimport Footer from \"../dashboard-components/Footer\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { getCurrentUser } from \"../../actions\";\n\nimport logo from \"../../assets/logo.png\";\nimport \"../../styles/login.scss\";\n\nconst Login = () => {\n  const [creds, setCreds] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { login, currentUser } = useAuth();\n  const fetchCurrentUser = useSelector(\n    (state) => state.getCurrentUserReducer.currentUser\n  );\n  const [flag, setFlag] = useState(false);\n  const [flagTwo, setFlagTwo] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (flag) {\n      dispatch(getCurrentUser(currentUser.uid));\n    }\n  }, [flag]);\n\n  useEffect(() => {\n    if (fetchCurrentUser) {\n      setFlagTwo(true);\n    }\n  }, [fetchCurrentUser]);\n\n  useEffect(() => {\n    if (flagTwo) {\n      setLoading(false);\n      history.push(\"/dashboard\");\n    }\n  }, [flagTwo]);\n\n  const handleChange = (e) => {\n    setCreds({\n      ...creds,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(creds.email, creds.password);\n      setFlag(true);\n    } catch {\n      setError(\"Failed to sign in\");\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"header\">\n        <Navbar>\n          <NavbarBrand href=\"/\">\n            <div className=\"logo-box\">\n              <img src={logo} alt=\"rocky mountain lifts\" />\n            </div>\n          </NavbarBrand>\n        </Navbar>\n      </div>\n      <div className=\"login-box\">\n        <Card>\n          <CardBody>\n            <h2>Log In</h2>\n            {error && <Alert color=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <FormGroup>\n                <Label for=\"email\">Email</Label>\n                <Input type=\"email\" name=\"email\" onChange={handleChange} />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                />\n              </FormGroup>\n              <Button color=\"success\" type=\"submit\" disabled={loading}>\n                Log In\n              </Button>\n            </Form>\n            <div>\n              <Link to=\"/forgot-password\" className=\"link\">\n                Forgot Password?\n              </Link>\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Alert,\n  Button,\n  Card,\n  CardBody,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Navbar,\n  NavbarBrand,\n} from \"reactstrap\";\n\nimport Footer from \"../dashboard-components/Footer\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { getCurrentUser } from \"../../actions\";\n\nimport logo from \"../../assets/logo.png\";\nimport \"../../styles/login.scss\";\n\nconst ForgotPassword = () => {\n  const [creds, setCreds] = useState({\n    email: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const { forgotPassword } = useAuth();\n\n  const handleChange = (e) => {\n    setCreds({\n      ...creds,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      await forgotPassword(creds.email);\n      setMessage(\"Please check you email for further instructions\");\n    } catch {\n      setError(\"Failed to send email\");\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"header\">\n        <Navbar>\n          <NavbarBrand href=\"/\">\n            <div className=\"logo-box\">\n              <img src={logo} alt=\"rocky mountain lifts\" />\n            </div>\n          </NavbarBrand>\n        </Navbar>\n      </div>\n      <div className=\"login-box\">\n        <Card>\n          <CardBody>\n            <h3>Forgot Password</h3>\n            {message && <Alert color=\"success\">{message}</Alert>}\n            {error && <Alert color=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <FormGroup>\n                <Label for=\"email\">Email</Label>\n                <Input type=\"email\" name=\"email\" onChange={handleChange} />\n              </FormGroup>\n              <Button color=\"success\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n            <div>\n              <Link to=\"/login\" className=\"link\">\n                Log In\n              </Link>\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default ForgotPassword;","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\nimport { NavLink as RRNavLink, useHistory } from \"react-router-dom\";\n\nimport Logo from \"../../assets/logo.png\";\nimport \"../../styles/header.scss\";\n\nconst Header = () => {\n  const user = useSelector((state) => state.getCurrentUserReducer.currentUser);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenNotifications, setIsOpenNotifications] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { logout } = useAuth();\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        await user;\n      } catch {\n        setError(\"Could not get current user\");\n      }\n    };\n\n    fetchUser();\n  }, []);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const toggleNotifications = () => {\n    setIsOpenNotifications(!isOpenNotifications);\n  };\n\n  const handleLogout = async () => {\n    setError(\"\");\n\n    try {\n      await logout();\n      localStorage.clear();\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  };\n\n  return (\n    <div className=\"header\">\n      <Navbar expand=\"md\">\n        <NavbarBrand href=\"/\">\n          <img className=\"logo\" src={Logo} alt=\"rocky mountain lifts\" />\n        </NavbarBrand>\n        <Nav className=\"ml-auto\" navbar>\n          {user.userType === \"employee\" ? (\n            <NavItem>\n              <NavLink\n                tag={RRNavLink}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                to=\"/dashboard\"\n                exact\n              >\n                Tasks\n              </NavLink>\n            </NavItem>\n          ) : null}\n          {user.userType === \"employee\" ? (\n            <NavItem>\n              <NavLink\n                tag={RRNavLink}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                to=\"/dashboard/workorders\"\n              >\n                Work Orders\n              </NavLink>\n            </NavItem>\n          ) : null}\n          {user.userType === \"employee\" ? (\n            <NavItem>\n              <NavLink\n                tag={RRNavLink}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                to=\"/dashboard/jobs\"\n              >\n                Jobs\n              </NavLink>\n            </NavItem>\n          ) : null}\n          {user.userType === \"employee\" ? (\n            <NavItem>\n              <NavLink\n                tag={RRNavLink}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                to=\"/dashboard/customers\"\n              >\n                Customers\n              </NavLink>\n            </NavItem>\n          ) : null}\n          {user.userType === \"employee\" ? (\n            <NavItem>\n              <NavLink\n                tag={RRNavLink}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                to=\"/dashboard/files\"\n              >\n                Files\n              </NavLink>\n            </NavItem>\n          ) : null}\n          {user.userType === \"employee\" && user.tierLevel === 3 ? (\n            <NavItem>\n              <NavLink\n                tag={RRNavLink}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                to=\"/dashboard/employees\"\n              >\n                Employees\n              </NavLink>\n            </NavItem>\n          ) : null}\n          {user.userType === \"customer\" ? (\n            <NavItem>\n              <NavLink\n                tag={RRNavLink}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                to=\"/dashboard/test\"\n              >\n                Test\n              </NavLink>\n            </NavItem>\n          ) : null}\n          <NavItem>\n            <div className=\"divider\" />\n          </NavItem>\n          <NavItem>\n            <Dropdown isOpen={isOpenNotifications} toggle={toggleNotifications}>\n              <DropdownToggle tag=\"span\" className=\"nav-link\">\n                <i className=\"fas fa-bell\" />\n              </DropdownToggle>\n              <DropdownMenu direction=\"center\">\n                <DropdownItem>Notification</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          </NavItem>\n          <NavItem>\n            <Dropdown isOpen={isOpen} toggle={toggle}>\n              <DropdownToggle tag=\"span\" className=\"nav-link\">\n                {user.userType === \"employee\" ? (\n                  <span>\n                    {user.firstName} {user.lastName}\n                  </span>\n                ) : (\n                  <span>\n                    {user.primaryContact ? user.primaryContact.firstName : null}{\" \"}\n                    {user.primaryContact ? user.primaryContact.lastName : null}\n                  </span>\n                )}\n              </DropdownToggle>\n              <DropdownMenu direction=\"right\">\n                <DropdownItem>My Profile</DropdownItem>\n                <DropdownItem onClick={handleLogout}>Logout</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Input } from \"reactstrap\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst Search = () => {\n  const [search, setSearch] = useState(\"\");\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  return (\n    <div className=\"search-div\">\n      <Input value={search} onChange={handleChange} placeholder=\"Search\" />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleCalendarView, toggleListView } from \"../../actions/taskToggle\";\nimport { Button, ButtonGroup } from \"reactstrap\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst TaskToggle = () => {\n  const calendarView = useSelector(state => state.taskToggleReducer.calendarView);\n  const dispatch = useDispatch();\n\n  const toggleList = () => {\n    dispatch(toggleListView())\n  };\n\n  const toggleCalendar = () => {\n    dispatch(toggleCalendarView());\n  };\n\n  return (\n    <div className=\"task-btns\">\n      <ButtonGroup>\n        <Button onClick={toggleList} active={calendarView === false}>\n          List\n        </Button>\n        <Button\n          onClick={toggleCalendar}\n          active={calendarView === true}\n        >\n          Calendar\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default TaskToggle;\n","export const CALENDAR_VIEW = \"CALENDAR_VIEW\";\nexport const LIST_VIEW = \"LIST_VIEW\";\n\nexport const toggleCalendarView = () => async (dispatch) => {\n  dispatch({ type: CALENDAR_VIEW });\n};\n\nexport const toggleListView = () => async (dispatch) => {\n  dispatch({ type: LIST_VIEW });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { addTask } from \"../../actions/addTask\";\nimport { getUsers } from \"../../actions/getUsers\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst AddTaskBtn = () => {\n  const [task, setTask] = useState({\n    taskDescription: \"\",\n    taskDate: \"\",\n    taskTime: \"\",\n    employeeId: \"\",\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  const employeeArray = [];\n  const [employees, setEmployees] = useState([]);\n  const getEmployees = useSelector((state) => state.getUsersReducer.users);\n  const [errors, setErrors] = useState({});\n  const getErrors = useSelector((state) => state.addTaskReducer.errors);\n  const success = useSelector((state) => state.addTaskReducer.success);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n\n  useEffect(() => {\n    if (getEmployees.users) {\n      getEmployees.users.map((user) => {\n        if (user.userType === \"employee\" && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: \"employeeId\",\n            jobTitle: user.jobTitle,\n          });\n        }\n      });\n\n      setEmployees(employeeArray);\n    }\n  }, [getEmployees]);\n\n  useEffect(() => {\n    if (getErrors) {\n      setErrors(getErrors);\n    }\n  }, [getErrors]);\n\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n  }, [success]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setTask({\n        taskDescription: \"\",\n        taskDate: \"\",\n        taskTime: \"\",\n        employeeId: \"\",\n      });\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = (e) => {\n    setTask({\n      ...task,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setTask({\n      ...task,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTask(task));\n  };\n\n  return (\n    <div className=\"add-task-div\">\n      <Button color=\"success\" onClick={toggle}>\n        Add Task\n      </Button>\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label>Task</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <div>\n              <FormGroup>\n                <Label>Date</Label>\n                <Input\n                  type=\"date\"\n                  placeholder=\"date placeholder\"\n                  name=\"taskDate\"\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>Time</Label>\n                <Input\n                  type=\"time\"\n                  placeholder=\"time placeholder\"\n                  name=\"taskTime\"\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label>Assigned To</Label>\n              <Select\n                options={employees}\n                onChange={handleSelectChange}\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddTaskBtn;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"react-select\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport { addEvent } from \"../../actions/addEvent\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst AddEventBtn = () => {\n  const [event, setEvent] = useState({\n    title: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    allDay: false,\n    recurring: false,\n    daysOfWeek: [],\n    extendedProps: {\n      location: \"\",\n      invitees: [],\n      description: \"\",\n    },\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  const [employees, setEmployees] = useState();\n  const fetchUsers = useSelector((state) => state.getUsersReducer.users);\n  const success = useSelector((state) => state.addEventReducer.success);\n  const [errors, setErrors] = useState({});\n  const fetchErrors = useSelector((state) => state.addEventReducer.errors);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const array = [\n      {\n        label: \"Everyone\",\n        value: \"Everyone\",\n      },\n    ];\n\n    if (fetchUsers.users) {\n      fetchUsers.users.forEach((user) => {\n        if (user.userType === \"employee\" && user.active === true) {\n          array.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n          });\n        }\n      });\n    }\n\n    setEmployees(array);\n  }, [fetchUsers]);\n\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n  }, [success]);\n\n  useEffect(() => {\n    if (fetchErrors) {\n      setErrors(fetchErrors);\n    }\n  }, [fetchErrors]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setErrors({});\n      setEvent({\n        title: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        allDay: false,\n        recurring: false,\n        daysOfWeek: [],\n        extendedProps: {\n          location: \"\",\n          invitees: [],\n          description: \"\",\n        },\n      });\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = (e) => {\n    setEvent({\n      ...event,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleExtendedChange = (e) => {\n    setEvent({\n      ...event,\n      extendedProps: {\n        ...event.extendedProps,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const handleRecurringChange = (e) => {\n    setEvent({\n      ...event,\n      recurring: !event.recurring,\n    });\n  };\n\n  const handleDaysChange = (e) => {\n    let array = event.daysOfWeek;\n    let temp = [];\n\n    const day = parseInt(e.target.value);\n\n    if (array.includes(day)) {\n      temp = array.filter((i) => i !== day);\n      array = temp;\n    } else {\n      array.push(day);\n    }\n\n    array.sort();\n    setEvent({\n      ...event,\n      daysOfWeek: array,\n    });\n    console.log(array);\n  };\n\n  const handleSelectChange = (e) => {\n    const invitees = [];\n\n    e.forEach((e) => {\n      invitees.push(e.value);\n    });\n\n    setEvent({\n      ...event,\n      extendedProps: {\n        ...event.extendedProps,\n        invitees: invitees,\n      },\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addEvent(event));\n  };\n\n  return (\n    <div className=\"add-event-div\">\n      <Button color=\"danger\" onClick={toggle}>\n        Add Event\n      </Button>\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Event</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label>Title</Label>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                onChange={handleChange}\n                invalid={errors.title ? true : false}\n              />\n              <FormFeedback>{errors.title}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Location</Label>\n              <Input\n                type=\"text\"\n                name=\"location\"\n                onChange={handleExtendedChange}\n                invalid={errors.location ? true : false}\n              />\n              <FormFeedback>{errors.location}</FormFeedback>\n            </FormGroup>\n            <div className=\"start-end-date-div\">\n              <FormGroup>\n                <Label>Start Date</Label>\n                <Input\n                  type=\"date\"\n                  placeholder=\"date placeholder\"\n                  name=\"startDate\"\n                  onChange={handleChange}\n                  invalid={errors.startDate ? true : false}\n                />\n                <FormFeedback>{errors.startDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>End Date</Label>\n                <Input\n                  type=\"date\"\n                  placeholder=\"date placeholder\"\n                  name=\"endDate\"\n                  onChange={handleChange}\n                  invalid={errors.endDate ? true : false}\n                />\n                <FormFeedback>{errors.endDate}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"start-end-time-div\">\n              <FormGroup>\n                <Label>Start Time</Label>\n                <Input\n                  type=\"time\"\n                  placeholder=\"time placeholder\"\n                  name=\"startTime\"\n                  onChange={handleChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>End Time</Label>\n                <Input\n                  type=\"time\"\n                  placeholder=\"time placeholder\"\n                  name=\"endTime\"\n                  onChange={handleChange}\n                  invalid={errors.endTime ? true : false}\n                />\n                <FormFeedback>{errors.endTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"description\"\n                onChange={handleExtendedChange}\n              />\n            </FormGroup>\n            <div className=\"recurring-div\">\n              <FormGroup inline check>\n                <Label inline check>\n                  Is this a recurring event?{\" \"}\n                  <Input\n                    type=\"checkbox\"\n                    name=\"recurring\"\n                    onChange={handleRecurringChange}\n                  />\n                </Label>\n              </FormGroup>\n              {event.recurring ? (\n                <div>\n                  <Label>Which days should this event recur?</Label>\n                  <FormGroup check>\n                    <Label check>\n                      <Input\n                        type=\"checkbox\"\n                        name=\"daysOfWeek\"\n                        value=\"0\"\n                        onChange={handleDaysChange}\n                      />{\" \"}\n                      Sunday\n                    </Label>\n                    <br />\n                    <Label check>\n                      <Input\n                        type=\"checkbox\"\n                        name=\"daysOfWeek\"\n                        value=\"1\"\n                        onChange={handleDaysChange}\n                      />{\" \"}\n                      Monday\n                    </Label>\n                    <br />\n                    <Label check>\n                      <Input\n                        type=\"checkbox\"\n                        name=\"daysOfWeek\"\n                        value=\"2\"\n                        onChange={handleDaysChange}\n                      />{\" \"}\n                      Tuesday\n                    </Label>\n                    <br />\n                    <Label check>\n                      <Input\n                        type=\"checkbox\"\n                        name=\"daysOfWeek\"\n                        value=\"3\"\n                        onChange={handleDaysChange}\n                      />{\" \"}\n                      Wednesday\n                    </Label>\n                    <br />\n                    <Label check>\n                      <Input\n                        type=\"checkbox\"\n                        name=\"daysOfWeek\"\n                        value=\"4\"\n                        onChange={handleDaysChange}\n                      />{\" \"}\n                      Thursday\n                    </Label>\n                    <br />\n                    <Label check>\n                      <Input\n                        type=\"checkbox\"\n                        name=\"daysOfWeek\"\n                        value=\"5\"\n                        onChange={handleDaysChange}\n                      />{\" \"}\n                      Friday\n                    </Label>\n                    <br />\n                    <Label check>\n                      <Input\n                        type=\"checkbox\"\n                        name=\"daysOfWeek\"\n                        value=\"6\"\n                        onChange={handleDaysChange}\n                      />{\" \"}\n                      Saturday\n                    </Label>\n                  </FormGroup>\n                </div>\n              ) : null}\n            </div>\n            <FormGroup>\n              <Label>Invitees</Label>\n              <Select\n                isMulti\n                name=\"invitees\"\n                options={employees}\n                onChange={handleSelectChange}\n                className={errors.invitees ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.invitees ? true : false}\n              />\n              <FormFeedback>{errors.invitees}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>Submit</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddEventBtn;\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const ADD_EVENT_START = \"ADD_EVENT_START\";\nexport const ADD_EVENT_SUCCESS = \"ADD_EVENT_SUCCESS\";\nexport const ADD_EVENT_FAILURE = \"ADD_EVENT_FAILURE\";\n\nexport const addEvent = (event) => async (dispatch) => {\n  dispatch({ type: ADD_EVENT_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .post(`${dbUrl}/events`, event)\n    .then(() => {\n      dispatch({\n        type: ADD_EVENT_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ADD_EVENT_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { openWorkOrders, closeWorkOrders } from \"../../actions/workOrderToggle\";\nimport { Button, ButtonGroup } from \"reactstrap\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst WorkOrderToggle = () => {\n  const open = useSelector((state) => state.workOrderToggleReducer.open);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"task-btns\">\n      <ButtonGroup>\n        <Button\n          onClick={() => dispatch(openWorkOrders())}\n          active={open === true}\n        >\n          Open\n        </Button>\n        <Button\n          onClick={() => dispatch(closeWorkOrders())}\n          active={open === false}\n        >\n          Closed\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default WorkOrderToggle;\n","export const OPEN_WORK_ORDERS = \"OPEN_WORK_ORDERS\";\nexport const CLOSE_WORK_ORDERS = \"CLOSE_WORK_ORDERS\";\n\nexport const openWorkOrders = () => async (dispatch) => {\n  dispatch({ type: OPEN_WORK_ORDERS });\n};\n\nexport const closeWorkOrders = () => async (dispatch) => {\n  dispatch({ type: CLOSE_WORK_ORDERS });\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { addWorkOrder } from \"../../actions/addWorkOrder\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst AddWorkOrderBtn = () => {\n  const [workOrder, setWorkOrder] = useState({\n    customer: \"\",\n    serviceDate: \"\",\n    serviceStartTime: \"\",\n    serviceEndTime: \"\",\n    serviceDescription: \"\",\n    serviceType: [],\n    dispatcher: \"\",\n    serviceManager: \"\",\n    officeManager: \"\",\n    crewMembers: [],\n    jobNumber: \"\",\n    notes: \"\",\n    officeNotes: \"\",\n    quote: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector((state) => state.addWorkOrderReducer.errors);\n  const getSuccess = useSelector((state) => state.addWorkOrderReducer.success);\n  const [employees, setEmployees] = useState([]);\n  const [serviceManagers, setServiceManagers] = useState([]);\n  const [officeManagers, setOfficeManagers] = useState([]);\n  const employeesArray = [];\n  const serviceManagersArray = [];\n  const officeManagersArray = [];\n  const [customers, setCustomers] = useState([]);\n  const customersArray = [];\n  const getUsers = useSelector((state) => state.getUsersReducer.users);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenCheck, setIsOpenCheck] = useState(false);\n  const [warnings, setWarnings] = useState({});\n  const dispatch = useDispatch();\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    setErrors(getErrors);\n  }, [getErrors]);\n\n  useEffect(() => {\n    if (getSuccess === true) {\n      setSuccess(true);\n    }\n  }, [getSuccess]);\n\n  useEffect(() => {\n    if (success === true) {\n      setIsOpen(false);\n      setErrors({});\n      setSuccess(false);\n      setWorkOrder({\n        ...workOrder,\n        customer: \"\",\n        serviceDate: \"\",\n        serviceStartTime: \"\",\n        serviceEndTime: \"\",\n        serviceDescription: \"\",\n        serviceType: [],\n        dispatch: \"\",\n        crewMembers: [],\n        jobNumber: \"\",\n        notes: \"\",\n        officeNotes: \"\",\n        quote: \"\",\n      });\n    }\n  }, [success, workOrder]);\n\n  useEffect(() => {\n    if (getUsers.users) {\n      getUsers.users.forEach((user) => {\n        if (user.userType === \"employee\" && user.active) {\n          employeesArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: \"crewMembers\",\n            jobTitle: user.jobTitle,\n          });\n        } else {\n          customersArray.push({\n            label: user.businessName,\n            value: user.userId,\n            name: \"customer\",\n          });\n        }\n      });\n    }\n\n    employeesArray.push({\n      label: \"General Contractor\",\n      value: \"General Contractor\",\n    });\n\n    setEmployees(employeesArray);\n    setCustomers(customersArray);\n\n    let serviceManagerId = \"\";\n    let officeManagerId = \"\";\n\n    employeesArray.forEach((employee) => {\n      if (employee.jobTitle === \"Service Manager\") {\n        employee.name = \"serviceManager\";\n        serviceManagersArray.push(employee);\n        if (employee.value === \"uXwUIQNHljckMtq4AR57zMBExhd2\") {\n          serviceManagerId = employee.value;\n        }\n      } else if (employee.jobTitle === \"Office Manager\") {\n        employee.name = \"officeManager\";\n        officeManagersArray.push(employee);\n        if (employee.value === \"P8NOWpsqBTV8OrO5ICZSYAdPrx22\") {\n          officeManagerId = employee.value;\n        }\n      }\n    });\n\n    setServiceManagers(serviceManagersArray);\n    setOfficeManagers(officeManagersArray);\n\n    setWorkOrder({\n      ...workOrder,\n      serviceManager: serviceManagerId,\n      officeManager: officeManagerId,\n    });\n  }, [getUsers]);\n\n  const toggle = (e) => {\n    setIsOpen(!isOpen);\n    setErrors({});\n    setWarnings({});\n\n    if (!isOpen) {\n      setWorkOrder({\n        ...workOrder,\n        customer: \"\",\n        serviceDate: \"\",\n        serviceStartTime: \"\",\n        serviceEndTime: \"\",\n        serviceDescription: \"\",\n        serviceType: [],\n        dispatcher: \"\",\n        crewMembers: [],\n        jobNumber: \"\",\n        notes: \"\",\n        officeNotes: \"\",\n        quote: \"\",\n      });\n    }\n  };\n\n  const toggleCheck = (e) => {\n    if (isOpenCheck) {\n      setWarnings({});\n    }\n    setIsOpenCheck(!isOpenCheck);\n  };\n\n  const handleChange = (e) => {\n    setWorkOrder({\n      ...workOrder,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setWorkOrder({\n      ...workOrder,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleServiceTypeChange = (e) => {\n    const services = [];\n\n    e.forEach((e) => {\n      services.push(e.value);\n    });\n\n    setWorkOrder({\n      ...workOrder,\n      serviceType: services,\n    });\n  };\n\n  const handleCrewMembersChange = (e) => {\n    const members = [];\n\n    e.forEach((e) => {\n      members.push(e.value);\n    });\n\n    setWorkOrder({\n      ...workOrder,\n      crewMembers: members,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const valid = warningCheck();\n\n    if (valid) {\n      dispatch(addWorkOrder(workOrder));\n    } else {\n      toggleCheck();\n    }\n  };\n\n  const warningCheck = (e) => {\n    let warningsObject = {};\n\n    if (workOrder.serviceEndTime.trim() === \"\") {\n      warningsObject.serviceEndTime = \"End Time\";\n    }\n    if (workOrder.jobNumber.trim() === \"\") {\n      warningsObject.jobNumber = \"Job Number\";\n    }\n    if (workOrder.notes.trim() === \"\") {\n      warningsObject.notes = \"Notes\";\n    }\n    if (workOrder.officeNotes.trim() === \"\") {\n      warningsObject.officeNotes = \"Office Notes\";\n    }\n    if (workOrder.quote.trim() === \"\") {\n      warningsObject.quote = \"Quote\";\n    }\n\n    if (Object.keys(warningsObject).length === 0) {\n      return true;\n    } else {\n      setWarnings(warningsObject);\n      return false;\n    }\n  };\n\n  const handleSubmitCheck = (e) => {\n    e.preventDefault();\n    setWarnings({});\n    dispatch(addWorkOrder(workOrder));\n    toggleCheck();\n  };\n\n  return (\n    <div className=\"add-work-order-div\">\n      <Button color=\"success\" onClick={toggle}>\n        Create Work Order\n      </Button>\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Create Work Order</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"customer\">Customer</Label>\n              <Select\n                options={customers}\n                name=\"customer\"\n                onChange={handleSelectChange}\n                className={errors.customer ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.customer ? true : false}\n              />\n              <FormFeedback>{errors.customer}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"date\">Date</Label>\n              <Input\n                type=\"date\"\n                name=\"serviceDate\"\n                id=\"serviceDate\"\n                placeholder=\"date placeholder\"\n                onChange={handleChange}\n                invalid={errors.serviceDate ? true : false}\n              />\n              <FormFeedback>{errors.serviceDate}</FormFeedback>\n            </FormGroup>\n            <div className=\"time-div\">\n              <FormGroup>\n                <Label for=\"startTime\">Start Time</Label>\n                <Input\n                  type=\"time\"\n                  name=\"serviceStartTime\"\n                  id=\"serviceStartTime\"\n                  placeholder=\"time placeholder\"\n                  onChange={handleChange}\n                  invalid={errors.serviceStartTime ? true : false}\n                />\n                <FormFeedback>{errors.serviceStartTime}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"endTime\">End Time</Label>\n                <Input\n                  type=\"time\"\n                  name=\"serviceEndTime\"\n                  id=\"serviceEndTime\"\n                  placeholder=\"time placeholder\"\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"serviceDescription\">Service Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"serviceDescription\"\n                id=\"serviceDescription\"\n                onChange={handleChange}\n                invalid={errors.serviceDescription ? true : false}\n              />\n              <FormFeedback>{errors.serviceDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"serviceType\">Service Type</Label>\n              <Select\n                isMulti\n                options={serviceTypes.map((type) => ({\n                  label: type,\n                  value: type,\n                  name: \"serviceType\",\n                }))}\n                name=\"serviceType\"\n                onChange={handleServiceTypeChange}\n                className={errors.serviceType ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.serviceType ? true : false}\n              />\n              <FormFeedback>{errors.serviceType}</FormFeedback>\n            </FormGroup>\n            <div className=\"manager-div\">\n              <FormGroup>\n                <Label for=\"serviceManager\">Service Manager</Label>\n                <Select\n                  options={serviceManagers}\n                  defaultValue={serviceManagers[0]}\n                  name=\"serviceManager\"\n                  onChange={handleSelectChange}\n                  className={errors.serviceManager ? \"invalid\" : \"\"}\n                />\n                <Input\n                  type=\"hidden\"\n                  disabled\n                  invalid={errors.serviceManager ? true : false}\n                />\n                <FormFeedback>{errors.serviceManager}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"officeManager\">Billing Manager</Label>\n                <Select\n                  options={officeManagers}\n                  defaultValue={officeManagers[0]}\n                  name=\"officeManager\"\n                  onChange={handleSelectChange}\n                  className={errors.officeManager ? \"invalid\" : \"\"}\n                />\n                <Input\n                  type=\"hidden\"\n                  disabled\n                  invalid={errors.officeManager ? true : false}\n                />\n                <FormFeedback>{errors.officeManager}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"crewMembers\">Crew Members</Label>\n              <Select\n                isMulti\n                options={employees}\n                name=\"crewMembers\"\n                onChange={handleCrewMembersChange}\n                className={errors.crewMembers ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.crewMembers ? true : false}\n              />\n              <FormFeedback>{errors.crewMembers}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"prevJobNumber\">Job Number</Label>\n              <Input\n                type=\"text\"\n                name=\"jobNumber\"\n                id=\"jobNumber\"\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"notes\">Notes</Label>\n              <Input\n                type=\"textarea\"\n                name=\"notes\"\n                id=\"notes\"\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"officeNotes\">Office Notes</Label>\n              <Input\n                type=\"textarea\"\n                name=\"officeNotes\"\n                id=\"officeNotes\"\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"quote\">Quote</Label>\n              <Input\n                type=\"file\"\n                name=\"file\"\n                id=\"file\"\n                onChange={handleChange}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" type=\"submit\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenCheck} toggle={toggleCheck}>\n        <ModalHeader toggle={toggleCheck}>Warning</ModalHeader>\n        <ModalBody>\n          <span>The following fields were left blank:</span>\n          <ul>\n            {warnings\n              ? Object.values(warnings).map((warning) => <li>{warning}</li>)\n              : null}\n          </ul>\n          <span>Are you sure you want to continue?</span>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" type=\"submit\" onClick={handleSubmitCheck}>\n            YES\n          </Button>\n          <Button color=\"danger\" onClick={toggleCheck}>\n            NO\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddWorkOrderBtn;\n\nconst serviceTypes = [\n  \"Install\",\n  \"Service\",\n  \"Training\",\n  \"Inspection\",\n  \"Warranty\",\n];\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { openJobs, closeJobs } from \"../../actions/jobToggle\";\nimport { Button, ButtonGroup } from \"reactstrap\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst JobToggle = () => {\n  const open = useSelector((state) => state.jobToggleReducer.open);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"task-btns\">\n      <ButtonGroup>\n        <Button onClick={() => dispatch(openJobs())} active={open === true}>\n          Open\n        </Button>\n        <Button onClick={() => dispatch(closeJobs())} active={open === false}>\n          Closed\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default JobToggle;\n","export const OPEN_JOBS = \"OPEN_JOBS\";\nexport const CLOSE_JOBS = \"CLOSE_JOBS\";\n\nexport const openJobs = () => async (dispatch) => {\n  dispatch({ type: OPEN_JOBS });\n};\n\nexport const closeJobs = () => async (dispatch) => {\n  dispatch({ type: CLOSE_JOBS });\n};","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { registerCustomer } from \"../../actions/registerCustomer\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst AddCustomerBtn = () => {\n  const [customer, setCustomer] = useState({\n    businessName: \"\",\n    industry: \"\",\n    primaryContact: {\n      firstName: \"\",\n      lastName: \"\",\n    },\n    billingContact: {\n      firstName: \"\",\n      lastName: \"\",\n    },\n    primaryOfficeNumber: \"\",\n    primaryExt: \"\",\n    primaryCellNumber: \"\",\n    primaryEmail: \"\",\n    primaryJobTitle: \"\",\n    billingOfficeNumber: \"\",\n    billingExt: \"\",\n    billingCellNumber: \"\",\n    billingEmail: \"\",\n    billingJobTitle: \"\",\n    shopAddress: {\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\",\n    },\n    billingAddress: {\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\",\n    },\n    noBillingContact: false,\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector(\n    (state) => state.registerCustomerReducer.errors\n  );\n  const getSuccess = useSelector(\n    (state) => state.registerCustomerReducer.success\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    setErrors(getErrors);\n  }, [getErrors]);\n\n  useEffect(() => {\n    if (getSuccess === true) {\n      setSuccess(true);\n    }\n  }, [getSuccess]);\n\n  useEffect(() => {\n    if (success === true) {\n      setIsOpen(false);\n      setErrors({});\n      setSuccess(false);\n      setCustomer({\n        businessName: \"\",\n        industry: \"\",\n        primaryContact: {\n          firstName: \"\",\n          lastName: \"\",\n        },\n        billingContact: {\n          firstName: \"\",\n          lastName: \"\",\n        },\n        primaryOfficeNumber: \"\",\n        primaryExt: \"\",\n        primaryCellNumber: \"\",\n        primaryEmail: \"\",\n        primaryJobTitle: \"\",\n        billingOfficeNumber: \"\",\n        billingExt: \"\",\n        billingCellNumber: \"\",\n        billingEmail: \"\",\n        billingJobTitle: \"\",\n        shopAddress: {\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\",\n        },\n        billingAddress: {\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\",\n        },\n        noBillingContact: false,\n      });\n    }\n  }, [success]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setCustomer({\n        businessName: \"\",\n        industry: \"\",\n        primaryContact: {\n          firstName: \"\",\n          lastName: \"\",\n        },\n        billingContact: {\n          firstName: \"\",\n          lastName: \"\",\n        },\n        primaryOfficeNumber: \"\",\n        primaryExt: \"\",\n        primaryCellNumber: \"\",\n        primaryEmail: \"\",\n        primaryJobTitle: \"\",\n        billingOfficeNumber: \"\",\n        billingExt: \"\",\n        billingCellNumber: \"\",\n        billingEmail: \"\",\n        billingJobTitle: \"\",\n        shopAddress: {\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\",\n        },\n        billingAddress: {\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\",\n        },\n        noBillingContact: false,\n      });\n    }\n    setIsOpen(!isOpen);\n    setErrors({});\n  };\n\n  const handleChange = (e) => {\n    setCustomer({\n      ...customer,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setCustomer({\n      ...customer,\n      [e.name]: e.value,\n    });\n  };\n\n  const handlePrimaryContactChange = (e) => {\n    setCustomer({\n      ...customer,\n      primaryContact: {\n        ...customer.primaryContact,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const handleBillingContactChange = (e) => {\n    setCustomer({\n      ...customer,\n      billingContact: {\n        ...customer.billingContact,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const handleShopAddressChange = (e) => {\n    setCustomer({\n      ...customer,\n      shopAddress: {\n        ...customer.shopAddress,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const handleBillingAddressChange = (e) => {\n    setCustomer({\n      ...customer,\n      billingAddress: {\n        ...customer.billingAddress,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const toggleBillingContact = (e) => {\n    setCustomer({\n      ...customer,\n      noBillingContact: !customer.noBillingContact,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(registerCustomer(customer));\n  };\n\n  return (\n    <div className=\"add-customer-div\">\n      <Button color=\"success\" onClick={toggle}>\n        Add Customer\n      </Button>\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Customer</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit} className=\"add-customer-form\">\n            <FormGroup>\n              <Label for=\"businessName\">Business Name</Label>\n              <Input\n                type=\"text\"\n                name=\"businessName\"\n                onChange={handleChange}\n                invalid={errors.businessName ? true : false}\n              />\n              <FormFeedback>{errors.businessName}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"industry\">Industry</Label>\n              <Select\n                options={options}\n                name=\"industry\"\n                onChange={handleSelectChange}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.industry ? true : false}\n              />\n              <FormFeedback>{errors.industry}</FormFeedback>\n            </FormGroup>\n            <Label for=\"primary-contact\" className=\"form-label\">\n              Primary Contact\n            </Label>\n            <div className=\"primary-contact-name\">\n              <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={handlePrimaryContactChange}\n                  invalid={\n                    errors.primaryContact\n                      ? errors.primaryContact.firstName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.primaryContact\n                    ? errors.primaryContact.firstName\n                      ? errors.primaryContact.firstName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  onChange={handlePrimaryContactChange}\n                  invalid={\n                    errors.primaryContact\n                      ? errors.primaryContact.lastName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.primaryContact\n                    ? errors.primaryContact.lastName\n                      ? errors.primaryContact.lastName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"primary-phone-div\">\n              <div className=\"primary-office-phone-div\">\n                <FormGroup className=\"primary-number\">\n                  <Label for=\"primaryOfficeNumber\">Office Phone Number</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"primaryOfficeNumber\"\n                    placeholder=\"XXX-XXX-XXXX\"\n                    onChange={handleChange}\n                    invalid={errors.primaryOfficeNumber ? true : false}\n                  />\n                  <FormFeedback>{errors.primaryOfficeNumber}</FormFeedback>\n                </FormGroup>\n                <FormGroup className=\"primary-ext\">\n                  <Label for=\"primaryExt\">ext.</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"primaryExt\"\n                    onChange={handleChange}\n                  />\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"primaryCellNumber\">Cell Phone Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"primaryCellNumber\"\n                  placeholder=\"XXX-XXX-XXXX\"\n                  onChange={handleChange}\n                  invalid={errors.primaryCellNumber ? true : false}\n                />\n                <FormFeedback>{errors.primaryCellNumber}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"primary-email-jobTitle-div\">\n              <FormGroup>\n                <Label for=\"primaryEmail\">Email</Label>\n                <Input\n                  type=\"text\"\n                  name=\"primaryEmail\"\n                  placeholder=\"example@example.com\"\n                  onChange={handleChange}\n                  invalid={errors.primaryEmail ? true : false}\n                />\n                <FormFeedback>{errors.primaryEmail}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"primaryJobTitle\">Job Title</Label>\n                <Input\n                  type=\"text\"\n                  name=\"primaryJobTitle\"\n                  onChange={handleChange}\n                  invalid={errors.primaryJobTitle ? true : false}\n                />\n                <FormFeedback>{errors.primaryJobTitle}</FormFeedback>\n              </FormGroup>\n            </div>\n            <Label for=\"shop-address\" className=\"form-label\">\n              Shop Address\n            </Label>\n            <div className=\"shop-address\">\n              <div className=\"shop-address-city-div\">\n                <FormGroup>\n                  <Label for=\"address\">Address</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"address\"\n                    onChange={handleShopAddressChange}\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.address\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.address\n                        ? errors.shopAddress.address\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    onChange={handleShopAddressChange}\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.city\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.city\n                        ? errors.shopAddress.city\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n              <div className=\"shop-state-zipcode-div\">\n                <FormGroup>\n                  <Label for=\"state\">State</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"state\"\n                    onChange={handleShopAddressChange}\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.state\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.state\n                        ? errors.shopAddress.state\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"zipcode\">Zip Code</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"zipcode\"\n                    onChange={handleShopAddressChange}\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.zipcode\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.zipcode\n                        ? errors.shopAddress.zipcode\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n            </div>\n            <Label for=\"billing-contact\" className=\"form-label\">\n              Billing Contact\n            </Label>\n            <div className=\"billing-contact-name\">\n              <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={handleBillingContactChange}\n                  invalid={\n                    errors.billingContact\n                      ? errors.billingContact.firstName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.billingContact\n                    ? errors.billingContact.firstName\n                      ? errors.billingContact.firstName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  onChange={handleBillingContactChange}\n                  invalid={\n                    errors.billingContact\n                      ? errors.billingContact.lastName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.billingContact\n                    ? errors.billingContact.lastName\n                      ? errors.billingContact.lastName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"billing-phone-div\">\n              <div className=\"billing-office-phone-div\">\n                <FormGroup className=\"billing-number\">\n                  <Label for=\"billingOfficeNumber\">Office Phone Number</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"billingOfficeNumber\"\n                    placeholder=\"XXX-XXX-XXXX\"\n                    onChange={handleChange}\n                    invalid={errors.billingOfficeNumber ? true : false}\n                  />\n                  <FormFeedback>{errors.billingOfficeNumber}</FormFeedback>\n                </FormGroup>\n                <FormGroup className=\"billing-ext\">\n                  <Label for=\"billingExt\">ext.</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"billingExt\"\n                    onChange={handleChange}\n                  />\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"billingCellNumber\">Cell Phone Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"billingCellNumber\"\n                  placeholder=\"XXX-XXX-XXXX\"\n                  onChange={handleChange}\n                  invalid={errors.billingCellNumber ? true : false}\n                />\n                <FormFeedback>{errors.billingCellNumber}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"billing-email-jobTitle-div\">\n              <FormGroup>\n                <Label for=\"billingEmail\">Email</Label>\n                <Input\n                  type=\"text\"\n                  name=\"billingEmail\"\n                  placeholder=\"example@example.com\"\n                  onChange={handleChange}\n                  invalid={errors.billingEmail ? true : false}\n                />\n                <FormFeedback>{errors.billingEmail}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"billingJobTitle\">Job Title</Label>\n                <Input\n                  type=\"text\"\n                  name=\"billingJobTitle\"\n                  onChange={handleChange}\n                  invalid={errors.billingJobTitle ? true : false}\n                />\n                <FormFeedback>{errors.billingJobTitle}</FormFeedback>\n              </FormGroup>\n            </div>\n            <Label for=\"billing-address\" className=\"form-label\">\n              Billing Address\n            </Label>\n            <div className=\"billing-address\">\n              <div className=\"billing-address-city-div\">\n                <FormGroup>\n                  <Label for=\"address\">Address</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"address\"\n                    onChange={handleBillingAddressChange}\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.address\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.address\n                        ? errors.billingAddress.address\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    onChange={handleBillingAddressChange}\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.city\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.city\n                        ? errors.billingAddress.city\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n              <div className=\"billing-state-zipcode-div\">\n                <FormGroup>\n                  <Label for=\"state\">State</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"state\"\n                    onChange={handleBillingAddressChange}\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.state\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.state\n                        ? errors.billingAddress.state\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"zipcode\">Zip Code</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"zipcode\"\n                    onChange={handleBillingAddressChange}\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.zipcode\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.zipcode\n                        ? errors.billingAddress.zipcode\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n            </div>\n            <FormGroup className=\"checkbox-div\">\n              <Label check>\n                <Input type=\"checkbox\" onClick={toggleBillingContact} /> No\n                Billing Contact\n              </Label>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddCustomerBtn;\n\nconst options = [\n  {\n    label: \"Light Duty\",\n    value: \"Light Duty\",\n  },\n  {\n    label: \"Heavy Duty\",\n    value: \"Heavy Duty\",\n  },\n];\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const REGISTER_CUSTOMER_START = \"REGISTER_CUSTOMER_START\";\nexport const REGISTER_CUSTOMER_SUCCESS = \"REGISTER_CUSTOMER_SUCCESS\";\nexport const REGISTER_CUSTOMER_FAILURE = \"REGISTER_CUSTOMER_FAILURE\";\n\nexport const registerCustomer = (creds) => async (dispatch) => {\n  dispatch({ type: REGISTER_CUSTOMER_START });\n\n  return await axiosWithAuth()\n    .post(`${dbUrl}/c_register`, creds)\n    .then(() => {\n      dispatch({\n        type: REGISTER_CUSTOMER_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: REGISTER_CUSTOMER_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  toggleCurrentEmployees,\n  toggleAllEmployees,\n} from \"../../actions/employeesToggle\";\nimport { Button, ButtonGroup } from \"reactstrap\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst EmployeesToggle = () => {\n  const all = useSelector((state) => state.employeesToggleReducer.all);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"task-btns\">\n      <ButtonGroup>\n        <Button\n          onClick={() => dispatch(toggleCurrentEmployees())}\n          active={all === false}\n        >\n          Current\n        </Button>\n        <Button\n          onClick={() => dispatch(toggleAllEmployees())}\n          active={all === true}\n        >\n          All\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default EmployeesToggle;\n","export const CURRENT_EMPLOYEES = \"CURRENT_EMPLOYEES\";\nexport const ALL_EMPLOYEES = \"ALL_EMPLOYEES\";\n\nexport const toggleCurrentEmployees = () => async (dispatch) => {\n  dispatch({ type: CURRENT_EMPLOYEES });\n};\n\nexport const toggleAllEmployees = () => async (dispatch) => {\n  dispatch({ type: ALL_EMPLOYEES });\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport { registerEmployee } from \"../../actions/registerEmployee\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst AddEmployeeBtn = () => {\n  const [credentials, setCredentials] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    jobTitle: \"\",\n    tierLevel: null,\n    phoneNumber: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const getErrors = useSelector(\n    (state) => state.registerEmployeeReducer.errors\n  );\n  const getSuccess = useSelector(\n    (state) => state.registerEmployeeReducer.success\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    setErrors(getErrors);\n  }, [getErrors]);\n\n  useEffect(() => {\n    if (getSuccess === true) {\n      setSuccess(true);\n    }\n  }, [getSuccess]);\n\n  useEffect(() => {\n    if (success === true) {\n      setIsOpen(false);\n      setErrors({});\n      setSuccess(false);\n      setCredentials({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: null,\n        phoneNumber: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      });\n    }\n  }, [success]);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n    setErrors({});\n  };\n\n  const handleChange = (e) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(registerEmployee(credentials));\n  };\n\n  return (\n    <div className=\"add-employee-div\">\n      <Button color=\"success\" onClick={toggle}>\n        Add Employee\n      </Button>\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Employee</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <div className=\"name-div\">\n              <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  onChange={handleChange}\n                  invalid={errors.firstName ? true : false}\n                />\n                <FormFeedback>{errors.firstName}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  onChange={handleChange}\n                  invalid={errors.lastName ? true : false}\n                />\n                <FormFeedback>{errors.lastName}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"job-info-div\">\n              <FormGroup className=\"job-title-form-group\">\n                <Label for=\"jobTitle\">Job Title</Label>\n                <Input\n                  type=\"select\"\n                  name=\"jobTitle\"\n                  id=\"jobTitle\"\n                  onChange={handleChange}\n                  invalid={errors.jobTitle ? true : false}\n                >\n                  <option>Select</option>\n                  <option>Service Technician</option>\n                  <option>Outside Sales</option>\n                  <option>Service Manager</option>\n                  <option>Dispatch</option>\n                  <option>Office Manager</option>\n                  <option>Owner</option>\n                </Input>\n                <FormFeedback>{errors.jobTitle}</FormFeedback>\n              </FormGroup>\n              <FormGroup className=\"tier-level-form-group\">\n                <Label for=\"tierLevel\">Tier Level</Label>\n                <Input\n                  type=\"select\"\n                  name=\"tierLevel\"\n                  id=\"tierLevel\"\n                  onChange={handleChange}\n                  invalid={errors.tierLevel ? true : false}\n                >\n                  <option>Select</option>\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                </Input>\n                <FormFeedback>{errors.tierLevel}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"phoneNumber\">Phone Number</Label>\n              <Input\n                type=\"text\"\n                name=\"phoneNumber\"\n                id=\"phoneNumber\"\n                placeholder=\"XXX-XXX-XXXX\"\n                onChange={handleChange}\n                invalid={errors.phoneNumber ? true : false}\n              />\n              <FormFeedback>{errors.phoneNumber}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"example@example.com\"\n                onChange={handleChange}\n                invalid={errors.email ? true : false}\n              />\n              <FormFeedback>{errors.email}</FormFeedback>\n            </FormGroup>\n            <div className=\"password-div\">\n              <FormGroup>\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={handleChange}\n                  invalid={errors.password ? true : false}\n                />\n                <FormFeedback>{errors.password}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"confirmPassword\">Confirm Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  id=\"confirmPassword\"\n                  onChange={handleChange}\n                  invalid={errors.confirmPassword ? true : false}\n                />\n                <FormFeedback>{errors.confirmPassword}</FormFeedback>\n              </FormGroup>\n            </div>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" type=\"submit\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddEmployeeBtn;\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const REGISTER_EMPLOYEE_START = \"REGISTER_EMPLOYEE_START\";\nexport const REGISTER_EMPLOYEE_SUCCESS = \"REGISTER_EMPLOYEE_SUCCESS\";\nexport const REGISTER_EMPLOYEE_FAILURE = \"REGISTER_EMPLOYEE_FAILURE\";\n\nexport const registerEmployee = (creds) => async (dispatch) => {\n  dispatch({ type: REGISTER_EMPLOYEE_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .post(`${dbUrl}/e_register`, creds)\n    .then(() => {\n      dispatch({\n        type: REGISTER_EMPLOYEE_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: REGISTER_EMPLOYEE_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Search from \"../sidebar-components/Search\";\nimport TaskToggle from \"../sidebar-components/TaskToggle\";\nimport AddTaskBtn from \"../sidebar-components/AddTaskBtn\";\nimport AddEventBtn from \"../sidebar-components/AddEventBtn\";\nimport WorkOrderToggle from \"../sidebar-components/WorkOrderToggle\";\nimport AddWorkOrderBtn from \"../sidebar-components/AddWorkOrderBtn\";\nimport JobToggle from \"../sidebar-components/JobToggle\";\nimport AddCustomerBtn from \"../sidebar-components/AddCustomerBtn\";\nimport EmployeesToggle from \"../sidebar-components/EmployeesToggle\";\nimport AddEmployeeBtn from \"../sidebar-components/AddEmployeeBtn\";\n\nimport \"../../styles/sidebar.scss\";\n\nconst Sidebar = () => {\n  const calendarView = useSelector(\n    (state) => state.taskToggleReducer.calendarView\n  );\n\n  return (\n    <div className=\"sidebar\">\n      <Search />\n      <Switch>\n        <Route exact path={[\"/dashboard\", \"/dashboard/calendar\"]}>\n          <TaskToggle />\n          <AddTaskBtn />\n          {calendarView ? <AddEventBtn /> : null}\n        </Route>\n        <Route exact path=\"/dashboard/workorders\">\n          <WorkOrderToggle />\n          <AddWorkOrderBtn />\n        </Route>\n        <Route exact path=\"/dashboard/jobs\">\n          <JobToggle />\n        </Route>\n        <Route exact path=\"/dashboard/customers\">\n          <AddCustomerBtn />\n        </Route>\n        <Route exact path=\"/dashboard/employees\">\n          <EmployeesToggle />\n          <AddEmployeeBtn />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { getTasks } from \"../../actions/getTasks\";\nimport { getEvents } from \"../../actions/getEvents\";\nimport { getWorkOrders } from \"../../actions/getWorkOrders\";\nimport { getEmployees } from \"../../actions/getEmployees\";\nimport { editTask } from \"../../actions/editTask\";\nimport { deleteTask } from \"../../actions/deleteTask\";\n\nimport \"../../styles/task.scss\";\n\nconst Task = () => {\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector((state) => state.getTasksReducer.tasks);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const [employees, setEmployees] = useState();\n  const fetchEmployees = useSelector(\n    (state) => state.getEmployeesReducer.employees\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState();\n  const editSuccess = useSelector((state) => state.editTaskReducer.success);\n  const deleteSuccess = useSelector((state) => state.deleteTaskReducer.success);\n  const [errors, setErrors] = useState({\n    taskDescription: \"\",\n    taskDate: \"\",\n    taskTime: \"\",\n    employeeId: \"\",\n  });\n  const { currentUser } = useAuth();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(getTasks());\n    dispatch(getEvents());\n    dispatch(getWorkOrders());\n    dispatch(getEmployees());\n  }, []);\n\n  useEffect(() => {\n    setTasks(fetchTasks.tasks);\n  }, [fetchTasks]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchWorkOrders.workOrders) {\n      fetchWorkOrders.workOrders.forEach((workOrder) => {\n        if (\n          workOrder.crewMembers.includes(currentUser.uid) &&\n          workOrder.status === \"Open\"\n        ) {\n          array.push(workOrder);\n        } else if (\n          workOrder.serviceManager === currentUser.uid &&\n          workOrder.status === \"In Review\"\n        ) {\n          array.push(workOrder);\n        } else if (\n          workOrder.officeManager === currentUser.uid &&\n          workOrder.status === \"In Billing\"\n        ) {\n          array.push(workOrder);\n        }\n      });\n    }\n\n    setWorkOrders(array);\n  }, [fetchWorkOrders]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchEmployees.employees) {\n      fetchEmployees.employees.forEach((employee) => {\n        if (employee.active === true) {\n          array.push({\n            label: `${employee.firstName} ${employee.lastName}`,\n            value: employee.userId,\n            name: \"employeeId\",\n            jobTitle: employee.jobTitle,\n          });\n        }\n      });\n\n      setEmployees(array);\n    }\n  }, [fetchEmployees]);\n\n  useEffect(() => {\n    if (deleteSuccess || editSuccess) {\n      setIsOpen(false);\n    }\n  }, [deleteSuccess, editSuccess]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = (e, task) => {\n    setCurrentTask(task);\n    setIsOpen(!isOpen);\n  };\n\n  const goToWorkOrder = (e, workOrderId) => {\n    history.push(`/dashboard/workorders/${workOrderId}`);\n  };\n\n  const handleChange = (e) => {\n    setCurrentTask({\n      ...currentTask,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setCurrentTask({\n      ...currentTask,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleEditTask = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(editTask(currentTask));\n  };\n\n  const handleDeleteTask = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(deleteTask(currentTask.taskId));\n  };\n\n  return (\n    <div className=\"tasks-page\">\n      <h1>Tasks</h1>\n      {tasks\n        ? tasks.map((task) => (\n            <Card\n              onClick={(e) => toggle(e, task)}\n              className=\"tasks-page-task-card\"\n            >\n              <Table borderless>\n                <thead>\n                  <tr>\n                    <th>Task</th>\n                    <th>Date</th>\n                    <th>Time</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{task.taskDescription}</td>\n                    <td>{dateConverter(task.taskDate)}</td>\n                    <td>{timeConverter(task.taskTime)}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          ))\n        : null}\n      <h1>Work Orders</h1>\n      {workOrders\n        ? workOrders.map((workOrder) => (\n            <Card\n              onClick={(e) => goToWorkOrder(e, workOrder.workOrderId)}\n              className=\"tasks-page-task-card\"\n            >\n              <Table borderless>\n                <thead>\n                  <tr>\n                    <th>Work Order #</th>\n                    <th>Customer</th>\n                    <th>Service Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{workOrder.workOrderId}</td>\n                    <td>{workOrder.customerName}</td>\n                    <td>{workOrder.serviceDate}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          ))\n        : null}\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleEditTask}>\n            <FormGroup>\n              <Label>Task</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                value={currentTask ? currentTask.taskDescription : null}\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <div>\n              <FormGroup>\n                <Label>Date</Label>\n                <Input\n                  type=\"date\"\n                  placeholder=\"date placeholder\"\n                  name=\"taskDate\"\n                  value={currentTask ? currentTask.taskDate : null}\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label>Time</Label>\n                <Input\n                  type=\"time\"\n                  placeholder=\"time placeholder\"\n                  name=\"taskTime\"\n                  value={currentTask ? currentTask.taskTime : null}\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label>Assigned To</Label>\n              <Select\n                options={employees}\n                defaultValue={\n                  currentTask ? { value: currentTask.employeeId } : null\n                }\n                onChange={handleSelectChange}\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"danger\"\n            onClick={(e) => handleEditTask(e, currentTask)}\n          >\n            Edit\n          </Button>\n          <Button\n            color=\"success\"\n            onClick={(e) => handleDeleteTask(e, currentTask)}\n          >\n            Complete\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Task;\n","import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_TASKS_START = \"GET_TASKS_START\";\nexport const GET_TASKS_SUCCESS = \"GET_TASKS_SUCCESS\";\nexport const GET_TASKS_FAILURE = \"GET_TASKS_FAILURE\";\n\nexport const getTasks = () => async (dispatch) => {\n  dispatch({ type: GET_TASKS_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .get(`${dbUrl}/tasks`)\n    .then((res) => {\n      dispatch({\n        type: GET_TASKS_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_TASKS_FAILURE,\n        payload: err,\n      });\n    });\n};\n","import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_EVENTS_START = \"GET_EVENTS_START\";\nexport const GET_EVENTS_SUCCESS = \"GET_EVENTS_SUCCESS\";\nexport const GET_EVENTS_FAILURE = \"GET_EVENTS_FAILURE\";\n\nexport const getEvents = () => async (dispatch) => {\n  dispatch({ type: GET_EVENTS_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .get(`${dbUrl}/events`)\n    .then((res) => {\n      dispatch({\n        type: GET_EVENTS_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_EVENTS_FAILURE,\n        payload: err,\n      });\n    });\n};","import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_WORK_ORDERS_START = \"GET_WORK_ORDERS_START\";\nexport const GET_WORK_ORDERS_SUCCESS = \"GET_WORK_ORDERS_SUCCESS\";\nexport const GET_WORK_ORDERS_FAILURE = \"GET_WORK_ORDERS_FAILURE\";\n\nexport const getWorkOrders = () => async (dispatch) => {\n  dispatch({ type: GET_WORK_ORDERS_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .get(`${dbUrl}/work_orders`)\n    .then((res) => {\n      console.log(res.data);\n      dispatch({\n        type: GET_WORK_ORDERS_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_WORK_ORDERS_FAILURE,\n        payload: err,\n      });\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport { deleteEvent } from \"../../actions/deleteEvent\";\n\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"../../styles/task.scss\";\n\nconst TaskCalendar = () => {\n  const flag = useSelector((state) => state.taskToggleReducer.calendarView);\n  const [events, setEvents] = useState([]);\n  const [curEvent, setCurEvent] = useState({\n    title: \"\",\n    extendedProps: {\n      location: \"\",\n      description: \"\",\n      invitees: [],\n      eventId: \"\",\n    },\n  });\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = useSelector((state) => state.getTasksReducer.tasks);\n  const [otherEvents, setOtherEvents] = useState([]);\n  const fetchEvents = useSelector((state) => state.getEventsReducer.events);\n  const [workOrders, setWorkOrders] = useState([]);\n  const fetchWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const [employees, setEmployees] = useState();\n  const fetchUsers = useSelector((state) => state.getUsersReducer.users);\n  const [isOpen, setIsOpen] = useState(false);\n  const success = useSelector((state) => state.deleteEventReducer.success);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (fetchTasks) {\n      fetchTasks.tasks.map((task) => {\n        setEvents((events) => [\n          ...events,\n          {\n            title: task.taskDescription,\n            date: task.taskDate,\n          },\n        ]);\n      });\n    }\n  }, [fetchTasks]);\n\n  useEffect(() => {\n    let start = \"\";\n    let end = \"\";\n\n    if (fetchEvents) {\n      const array = [];\n\n      fetchEvents.events.map((event) => {\n        // if (event.startTime === \"\") {\n        //   let allDay = true;\n        // }\n\n        if (event.startDate !== \"\" && event.startTime !== \"\") {\n          start = `${event.startDate}T${event.startTime}`;\n        } else {\n          start = event.startDate;\n        }\n\n        if (event.endDate === \"\" && event.endTime === \"\") {\n          end = event.startDate;\n        } else if (event.endDate === \"\" && event.endTime !== \"\") {\n          end = `${event.startDate}T${event.endTime}`;\n        } else if (event.endDate !== \"\" && event.endTime !== \"\") {\n          end = `${event.endDate}T${event.endTime}`;\n        } else {\n          end = event.endDate;\n        }\n\n        if (event.recurring) {\n          array.push({\n            title: event.title,\n            // allDay: allDay,\n            startTime: event.startTime,\n            endTime: event.endTime,\n            startRecur: event.startDate,\n            daysOfWeek: event.daysOfWeek,\n            color: \"red\",\n            extendedProps: {\n              location: event.extendedProps.location,\n              invitees: event.extendedProps.invitees,\n              description: event.extendedProps.description,\n              eventId: event.extendedProps.eventId,\n              eventType: \"event\",\n            },\n          });\n        } else {\n          array.push({\n            title: event.title,\n            // allDay: allDay,\n            start: start,\n            end: end,\n            color: \"red\",\n            extendedProps: {\n              location: event.extendedProps.location,\n              invitees: event.extendedProps.invitees,\n              description: event.extendedProps.description,\n              eventId: event.extendedProps.eventId,\n              eventType: \"event\",\n            },\n          });\n        }\n      });\n      console.log(array);\n      setEvents((events) => [...events, ...array]);\n    }\n  }, [fetchEvents]);\n\n  useEffect(() => {\n    if (fetchWorkOrders) {\n      fetchWorkOrders.workOrders.map((workOrder) => {\n        setEvents((events) => [\n          ...events,\n          {\n            title: workOrder.serviceDescription,\n            allDay: workOrder.allDay,\n            start: `${workOrder.serviceDate}T${workOrder.serviceStartTime}`,\n            end: `${workOrder.serviceDate}T${workOrder.serviceEndTime}`,\n            color: \"green\",\n            extendedProps: {\n              workOrderId: workOrder.workOrderId,\n            },\n          },\n        ]);\n      });\n    }\n  }, [fetchWorkOrders]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchUsers) {\n      fetchUsers.users.map((user) => {\n        if (user.userType === \"employee\" && user.active === true) {\n          array.push({\n            name: `${user.firstName} ${user.lastName}`,\n            userId: user.userId,\n          });\n        }\n      });\n    }\n\n    setEmployees(array);\n  }, [fetchUsers]);\n\n  useEffect(() => {\n    if(success) {\n      toggle()\n    }\n  }, [success]);\n\n  const decoder = (invitees) => {\n    const array = [];\n\n    if (invitees) {\n      if (invitees[0] === \"Everyone\") {\n        return \"Everyone\";\n      } else {\n        invitees.forEach((person) => {\n          employees.forEach((employee) => {\n            if (person === employee.userId) {\n              array.push(employee.name);\n            }\n          });\n        });\n        return array.join(\", \");\n      }\n    }\n  };\n\n  const toggle = (event) => {\n    if (isOpen) {\n      setCurEvent({\n        title: \"\",\n        extendedProps: {\n          location: \"\",\n          description: \"\",\n          invitees: [],\n          eventId: \"\",\n        },\n      });\n    } else {\n      setCurEvent(event);\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const handleEventClick = (event) => {\n    const workOrderId = event.event._def.extendedProps.workOrderId;\n    const eventType = event.event._def.extendedProps.eventType;\n\n    if (workOrderId) {\n      history.push(`/dashboard/workorders/${workOrderId}`);\n    }\n\n    if (eventType) {\n      toggle(event.event._def);\n    }\n  };\n\n  const handleDeleteEvent = (e, eventId) => {\n    e.preventDefault();\n    dispatch(deleteEvent(eventId));\n  };\n\n  return (\n    <div className=\"calendar-page\">\n      <FullCalendar\n        plugins={[\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin,\n          bootstrapPlugin,\n        ]}\n        initialView=\"dayGridMonth\"\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        }}\n        events={events}\n        eventClick={handleEventClick}\n        themeSystem=\"bootstrap\"\n        height=\"auto\"\n      />\n\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{curEvent.title}</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                type=\"textarea\"\n                disabled\n                value={curEvent.extendedProps.description}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Location</Label>\n              <Input\n                type=\"text\"\n                disabled\n                value={curEvent.extendedProps.location}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Attendees</Label>\n              <Input\n                type=\"text\"\n                disabled\n                value={decoder(curEvent.extendedProps.invitees)}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"danger\"\n            onClick={(e) =>\n              handleDeleteEvent(e, curEvent.extendedProps.eventId)\n            }\n          >\n            Delete Event\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TaskCalendar;\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const DELETE_EVENT_START = \"DELETE_EVENT_START\";\nexport const DELETE_EVENT_SUCCESS = \"DELETE_EVENT_SUCCESS\";\nexport const DELETE_EVENT_FAILURE = \"DELETE_EVENT_FAILURE\";\n\nexport const deleteEvent = (eventId) => async (dispatch) => {\n  dispatch({ type: DELETE_EVENT_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .delete(`${dbUrl}/event/${eventId}`)\n    .then(() => {\n      dispatch({\n        type: DELETE_EVENT_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: DELETE_EVENT_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card, CardBody, Table } from \"reactstrap\";\n\nimport \"../../styles/workorder.scss\";\n\nconst OpenWorkOrders = () => {\n  const [workOrders, setWorkOrders] = useState([]);\n  const getWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const history = useHistory();\n\n  useEffect(() => {\n    const array = [];\n\n    if (getWorkOrders.workOrders) {\n      getWorkOrders.workOrders.forEach((workOrder) => {\n        if (workOrder.status !== \"Closed\") {\n          array.push(workOrder);\n        }\n      });\n    }\n\n    setWorkOrders(array);\n  }, [getWorkOrders]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const handleClick = (e, workOrder) => {\n    const jobId = workOrder.workOrderId;\n    history.push(`workorders/${jobId}`);\n  };\n\n  return (\n    <div className=\"work-orders-page\">\n      <h1 className=\"open-work-orders-title\">Open Work Orders</h1>\n      {workOrders\n        ? workOrders.map((workOrder) => (\n            <Card\n              className=\"work-order-card\"\n              onClick={(e) => handleClick(e, workOrder)}\n            >\n              <CardBody>\n                <Table borderless>\n                  <thead>\n                    <tr>\n                      <th>W.O. #</th>\n                      {workOrder.jobNumber ? <th>Job #</th> : null}\n                      <th>Customer Name</th>\n                      <th>Service Type</th>\n                      <th>Service Date</th>\n                      <th>Service Time</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th>{workOrder.workOrderId}</th>\n                      {workOrder.jobNumber ? (\n                        <th>{workOrder.jobNumber}</th>\n                      ) : null}\n                      <td>{workOrder.customerName}</td>\n                      <td>\n                        {workOrder.serviceType.length > 1\n                          ? \"Multi\"\n                          : workOrder.serviceType}\n                      </td>\n                      <td>{dateConverter(workOrder.serviceDate)}</td>\n                      <td>{timeConverter(workOrder.serviceStartTime)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          ))\n        : null}\n    </div>\n  );\n};\n\nexport default OpenWorkOrders;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card, CardBody, Table } from \"reactstrap\";\n\nimport \"../../styles/workorder.scss\";\n\nconst ClosedWorkOrders = () => {\n  const [workOrders, setWorkOrders] = useState([]);\n  const getWorkOrders = useSelector(\n    (state) => state.getWorkOrdersReducer.workOrders\n  );\n  const history = useHistory();\n\n  useEffect(() => {\n    const array = [];\n\n    if (getWorkOrders.workOrders) {\n      getWorkOrders.workOrders.forEach((workOrder) => {\n        if (workOrder.status === \"Closed\") {\n          array.push(workOrder);\n        }\n      });\n    }\n\n    setWorkOrders(array);\n  }, [getWorkOrders]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const handleClick = (e, workOrder) => {\n    const jobId = workOrder.workOrderId;\n    history.push(`workorders/${jobId}`);\n  };\n\n  return (\n    <div className=\"work-orders-page\">\n      <h1 className=\"open-work-orders-title\">Closed Work Orders</h1>\n      {workOrders\n        ? workOrders.map((workOrder) => (\n            <Card\n              className=\"work-order-card\"\n              onClick={(e) => handleClick(e, workOrder)}\n            >\n              <CardBody>\n                <Table borderless>\n                  <thead>\n                    <tr>\n                      <th>W.O. #</th>\n                      {workOrder.jobNumber ? <th>Job #</th> : null}\n                      <th>Customer Name</th>\n                      <th>Service Type</th>\n                      <th>Service Date</th>\n                      <th>Service Time</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th>{workOrder.workOrderId}</th>\n                      {workOrder.jobNumber ? (\n                        <th>{workOrder.jobNumber}</th>\n                      ) : null}\n                      <td>{workOrder.customerName}</td>\n                      <td>\n                        {workOrder.serviceType.length > 1\n                          ? \"Multi\"\n                          : workOrder.serviceType}\n                      </td>\n                      <td>{dateConverter(workOrder.serviceDate)}</td>\n                      <td>{timeConverter(workOrder.serviceStartTime)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          ))\n        : null}\n    </div>\n  );\n};\n\nexport default ClosedWorkOrders;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table,\n} from \"reactstrap\";\nimport SignatureCanvas from \"react-signature-canvas\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { getWorkOrder } from \"../../actions/getWorkOrder\";\nimport { getUsers } from \"../../actions/getUsers\";\nimport { editWorkOrder } from \"../../actions/editWorkOrder\";\nimport app from \"../../firebase\";\n\nimport \"../../styles/workorder.scss\";\n\nconst WorkOrder = () => {\n  const [workOrder, setWorkOrder] = useState({});\n  const [customer, setCustomer] = useState({});\n  const [mapsAddress, setMapsAddress] = useState(\"\");\n  const [employees, setEmployees] = useState([]);\n  const getWorkOrderFromState = useSelector(\n    (state) => state.getWorkOrderReducer.workOrder\n  );\n  const fetchUsers = useSelector((state) => state.getWorkOrderReducer.users);\n  const [allEmployees, setAllEmployees] = useState();\n  const fetchAllUsers = useSelector((state) => state.getUsersReducer.users);\n  const [isOpenServiceModal, setIsOpenServiceModal] = useState(false);\n  const [service, setService] = useState({\n    make: \"\",\n    type: \"\",\n    model: \"\",\n    serialNumber: \"\",\n    bayNumber: \"\",\n    serviceDone: \"\",\n    billableHours: null,\n    partsUsed: [],\n    partsNeeded: [],\n    images: [],\n  });\n  const [serviceErrors, setServiceErrors] = useState({});\n  const [partUsed, setPartUsed] = useState({\n    quantity: \"\",\n    partDescription: \"\",\n    partNumber: \"\",\n    images: [],\n  });\n  const [partUsedErrors, setPartUsedErrors] = useState({});\n  const [partNeeded, setPartNeeded] = useState({\n    quantity: \"\",\n    partDescription: \"\",\n    partNumber: \"\",\n    images: [],\n  });\n  const [partNeededErrors, setPartNeededErrors] = useState({});\n  const [isOpenPartUsed, setIsOpenPartUsed] = useState(false);\n  const [isOpenPartNeeded, setIsOpenPartNeeded] = useState(false);\n  const [hideOfficeNotes, setHideOfficeNotes] = useState(false);\n  const [hideSignaturePad, setHideSignaturePad] = useState(true);\n  const [hideEditButton, setHideEditButton] = useState(false);\n  const [\n    hideSubmitForSignatureButton,\n    setHideSubmitForSignatureButton,\n  ] = useState(false);\n  const [hideSubmitForReviewButton, setHideSubmitForReviewButton] = useState(\n    true\n  );\n  const [hideSubmitForBillingButton, setHideSubmitForBillingButton] = useState(\n    true\n  );\n  let sigPad = {};\n  const [reviewFlag, setReviewFlag] = useState(false); // Flags when submitted for review\n  const [flag, setFlag] = useState(false); // Flags when submitted for billing or closed\n  const { currentUser } = useAuth();\n  const [editPunchOpen, setEditPunchOpen] = useState(false);\n  const [currentPunch, setCurrentPunch] = useState();\n  const [hours, setHours] = useState();\n  const [minutes, setMinutes] = useState();\n  const [editServiceOpen, setEditServiceOpen] = useState(false);\n  const [currentService, setCurrentService] = useState();\n  const [editPartUsed, setEditPartUsed] = useState(false);\n  const [currentPartUsed, setCurrentPartUsed] = useState();\n  const [editPartNeeded, setEditPartNeeded] = useState(false);\n  const [currentPartNeeded, setCurrentPartNeeded] = useState();\n  const [inspectionForm, setInspectionForm] = useState();\n  const [rmlTrainingForm, setRmlTrainingForm] = useState();\n  const [skTrainingForm, setSkTrainingForm] = useState();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const jobId = pathArray[pathArray.length - 1];\n    dispatch(getWorkOrder(jobId));\n    dispatch(getUsers());\n  }, []);\n\n  useEffect(() => {\n    const storage = app.storage();\n    const storageRef = storage.ref();\n    storageRef\n      .child(\"inspectionForms/inspection-fake.pdf\")\n      .getDownloadURL()\n      .then((url) => {\n        setInspectionForm(url);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    const storage = app.storage();\n    const storageRef = storage.ref();\n    storageRef\n      .child(\"trainingForms/rml-training-fake.pdf\")\n      .getDownloadURL()\n      .then((url) => {\n        setRmlTrainingForm(url);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    const storage = app.storage();\n    const storageRef = storage.ref();\n    storageRef\n      .child(\"trainingForms/sk-training-fake.pdf\")\n      .getDownloadURL()\n      .then((url) => {\n        setSkTrainingForm(url);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (getWorkOrderFromState) {\n      setWorkOrder(getWorkOrderFromState);\n    }\n  }, [getWorkOrderFromState]);\n\n  useEffect(() => {\n    let crewMembers = [];\n\n    if (fetchUsers) {\n      fetchUsers.forEach((user) => {\n        if (user.userType === \"customer\") {\n          setCustomer(user);\n        } else {\n          crewMembers.push(user);\n        }\n      });\n      setEmployees(crewMembers);\n    }\n  }, [fetchUsers]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchAllUsers.users) {\n      fetchAllUsers.users.forEach((user) => {\n        if (user.userType === \"employee\") {\n          array.push(user);\n        }\n      });\n    }\n    setAllEmployees(array);\n  }, [fetchAllUsers]);\n\n  useEffect(() => {\n    if (customer) {\n      addressConverter(customer);\n    }\n  }, [customer]);\n\n  useEffect(() => {\n    if (reviewFlag) {\n      dispatch(editWorkOrder(workOrder));\n      setHideOfficeNotes(false);\n      setReviewFlag(false);\n      history.push(\"/dashboard\");\n    }\n  }, [reviewFlag]);\n\n  useEffect(() => {\n    if (flag) {\n      dispatch(editWorkOrder(workOrder));\n      setHideOfficeNotes(false);\n    }\n    setFlag(false);\n  }, [flag]);\n\n  const typeConverter = (types) => {\n    if (types) {\n      if (types.length === 1) {\n        return types;\n      } else {\n        return types.join(\", \");\n      }\n    }\n  };\n\n  const dateConverter = (date) => {\n    if (date) {\n      const dateArray = date.split(\"-\");\n      return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n    }\n  };\n\n  const timeConverter = (time) => {\n    if (time) {\n      const timeArray = time.split(\":\");\n      const hour = parseInt(timeArray[0]);\n      let m;\n\n      if (hour <= 11) {\n        m = \"AM\";\n      } else {\n        m = \"PM\";\n      }\n\n      if (hour <= 12) {\n        const newHour = hour.toString();\n        timeArray[0] = newHour;\n      } else {\n        const newHour = (hour - 12).toString();\n        timeArray[0] = newHour;\n      }\n\n      return `${timeArray[0]}:${timeArray[1]} ${m}`;\n    }\n  };\n\n  const addressConverter = (customer) => {\n    if (customer.shopAddress) {\n      const address = customer.shopAddress.address;\n      const city = customer.shopAddress.city;\n      const state = customer.shopAddress.state;\n      const zipcode = customer.shopAddress.zipcode;\n\n      let newAddress = \"\";\n      let newCity = \"\";\n\n      if (address) {\n        newAddress = address.split(\" \").join(\"+\");\n      }\n      if (city) {\n        newCity = city.split(\" \").join(\"+\");\n      }\n\n      const searchableAddress = `${newAddress},+${newCity},+${state}+${zipcode}`;\n      setMapsAddress(searchableAddress);\n    }\n  };\n\n  const crewConverter = (members) => {\n    let crewNames = [];\n\n    if (members) {\n      members.forEach((member) => {\n        crewNames.push(`${member.firstName} ${member.lastName}`);\n      });\n\n      if (crewNames.length === 1) {\n        return crewNames;\n      } else {\n        return crewNames.join(\", \");\n      }\n    }\n  };\n\n  const crewMemberConverter = (crewId) => {\n    var name;\n\n    allEmployees.forEach((employee) => {\n      if (employee.userId === crewId) {\n        name = `${employee.firstName} ${employee.lastName}`;\n      }\n    });\n    return name;\n  };\n\n  const clockIn = () => {\n    const date = new Date();\n    const time = date.getTime();\n\n    const punches = workOrder.crewPunches;\n\n    if (punches.length === 0) {\n      punches.push({\n        crewId: currentUser.uid,\n        timeAccrued: 0,\n        clockIn: time,\n      });\n    } else {\n      punches.forEach((punch) => {\n        if (punch.crewId === currentUser.uid) {\n          if (punch.clockIn === null) {\n            punch.clockIn = time;\n          } else {\n            alert(\"Already clocked in\");\n          }\n        } else {\n          punches.push({\n            crewId: currentUser.uid,\n            timeAccrued: 0,\n            clockIn: time,\n          });\n        }\n      });\n    }\n\n    setWorkOrder({\n      ...workOrder,\n      crewPunches: punches,\n    });\n  };\n\n  const clockOut = () => {\n    const date = new Date();\n    const time = date.getTime();\n\n    const punches = workOrder.crewPunches;\n\n    if (punches.length === 0) {\n      alert(\"Please clock in first\");\n    } else {\n      punches.forEach((punch) => {\n        if (punch.crewId === currentUser.uid) {\n          if (punch.clockIn === null) {\n            alert(\"Please clock in first\");\n          } else {\n            punch.timeAccrued += time - punch.clockIn;\n            punch.clockIn = null;\n          }\n        }\n      });\n    }\n\n    setWorkOrder({\n      ...workOrder,\n      crewPunches: punches,\n    });\n  };\n\n  const totalTime = (crewPunches) => {\n    const array = [];\n    const reducer = (acc, curVal) => acc + curVal;\n    var total, answer;\n\n    if (crewPunches.length === 0) {\n      answer = jobTimeConverter(0);\n    } else {\n      crewPunches.forEach((punch) => {\n        array.push(punch.timeAccrued);\n      });\n\n      total = array.reduce(reducer);\n      answer = jobTimeConverter(total);\n    }\n    return answer;\n  };\n\n  const jobTimeConverter = (timeAccrued) => {\n    if (timeAccrued === 0) {\n      return 0 + \":\" + 0 + \":\" + 0;\n    }\n\n    const seconds = Math.floor((timeAccrued / 1000) % 60);\n    const minutes = Math.floor((timeAccrued / (1000 * 60)) % 60);\n    const hours = Math.floor((timeAccrued / (1000 * 60 * 60)) % 24);\n\n    const trueHours = hours < 10 ? \"0\" + hours : hours;\n    const trueMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n    const trueSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n    return trueHours + \":\" + trueMinutes + \":\" + trueSeconds;\n  };\n\n  const handleChange = (e) => {\n    setWorkOrder({\n      ...workOrder,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const toggleServiceModal = () => {\n    if (isOpenServiceModal) {\n      setServiceErrors({});\n    }\n    setIsOpenServiceModal(!isOpenServiceModal);\n  };\n\n  const handleChangeService = (e) => {\n    setService({\n      ...service,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmitService = (e) => {\n    e.preventDefault();\n    const errors = {};\n\n    if (service.make.trim() === \"\") {\n      errors.make = \"Must not be empty\";\n    }\n    if (service.type.trim() === \"\") {\n      errors.type = \"Must not be empty\";\n    }\n    if (service.model.trim() === \"\") {\n      errors.model = \"Must not be empty\";\n    }\n    if (service.serialNumber.trim() === \"\") {\n      errors.serialNumber = \"Must not be empty\";\n    }\n    if (service.serviceDone.trim() === \"\") {\n      errors.serviceDone = \"Must not be empty\";\n    }\n    if (service.billableHours === null) {\n      errors.billableHours = \"Must not be empty\";\n    } else if (service.billableHours.trim() === \"\") {\n      errors.billableHours = \"Must not be empty\";\n    } else if (service.billableHours % 0.5 !== 0 || service.billableHours < 0) {\n      errors.billableHours =\n        \"Billable hours must be priced to the next half hour\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      setServiceErrors(errors);\n    } else {\n      if (!workOrder.serviceDone) {\n        setWorkOrder({\n          ...workOrder,\n          serviceDone: [service],\n        });\n      } else {\n        setWorkOrder({\n          ...workOrder,\n          serviceDone: [...workOrder.serviceDone, service],\n        });\n      }\n\n      setService({\n        make: \"\",\n        type: \"\",\n        model: \"\",\n        serialNumber: \"\",\n        bayNumber: \"\",\n        serviceDone: \"\",\n        billableHours: null,\n        partsUsed: [],\n        partsNeeded: [],\n        images: [],\n      });\n\n      setIsOpenServiceModal(false);\n      setServiceErrors({});\n    }\n  };\n\n  const togglePartUsed = () => {\n    setIsOpenPartUsed(!isOpenPartUsed);\n  };\n\n  const togglePartNeeded = () => {\n    setIsOpenPartNeeded(!isOpenPartNeeded);\n  };\n\n  const handleChangePartUsed = (e) => {\n    setPartUsed({\n      ...partUsed,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmitPartUsed = (e) => {\n    e.preventDefault();\n    const errors = {};\n\n    if (partUsed.quantity.trim() === \"\") {\n      errors.quantity = \"Must not be empty\";\n    }\n    if (partUsed.partDescription.trim() === \"\") {\n      errors.partDescription = \"Must not be empty\";\n    }\n    if (partUsed.partNumber.trim() === \"\") {\n      errors.partNumber = \"Must not be empty\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      setPartUsedErrors(errors);\n    } else {\n      setService({\n        ...service,\n        partsUsed: [...service.partsUsed, partUsed],\n      });\n\n      setPartUsed({\n        quantity: \"\",\n        partDescription: \"\",\n        partNumber: \"\",\n        images: [],\n      });\n\n      setIsOpenPartUsed(false);\n      setPartUsedErrors({});\n    }\n  };\n\n  const handleChangePartNeeded = (e) => {\n    setPartNeeded({\n      ...partNeeded,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmitPartNeeded = (e) => {\n    e.preventDefault();\n    const errors = {};\n\n    if (partNeeded.quantity.trim() === \"\") {\n      errors.quantity = \"Must not be empty\";\n    }\n    if (partNeeded.partDescription.trim() === \"\") {\n      errors.partDescription = \"Must not be empty\";\n    }\n    if (partNeeded.partNumber.trim() === \"\") {\n      errors.partNumber = \"Must not be empty\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      setPartNeededErrors(errors);\n    } else {\n      setService({\n        ...service,\n        partsNeeded: [...service.partsNeeded, partNeeded],\n      });\n\n      setPartNeeded({\n        quantity: \"\",\n        partDescription: \"\",\n        partNumber: \"\",\n        images: [],\n      });\n\n      setIsOpenPartNeeded(false);\n      setPartNeededErrors({});\n    }\n  };\n\n  const goToInspection = () => {\n    window.open(inspectionForm);\n  };\n\n  const goToTraining = () => {\n    window.open(rmlTrainingForm);\n  };\n\n  const handleSubmitForSignature = (e) => {\n    e.preventDefault();\n    setHideOfficeNotes(true);\n    setHideSignaturePad(false);\n    setHideEditButton(true);\n    setHideSubmitForSignatureButton(true);\n    setHideSubmitForReviewButton(false);\n  };\n\n  const clearSignaturePad = (e) => {\n    sigPad.clear();\n  };\n\n  const handleEditWorkOrder = (e) => {\n    e.preventDefault();\n    dispatch(editWorkOrder(workOrder));\n  };\n\n  const handleSubmitForReview = (e) => {\n    e.preventDefault();\n    setWorkOrder({\n      ...workOrder,\n      signature: sigPad.getTrimmedCanvas().toDataURL(\"image/png\"),\n      status: \"In Review\",\n    });\n    setReviewFlag(true);\n  };\n\n  const handleSubmitForBilling = (e) => {\n    e.preventDefault();\n    setWorkOrder({\n      ...workOrder,\n      status: \"In Billing\",\n    });\n    setFlag(true);\n  };\n\n  const handleCloseWorkOrder = (e) => {\n    e.preventDefault();\n    setWorkOrder({\n      ...workOrder,\n      status: \"Closed\",\n    });\n    setFlag(true);\n  };\n\n  const toggleEditPunch = (e, punch) => {\n    console.log(punch);\n    if (workOrder.serviceManager === currentUser.uid) {\n      if (editPunchOpen) {\n        setCurrentPunch({\n          crewId: \"\",\n          clockIn: \"\",\n          timeAccrued: null,\n        });\n      } else {\n        setCurrentPunch(punch);\n      }\n      setEditPunchOpen(!editPunchOpen);\n    }\n  };\n\n  const handleHourChange = (e) => {\n    setHours(e.target.value);\n  };\n\n  const handleMinuteChange = (e) => {\n    setMinutes(e.target.value);\n  };\n\n  const submitTimeChange = (e) => {\n    const h = hours;\n    const m = minutes;\n\n    const minToSec = m * 60;\n    const hourToSec = h * 60 * 60;\n\n    const totalSec = minToSec + hourToSec;\n    const totalMilliSec = totalSec * 1000;\n\n    const crewPunches = workOrder.crewPunches;\n\n    const array = [];\n    crewPunches.forEach((punch) => {\n      if (punch.crewId !== currentPunch.crewId) {\n        array.push(punch);\n      }\n    });\n\n    array.push({\n      crewId: currentPunch.crewId,\n      clockIn: null,\n      timeAccrued: totalMilliSec,\n    });\n\n    setWorkOrder({\n      ...workOrder,\n      crewPunches: array,\n    });\n\n    toggleEditPunch(false);\n  };\n\n  const toggleEditService = (e, service) => {\n    if (\n      workOrder.status === \"Open\" ||\n      (workOrder.status === \"In Review\" &&\n        workOrder.serviceManager === currentUser.uid)\n    ) {\n      if (editServiceOpen) {\n        setCurrentService({\n          make: \"\",\n          type: \"\",\n          model: \"\",\n          serialNumber: \"\",\n          bayNumber: \"\",\n          serviceDone: \"\",\n          billableHours: null,\n          partsUsed: [],\n          partsNeeded: [],\n          images: [],\n        });\n      } else {\n        setCurrentService(service);\n      }\n      setEditServiceOpen(!editServiceOpen);\n    }\n    console.log(service);\n  };\n\n  const handleServiceEditChange = (e) => {\n    setCurrentService({\n      ...currentService,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const submitServiceEditChange = e => {\n    \n  }\n\n  return (\n    <div className=\"work-order-page\">\n      {workOrder ? (\n        <div className=\"work-order-page-content\">\n          <h1>{`Work Order #${workOrder.workOrderId}`}</h1>\n          <Form className=\"work-order-info\">\n            <FormGroup>\n              <Label for=\"customerName\">Customer Name</Label>\n              <Input disabled value={customer.businessName} />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"customerAddress\">Customer Address</Label>\n              <a\n                href={`http://maps.google.com/maps?q=${mapsAddress}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Input\n                  disabled\n                  value={`${\n                    customer.shopAddress ? customer.shopAddress.address : null\n                  }, ${\n                    customer.shopAddress ? customer.shopAddress.city : null\n                  }, ${\n                    customer.shopAddress ? customer.shopAddress.state : null\n                  } ${\n                    customer.shopAddress ? customer.shopAddress.zipcode : null\n                  }`}\n                />\n              </a>\n            </FormGroup>\n            <FormGroup className=\"type-input\">\n              <Label for=\"serviceType\">Service Type(s)</Label>\n              <Input disabled value={typeConverter(workOrder.serviceType)} />\n            </FormGroup>\n            <div className=\"date-div\">\n              <FormGroup>\n                <Label for=\"serviceDate\">Service Date</Label>\n                <Input disabled value={dateConverter(workOrder.serviceDate)} />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"serviceStartTime\">Service Start Time</Label>\n                <Input\n                  disabled\n                  value={timeConverter(workOrder.serviceStartTime)}\n                />\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"crewMembers\">Crew Members</Label>\n              <Input disabled value={crewConverter(employees)} />\n            </FormGroup>\n            <FormGroup className=\"description-input\">\n              <Label for=\"serviceDescription\">Service Description</Label>\n              <Input\n                disabled\n                type=\"textarea\"\n                value={workOrder.serviceDescription}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"crewPunches\">Crew Punches</Label>\n              {workOrder.crewPunches &&\n                workOrder.crewPunches.map((punch) => (\n                  <p onClick={(e) => toggleEditPunch(e, punch)}>\n                    {crewMemberConverter(punch.crewId)}:{\" \"}\n                    {jobTimeConverter(punch.timeAccrued)}\n                  </p>\n                ))}\n              {workOrder.crewPunches ? (\n                <p>\n                  <strong>\n                    Total Time Accrued: {totalTime(workOrder.crewPunches)}\n                  </strong>\n                </p>\n              ) : null}\n            </FormGroup>\n            <div className=\"button-div\">\n              {workOrder.status === \"Open\" ||\n              (workOrder.serviceManager === currentUser.uid &&\n                workOrder.status === \"In Review\") ? (\n                <div className=\"secondary-button-div\">\n                  <FormGroup>\n                    <Button color=\"primary\" onClick={clockIn}>\n                      Clock In\n                    </Button>\n                  </FormGroup>\n                  <FormGroup>\n                    <Button color=\"primary\" onClick={clockOut}>\n                      Clock Out\n                    </Button>\n                  </FormGroup>\n                </div>\n              ) : null}\n              {workOrder.serviceDone ? (\n                workOrder.serviceDone.length > 0 ? (\n                  <div className=\"service-table\">\n                    <h5>Services</h5>\n                    <Table hover size=\"sm\">\n                      <thead>\n                        <th>Service Type</th>\n                        <th>Service Description</th>\n                        <th>Parts Needed</th>\n                      </thead>\n                      <tbody>\n                        {workOrder.serviceDone.map((service) => (\n                          <tr onClick={(e) => toggleEditService(e, service)}>\n                            <td scope=\"row\">{service.type}</td>\n                            <td>{service.serviceDone}</td>\n                            <td>\n                              {service.partsNeeded.length > 0 ? \"Y\" : \"N\"}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                  </div>\n                ) : null\n              ) : null}\n              {workOrder.status === \"Open\" ||\n              (workOrder.serviceManager === currentUser.uid &&\n                workOrder.status === \"In Review\") ? (\n                <FormGroup>\n                  <Button outline color=\"success\" onClick={toggleServiceModal}>\n                    Add Service\n                  </Button>\n                </FormGroup>\n              ) : null}\n              {workOrder.status === \"Open\" ||\n              (workOrder.serviceManager === currentUser.uid &&\n                workOrder.status === \"In Review\") ? (\n                <div className=\"secondary-button-div\">\n                  <FormGroup>\n                    <Button outline color=\"info\" onClick={goToInspection}>\n                      Add Inspection\n                    </Button>\n                  </FormGroup>\n                  <FormGroup>\n                    <Button\n                      outline\n                      color=\"warning\"\n                      className=\"training-button\"\n                      onClick={goToTraining}\n                    >\n                      Add Training\n                    </Button>\n                  </FormGroup>\n                </div>\n              ) : null}\n            </div>\n            <div className=\"travel-div\">\n              <FormGroup>\n                <Label for=\"travelTime\">Travel Time (Roundtrip)</Label>\n                <Input\n                  type=\"text\"\n                  name=\"travelTime\"\n                  disabled={\n                    workOrder.status === \"Closed\" ||\n                    workOrder.status === \"In Billing\" ||\n                    (workOrder.status === \"In Review\" &&\n                      workOrder.serviceManager !== currentUser.uid)\n                  }\n                  value={workOrder.travelTime ? workOrder.travelTime : null}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"travelMileage\">Travel Mileage (Roundtrip)</Label>\n                <Input\n                  type=\"text\"\n                  name=\"travelMileage\"\n                  disabled={\n                    workOrder.status === \"Closed\" ||\n                    workOrder.status === \"In Billing\" ||\n                    (workOrder.status === \"In Review\" &&\n                      workOrder.serviceManager !== currentUser.uid)\n                  }\n                  value={\n                    workOrder.travelMileage ? workOrder.travelMileage : null\n                  }\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"notes\">Notes</Label>\n              <Input\n                type=\"textarea\"\n                name=\"notes\"\n                disabled={\n                  workOrder.status === \"In Review\" ||\n                  workOrder.status === \"In Billing\" ||\n                  workOrder.status === \"Closed\"\n                }\n                value={workOrder.notes ? workOrder.notes : null}\n                onChange={handleChange}\n              />\n            </FormGroup>\n            {hideOfficeNotes ? null : (\n              <FormGroup>\n                <Label for=\"officeNotes\">Office Notes (NOT FOR CUSTOMER)</Label>\n                <Input\n                  type=\"textarea\"\n                  name=\"officeNotes\"\n                  disabled={\n                    (workOrder.serviceManager !== currentUser.uid &&\n                      workOrder.status === \"In Review\") ||\n                    (workOrder.officeManager !== currentUser.uid &&\n                      workOrder.status === \"In Billing\")\n                  }\n                  value={workOrder.officeNotes ? workOrder.officeNotes : null}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            )}\n            {!workOrder.signature ? (\n              hideSignaturePad ? null : (\n                <FormGroup>\n                  <div className=\"signature-pad-header\">\n                    <Label for=\"signature\">Signature</Label>\n                    <Button\n                      outline\n                      color=\"danger\"\n                      className=\"clear-button\"\n                      onClick={clearSignaturePad}\n                    >\n                      <i className=\"far fa-times\" />\n                    </Button>\n                  </div>\n                  {workOrder.status !== \"In Review\" ? (\n                    <SignatureCanvas\n                      canvasProps={{ className: \"signature-pad\" }}\n                      ref={(ref) => {\n                        sigPad = ref;\n                      }}\n                    />\n                  ) : (\n                    <img src={workOrder.signature} alt=\"Signature\" />\n                  )}\n                </FormGroup>\n              )\n            ) : null}\n            {!workOrder.signature ? (\n              hideEditButton ? null : (\n                <FormGroup className=\"submit-button edit-button\">\n                  <Button outline color=\"success\" onClick={handleEditWorkOrder}>\n                    Save Work Order\n                  </Button>\n                </FormGroup>\n              )\n            ) : null}\n            {!workOrder.signature ? (\n              hideSubmitForSignatureButton ? null : (\n                <FormGroup className=\"submit-button\">\n                  <Button color=\"success\" onClick={handleSubmitForSignature}>\n                    Submit for Signature\n                  </Button>\n                </FormGroup>\n              )\n            ) : null}\n            {!workOrder.signature ? (\n              hideSubmitForReviewButton ? null : (\n                <FormGroup className=\"submit-button\">\n                  <Button color=\"success\" onClick={handleSubmitForReview}>\n                    Submit for Review\n                  </Button>\n                </FormGroup>\n              )\n            ) : null}\n            {workOrder.signature ? (\n              <FormGroup>\n                <Label for=\"signature\">Signature</Label>\n                <img\n                  src={workOrder.signature}\n                  alt=\"Signature\"\n                  className=\"signature-img\"\n                />\n              </FormGroup>\n            ) : null}\n            {workOrder.signature ? (\n              workOrder.serviceManager === currentUser.uid ? (\n                workOrder.status === \"In Review\" ? (\n                  <FormGroup className=\"submit-button edit-button\">\n                    <Button\n                      outline\n                      color=\"success\"\n                      onClick={handleEditWorkOrder}\n                    >\n                      Save Work Order\n                    </Button>\n                  </FormGroup>\n                ) : null\n              ) : null\n            ) : null}\n            {workOrder.signature ? (\n              workOrder.serviceManager === currentUser.uid ? (\n                workOrder.status === \"In Review\" ? (\n                  <FormGroup className=\"submit-button\">\n                    <Button color=\"success\" onClick={handleSubmitForBilling}>\n                      Submit for Billing\n                    </Button>\n                  </FormGroup>\n                ) : null\n              ) : null\n            ) : null}\n            {workOrder.signature ? (\n              workOrder.officeManager === currentUser.uid ? (\n                workOrder.status === \"In Billing\" ? (\n                  <FormGroup className=\"submit-button edit-button\">\n                    <Button\n                      outline\n                      color=\"success\"\n                      onClick={handleEditWorkOrder}\n                    >\n                      Save Work Order\n                    </Button>\n                  </FormGroup>\n                ) : null\n              ) : null\n            ) : null}\n            {workOrder.signature ? (\n              workOrder.officeManager === currentUser.uid ? (\n                workOrder.status === \"In Billing\" ? (\n                  <FormGroup className=\"submit-button\">\n                    <Button color=\"success\" onClick={handleCloseWorkOrder}>\n                      Close Work Order\n                    </Button>\n                  </FormGroup>\n                ) : null\n              ) : null\n            ) : null}\n          </Form>\n        </div>\n      ) : null}\n      <Modal isOpen={isOpenServiceModal} toggle={toggleServiceModal}>\n        <ModalHeader toggle={toggleServiceModal}>Add Service</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitService}>\n            <div className=\"equipment-div\">\n              <FormGroup>\n                <Label for=\"make\">Make</Label>\n                <Input\n                  type=\"text\"\n                  name=\"make\"\n                  onChange={handleChangeService}\n                  invalid={serviceErrors.make ? true : false}\n                />\n                <FormFeedback>{serviceErrors.make}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"type\">Type</Label>\n                <Input\n                  type=\"text\"\n                  name=\"type\"\n                  onChange={handleChangeService}\n                  invalid={serviceErrors.type ? true : false}\n                />\n                <FormFeedback>{serviceErrors.type}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"equipment-div\">\n              <FormGroup>\n                <Label for=\"model\">Model</Label>\n                <Input\n                  type=\"text\"\n                  name=\"model\"\n                  onChange={handleChangeService}\n                  invalid={serviceErrors.model ? true : false}\n                />\n                <FormFeedback>{serviceErrors.model}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"serialNumber\">Serial Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"serialNumber\"\n                  onChange={handleChangeService}\n                  invalid={serviceErrors.serialNumber ? true : false}\n                />\n                <FormFeedback>{serviceErrors.serialNumber}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"bayNumber\">Bay Number</Label>\n              <Input\n                type=\"text\"\n                name=\"bayNumber\"\n                onChange={handleChangeService}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"serviceDone\">What work was done?</Label>\n              <Input\n                type=\"textarea\"\n                name=\"serviceDone\"\n                onChange={handleChangeService}\n                invalid={serviceErrors.serviceDone ? true : false}\n              />\n              <FormFeedback>{serviceErrors.serviceDone}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"billableHours\">Billable Hours</Label>\n              <Input\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                step=\"0.5\"\n                name=\"billableHours\"\n                onChange={handleChangeService}\n                invalid={serviceErrors.billableHours ? true : false}\n              />\n              <FormFeedback>{serviceErrors.billableHours}</FormFeedback>\n            </FormGroup>\n            {service.partsUsed.length > 0 ? (\n              <div className=\"part-div\">\n                <h5>Parts Used</h5>\n                <Table hover size=\"sm\" className=\"part-table\">\n                  <thead>\n                    <th>Quantity</th>\n                    <th>Description</th>\n                    <th>Part Number</th>\n                    <th>Images</th>\n                  </thead>\n                  <tbody>\n                    {service.partsUsed.map((part) => (\n                      <tr>\n                        <td scope=\"row\">{part.quantity}</td>\n                        <td>{part.partDescription}</td>\n                        <td>{part.partNumber}</td>\n                        <td>{part.images}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            ) : null}\n            {service.partsNeeded.length > 0 ? (\n              <div className=\"part-div\">\n                <h5>Parts Needed</h5>\n                <Table hover size=\"sm\" className=\"part-table\">\n                  <thead>\n                    <th>Quantity</th>\n                    <th>Description</th>\n                    <th>Part Number</th>\n                    <th>Images</th>\n                  </thead>\n                  <tbody>\n                    {service.partsNeeded.map((part) => (\n                      <tr>\n                        <td scope=\"row\">{part.quantity}</td>\n                        <td>{part.partDescription}</td>\n                        <td>{part.partNumber}</td>\n                        <td>{part.images}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            ) : null}\n            <FormGroup className=\"parts-group\">\n              <Button outline color=\"success\" onClick={togglePartUsed}>\n                Add Part Used\n              </Button>\n              <Button outline color=\"danger\" onClick={togglePartNeeded}>\n                Add Part Needed\n              </Button>\n            </FormGroup>\n            <FormGroup>\n              <Label>Picture(s)</Label>\n              <Input\n                multiple\n                type=\"file\"\n                accept=\"image/*\"\n                capture=\"environment\"\n                name=\"images\"\n                onChange={handleChangeService}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmitService}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenPartUsed} toggle={togglePartUsed}>\n        <ModalHeader toggle={togglePartUsed}>Add Part Used</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitPartUsed}>\n            <FormGroup>\n              <Label>Quantity</Label>\n              <Input\n                type=\"text\"\n                name=\"quantity\"\n                onChange={handleChangePartUsed}\n                invalid={partUsedErrors.quantity ? true : false}\n              />\n              <FormFeedback>{partUsedErrors.quantity}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Part Description</Label>\n              <Input\n                type=\"text\"\n                name=\"partDescription\"\n                onChange={handleChangePartUsed}\n                invalid={partUsedErrors.partDescription ? true : false}\n              />\n              <FormFeedback>{partUsedErrors.partDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Part Number</Label>\n              <Input\n                type=\"text\"\n                name=\"partNumber\"\n                onChange={handleChangePartUsed}\n                invalid={partUsedErrors.partNumber ? true : false}\n              />\n              <FormFeedback>{partUsedErrors.partNumber}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Picture(s)</Label>\n              <Input\n                multiple\n                type=\"file\"\n                accept=\"image/*\"\n                capture=\"environment\"\n                name=\"images\"\n                onChange={handleChangePartUsed}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmitPartUsed}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenPartNeeded} toggle={togglePartNeeded}>\n        <ModalHeader toggle={togglePartNeeded}>Add Part Needed</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitPartNeeded}>\n            <FormGroup>\n              <Label>Quantity</Label>\n              <Input\n                type=\"text\"\n                name=\"quantity\"\n                onChange={handleChangePartNeeded}\n                invalid={partNeededErrors.quantity ? true : false}\n              />\n              <FormFeedback>{partNeededErrors.quantity}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Part Description</Label>\n              <Input\n                type=\"text\"\n                name=\"partDescription\"\n                onChange={handleChangePartNeeded}\n                invalid={partNeededErrors.partDescription ? true : false}\n              />\n              <FormFeedback>{partNeededErrors.partDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Part Number</Label>\n              <Input\n                type=\"text\"\n                name=\"partNumber\"\n                onChange={handleChangePartNeeded}\n                invalid={partNeededErrors.partNumber ? true : false}\n              />\n              <FormFeedback>{partNeededErrors.partNumber}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label>Picture(s)</Label>\n              <Input\n                multiple\n                type=\"file\"\n                accept=\"image/*\"\n                capture=\"environment\"\n                name=\"images\"\n                onChange={handleChangePartNeeded}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmitPartNeeded}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={editPunchOpen} toggle={toggleEditPunch}>\n        <ModalHeader toggle={toggleEditPunch}>Edit Time</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={submitTimeChange}>\n            <Label>Edit to correct total time accrued on job</Label>\n            <div>\n              <FormGroup>\n                <Label>Hours</Label>\n                <Input\n                  type=\"number\"\n                  name=\"hours\"\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"1\"\n                  onChange={handleHourChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>Minutes</Label>\n                <Input\n                  type=\"number\"\n                  name=\"minutes\"\n                  min=\"0\"\n                  max=\"59\"\n                  step=\"1\"\n                  onChange={handleMinuteChange}\n                />\n              </FormGroup>\n            </div>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={submitTimeChange}>\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={editServiceOpen} toggle={toggleEditService}>\n        <ModalHeader toggle={toggleEditService}>Edit Service</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={submitServiceEditChange}>\n            <div className=\"equipment-div\">\n              <FormGroup>\n                <Label for=\"make\">Make</Label>\n                <Input\n                  type=\"text\"\n                  name=\"make\"\n                  value={currentService && currentService.make}\n                  onChange={handleServiceEditChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"type\">Type</Label>\n                <Input\n                  type=\"text\"\n                  name=\"type\"\n                  value={currentService && currentService.type}\n                  onChange={handleServiceEditChange}\n                />\n              </FormGroup>\n            </div>\n            <div className=\"equipment-div\">\n              <FormGroup>\n                <Label for=\"model\">Model</Label>\n                <Input\n                  type=\"text\"\n                  name=\"model\"\n                  value={currentService && currentService.model}\n                  onChange={handleServiceEditChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"serialNumber\">Serial Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"serialNumber\"\n                  value={currentService && currentService.serialNumber}\n                  onChange={handleServiceEditChange}\n                />\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"bayNumber\">Bay Number</Label>\n              <Input\n                type=\"text\"\n                name=\"bayNumber\"\n                value={currentService && currentService.bayNumber}\n                onChange={handleServiceEditChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"serviceDone\">What work was done?</Label>\n              <Input\n                type=\"textarea\"\n                name=\"serviceDone\"\n                value={currentService && currentService.serviceDone}\n                onChange={handleServiceEditChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"billableHours\">Billable Hours</Label>\n              <Input\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                step=\"0.5\"\n                name=\"billableHours\"\n                value={currentService && currentService.billableHours}\n                onChange={handleServiceEditChange}\n              />\n            </FormGroup>\n            {service.partsUsed.length > 0 ? (\n              <div className=\"part-div\">\n                <h5>Parts Used</h5>\n                <Table hover size=\"sm\" className=\"part-table\">\n                  <thead>\n                    <th>Quantity</th>\n                    <th>Description</th>\n                    <th>Part Number</th>\n                    <th>Images</th>\n                  </thead>\n                  <tbody>\n                    {service.partsUsed.map((part) => (\n                      <tr>\n                        <td scope=\"row\">{part.quantity}</td>\n                        <td>{part.partDescription}</td>\n                        <td>{part.partNumber}</td>\n                        <td>{part.images}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            ) : null}\n            {service.partsNeeded.length > 0 ? (\n              <div className=\"part-div\">\n                <h5>Parts Needed</h5>\n                <Table hover size=\"sm\" className=\"part-table\">\n                  <thead>\n                    <th>Quantity</th>\n                    <th>Description</th>\n                    <th>Part Number</th>\n                    <th>Images</th>\n                  </thead>\n                  <tbody>\n                    {service.partsNeeded.map((part) => (\n                      <tr>\n                        <td scope=\"row\">{part.quantity}</td>\n                        <td>{part.partDescription}</td>\n                        <td>{part.partNumber}</td>\n                        <td>{part.images}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            ) : null}\n            <FormGroup className=\"parts-group\">\n              <Button outline color=\"success\" onClick={togglePartUsed}>\n                Add Part Used\n              </Button>\n              <Button outline color=\"danger\" onClick={togglePartNeeded}>\n                Add Part Needed\n              </Button>\n            </FormGroup>\n            <FormGroup>\n              <Label>Picture(s)</Label>\n              <Input\n                multiple\n                type=\"file\"\n                accept=\"image/*\"\n                capture=\"environment\"\n                name=\"images\"\n                value={currentService && currentService.images}\n                onChange={handleServiceEditChange}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={submitServiceEditChange}>Save</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default WorkOrder;\n","import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_WORK_ORDER_START = \"GET_WORK_ORDER_START\";\nexport const GET_WORK_ORDER_SUCCESS = \"GET_WORK_ORDER_SUCCESS\";\nexport const GET_WORK_ORDER_FAILURE = \"GET_WORK_ORDER_FAILURE\";\n\nexport const getWorkOrder = (jobId) => async (dispatch) => {\n  dispatch({ type: GET_WORK_ORDER_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .get(`${dbUrl}/work_order/${jobId}`)\n    .then((res) => {\n      console.log(res.data);\n      dispatch({\n        type: GET_WORK_ORDER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_WORK_ORDER_FAILURE,\n        payload: err,\n      });\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Table, Card, CardHeader, CardBody, CardFooter } from \"reactstrap\";\nimport { getCustomers } from \"../../actions/getCustomers\";\n\nimport \"../../styles/customer.scss\";\n\nconst Customers = () => {\n  const [customers, setCustomers] = useState([]);\n  const fetchCustomers = useSelector(\n    (state) => state.getCustomersReducer.customers\n  );\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      dispatch(getCustomers());\n  }, []);\n\n  useEffect(() => {\n    setCustomers(fetchCustomers.customers);\n  }, [getCustomers]);\n\n  const handleClick = (e, customer) => {\n    const customerId = customer.userId;\n    history.push(`customers/${customerId}`);\n  };\n\n  return (\n    <div className=\"content-page\">\n      <h1>Customers</h1>\n      <Table hover className=\"customer-table\">\n        <thead>\n          <tr className=\"table-header\">\n            <td>Contact</td>\n            <td>Address</td>\n            <td>Industry</td>\n          </tr>\n        </thead>\n        <tbody>\n          {customers\n            ? customers.map((customer) => (\n                <tr onClick={(e) => handleClick(e, customer)}>\n                  <td>{customer.businessName}</td>\n                  <td>\n                    {customer.shopAddress.address}, {customer.shopAddress.city},{\" \"}\n                    {customer.shopAddress.state} {customer.shopAddress.zipcode}\n                  </td>\n                  <td>{customer.industry}</td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Customers;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Form,\n  FormGroup,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport { getCustomer } from \"../../actions/getCustomer\";\nimport { editCustomer } from \"../../actions/editCustomer\";\n\nimport \"../../styles/customer.scss\";\n\nconst InfoTab = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(\n    (state) => state.getCustomerReducer.customer\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [editedCustomer, setEditedCustomer] = useState({\n    businessName: \"\",\n    industry: \"\",\n    primaryContact: {\n      firstName: \"\",\n      lastName: \"\",\n    },\n    billingContact: {\n      firstName: \"\",\n      lastName: \"\",\n    },\n    primaryOfficeNumber: \"\",\n    primaryExt: \"\",\n    primaryCellNumber: \"\",\n    primaryEmail: \"\",\n    primaryJobTitle: \"\",\n    billingOfficeNumber: \"\",\n    billingExt: \"\",\n    billingCellNumber: \"\",\n    billingEmail: \"\",\n    billingJobTitle: \"\",\n    shopAddress: {\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\",\n    },\n    billingAddress: {\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\",\n    },\n    noBillingContact: false,\n  });\n  const success = useSelector((state) => state.editCustomerReducer.success);\n  const [errors, setErrors] = useState({});\n  const getErrorsFromState = useSelector(\n    (state) => state.editCustomerReducer.errors\n  );\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomer(customerId));\n  }, []);\n\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n    }\n  }, [getCustomerFromState]);\n\n  useEffect(() => {\n    if (success) {\n      setErrors({});\n      toggle();\n    }\n  }, [success]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    setErrors(getErrorsFromState);\n  }, [getErrorsFromState]);\n\n  const toggle = () => {\n    if (!isOpen) {\n      setEditedCustomer({\n        businessName: customer.businessName,\n        industry: customer.industry,\n        primaryContact: {\n          firstName: customer.primaryContact.firstName,\n          lastName: customer.primaryContact.lastName,\n        },\n        billingContact: {\n          firstName: customer.billingContact.firstName,\n          lastName: customer.billingContact.lastName,\n        },\n        primaryOfficeNumber: customer.primaryOfficeNumber,\n        primaryExt: customer.primaryExt,\n        primaryCellNumber: customer.primaryCellNumber,\n        primaryEmail: customer.primaryEmail,\n        primaryJobTitle: customer.primaryJobTitle,\n        billingOfficeNumber: customer.billingOfficeNumber,\n        billingExt: customer.billingExt,\n        billingCellNumber: customer.billingCellNumber,\n        billingEmail: customer.billingEmail,\n        billingJobTitle: customer.billingJobTitle,\n        shopAddress: {\n          address: customer.shopAddress.address,\n          city: customer.shopAddress.city,\n          state: customer.shopAddress.state,\n          zipcode: customer.shopAddress.zipcode,\n        },\n        billingAddress: {\n          address: customer.billingAddress.address,\n          city: customer.billingAddress.city,\n          state: customer.billingAddress.state,\n          zipcode: customer.billingAddress.zipcode,\n        },\n        userId: customer.userId,\n      });\n    }\n    if (isOpen) {\n      setEditedCustomer({\n        businessName: \"\",\n        industry: \"\",\n        primaryContact: {\n          firstName: \"\",\n          lastName: \"\",\n        },\n        billingContact: {\n          firstName: \"\",\n          lastName: \"\",\n        },\n        primaryOfficeNumber: \"\",\n        primaryExt: \"\",\n        primaryCellNumber: \"\",\n        primaryEmail: \"\",\n        primaryJobTitle: \"\",\n        billingOfficeNumber: \"\",\n        billingExt: \"\",\n        billingCellNumber: \"\",\n        billingEmail: \"\",\n        billingJobTitle: \"\",\n        shopAddress: {\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\",\n        },\n        billingAddress: {\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\",\n        },\n        noBillingContact: false,\n      });\n      setErrors({});\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handlePrimaryContactChange = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      primaryContact: {\n        ...editedCustomer.primaryContact,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const handleBillingContactChange = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      billingContact: {\n        ...editedCustomer.billingContact,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const handleShopAddressChange = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      shopAddress: {\n        ...editedCustomer.shopAddress,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const handleBillingAddressChange = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      billingAddress: {\n        ...editedCustomer.billingAddress,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const toggleBillingContact = (e) => {\n    setEditedCustomer({\n      ...editedCustomer,\n      noBillingContact: !editedCustomer.noBillingContact,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(editCustomer(editedCustomer));\n  };\n\n  return (\n    <div className=\"customer-info-page-div\">\n      <Form className=\"customer-page-info-tab\">\n        <div className=\"customer-page-contacts\">\n          <FormGroup>\n            <h3>Primary Contact</h3>\n            <div>\n              <p>\n                Name:{\" \"}\n                <span>\n                  {customer.primaryContact\n                    ? customer.primaryContact.firstName\n                    : null}{\" \"}\n                  {customer.primaryContact\n                    ? customer.primaryContact.lastName\n                    : null}\n                </span>\n              </p>\n              <p>\n                Job Title: <span>{customer.primaryJobTitle}</span>\n              </p>\n              <p>\n                Office:{\" \"}\n                <a\n                  href={\n                    customer.primaryExt\n                      ? `tel:+1-${customer.primaryOfficeNumber},${customer.primaryExt}`\n                      : `tel:+1-${customer.primaryOfficeNumber}`\n                  }\n                >\n                  {customer.primaryExt\n                    ? `${customer.primaryOfficeNumber}, .ext ${customer.primaryExt}`\n                    : `${customer.primaryOfficeNumber}`}\n                </a>\n              </p>\n              <p>\n                Cell:{\" \"}\n                <a href={`tel:+1-${customer.primaryCellNumber}`}>\n                  {customer.primaryCellNumber}\n                </a>\n              </p>\n              <p>\n                Email:{\" \"}\n                <a href={`mailto:${customer.primaryEmail}`}>\n                  {customer.primaryEmail}\n                </a>\n              </p>\n            </div>\n          </FormGroup>\n          <FormGroup>\n            <h3>Billing Contact</h3>\n            <div>\n              <p>\n                Name:{\" \"}\n                <span>\n                  {customer.billingContact\n                    ? customer.billingContact.firstName\n                    : null}{\" \"}\n                  {customer.billingContact\n                    ? customer.billingContact.lastName\n                    : null}\n                </span>\n              </p>\n              <p>\n                Job Title: <span>{customer.billingJobTitle}</span>\n              </p>\n              <p>\n                Office:{\" \"}\n                <a\n                  href={\n                    customer.billingExt\n                      ? `tel:+1-${customer.billingOfficeNumber},${customer.billingExt}`\n                      : `tel:+1-${customer.billingOfficeNumber}`\n                  }\n                >\n                  {customer.billingExt\n                    ? `${customer.billingOfficeNumber}, .ext ${customer.billingExt}`\n                    : `${customer.billingOfficeNumber}`}\n                </a>\n              </p>\n              <p>\n                Cell:{\" \"}\n                <a href={`tel:+1-${customer.billingCellNumber}`}>\n                  {customer.billingCellNumber}\n                </a>\n              </p>\n              <p>\n                Email:{\" \"}\n                <a href={`mailto:${customer.billingEmail}`}>\n                  {customer.billingEmail}\n                </a>\n              </p>\n            </div>\n          </FormGroup>\n        </div>\n        <div className=\"customer-page-addresses\">\n          <FormGroup>\n            <h3>Shop Address</h3>\n            <a\n              href={`http://maps.google.com/?q=${\n                customer.shopAddress ? customer.shopAddress.address : null\n              }, ${customer.shopAddress ? customer.shopAddress.city : null}, ${\n                customer.shopAddress ? customer.shopAddress.state : null\n              } ${customer.shopAddress ? customer.shopAddress.zipcode : null}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"address-link\"\n            >\n              <p>\n                {customer.shopAddress ? customer.shopAddress.address : null},\n              </p>\n              <p>\n                {customer.shopAddress ? customer.shopAddress.city : null},{\" \"}\n                {customer.shopAddress ? customer.shopAddress.state : null}\n              </p>\n              <p>\n                {customer.shopAddress ? customer.shopAddress.zipcode : null}\n              </p>\n            </a>\n          </FormGroup>\n          <FormGroup>\n            <h3>Billing Address</h3>\n            <a\n              href={`http://maps.google.com/?q=${\n                customer.billingAddress ? customer.billingAddress.address : null\n              }, ${\n                customer.billingAddress ? customer.billingAddress.city : null\n              }, ${\n                customer.billingAddress ? customer.billingAddress.state : null\n              } ${\n                customer.billingAddress ? customer.billingAddress.zipcode : null\n              }`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"address-link\"\n            >\n              <p>\n                {customer.billingAddress\n                  ? customer.billingAddress.address\n                  : null}\n                ,\n              </p>\n              <p>\n                {customer.billingAddress ? customer.billingAddress.city : null},{\" \"}\n                {customer.billingAddress ? customer.billingAddress.state : null}\n              </p>\n              <p>\n                {customer.billingAddress\n                  ? customer.billingAddress.zipcode\n                  : null}\n              </p>\n            </a>\n          </FormGroup>\n        </div>\n      </Form>\n      <Button\n        outline\n        color=\"success\"\n        className=\"info-edit-button\"\n        onClick={toggle}\n      >\n        <i className=\"fad fa-pen\" /> Edit\n      </Button>\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Edit Customer</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit} className=\"add-customer-form\">\n            <FormGroup>\n              <Label for=\"businessName\">Business Name</Label>\n              <Input\n                type=\"text\"\n                name=\"businessName\"\n                onChange={handleChange}\n                value={editedCustomer.businessName}\n                invalid={errors.businessName ? true : false}\n              />\n              <FormFeedback>{errors.businessName}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"industry\">Industry</Label>\n              <Input\n                type=\"text\"\n                name=\"industry\"\n                onChange={handleChange}\n                value={editedCustomer.industry}\n                invalid={errors.industry ? true : false}\n              />\n              <FormFeedback>{errors.industry}</FormFeedback>\n            </FormGroup>\n            <Label for=\"primary-contact\" className=\"form-label\">\n              Primary Contact\n            </Label>\n            <div className=\"primary-contact-name\">\n              <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={handlePrimaryContactChange}\n                  value={\n                    editedCustomer.primaryContact\n                      ? editedCustomer.primaryContact.firstName\n                      : null\n                  }\n                  invalid={\n                    errors.primaryContact\n                      ? errors.primaryContact.firstName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.primaryContact\n                    ? errors.primaryContact.firstName\n                      ? errors.primaryContact.firstName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  onChange={handlePrimaryContactChange}\n                  value={\n                    editedCustomer.primaryContact\n                      ? editedCustomer.primaryContact.lastName\n                      : null\n                  }\n                  invalid={\n                    errors.primaryContact\n                      ? errors.primaryContact.lastName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.primaryContact\n                    ? errors.primaryContact.lastName\n                      ? errors.primaryContact.lastName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"primary-phone-div\">\n              <div className=\"primary-office-phone-div\">\n                <FormGroup className=\"primary-number\">\n                  <Label for=\"primaryOfficeNumber\">Office Phone Number</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"primaryOfficeNumber\"\n                    placeholder=\"XXX-XXX-XXXX\"\n                    onChange={handleChange}\n                    value={editedCustomer.primaryOfficeNumber}\n                    invalid={errors.primaryOfficeNumber ? true : false}\n                  />\n                  <FormFeedback>{errors.primaryOfficeNumber}</FormFeedback>\n                </FormGroup>\n                <FormGroup className=\"primary-ext\">\n                  <Label for=\"primaryExt\">ext.</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"primaryExt\"\n                    onChange={handleChange}\n                    value={editedCustomer.primaryExt}\n                  />\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"primaryCellNumber\">Cell Phone Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"primaryCellNumber\"\n                  placeholder=\"XXX-XXX-XXXX\"\n                  onChange={handleChange}\n                  value={editedCustomer.primaryCellNumber}\n                  invalid={errors.primaryCellNumber ? true : false}\n                />\n                <FormFeedback>{errors.primaryCellNumber}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"primary-email-jobTitle-div\">\n              <FormGroup>\n                <Label for=\"primaryEmail\">Email</Label>\n                <Input\n                  type=\"text\"\n                  name=\"primaryEmail\"\n                  placeholder=\"example@example.com\"\n                  onChange={handleChange}\n                  value={editedCustomer.primaryEmail}\n                  invalid={errors.primaryEmail ? true : false}\n                />\n                <FormFeedback>{errors.primaryEmail}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"primaryJobTitle\">Job Title</Label>\n                <Input\n                  type=\"text\"\n                  name=\"primaryJobTitle\"\n                  onChange={handleChange}\n                  value={editedCustomer.primaryJobTitle}\n                  invalid={errors.primaryJobTitle ? true : false}\n                />\n                <FormFeedback>{errors.primaryJobTitle}</FormFeedback>\n              </FormGroup>\n            </div>\n            <Label for=\"shop-address\" className=\"form-label\">\n              Shop Address\n            </Label>\n            <div className=\"shop-address\">\n              <div className=\"shop-address-city-div\">\n                <FormGroup>\n                  <Label for=\"address\">Address</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"address\"\n                    onChange={handleShopAddressChange}\n                    value={\n                      editedCustomer.shopAddress\n                        ? editedCustomer.shopAddress.address\n                        : null\n                    }\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.address\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.address\n                        ? errors.shopAddress.address\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    onChange={handleShopAddressChange}\n                    value={\n                      editedCustomer.shopAddress\n                        ? editedCustomer.shopAddress.city\n                        : null\n                    }\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.city\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.city\n                        ? errors.shopAddress.city\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n              <div className=\"shop-state-zipcode-div\">\n                <FormGroup>\n                  <Label for=\"state\">State</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"state\"\n                    onChange={handleShopAddressChange}\n                    value={\n                      editedCustomer.shopAddress\n                        ? editedCustomer.shopAddress.state\n                        : null\n                    }\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.state\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.state\n                        ? errors.shopAddress.state\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"zipcode\">Zip Code</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"zipcode\"\n                    onChange={handleShopAddressChange}\n                    value={\n                      editedCustomer.shopAddress\n                        ? editedCustomer.shopAddress.zipcode\n                        : null\n                    }\n                    invalid={\n                      errors.shopAddress\n                        ? errors.shopAddress.zipcode\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.shopAddress\n                      ? errors.shopAddress.zipcode\n                        ? errors.shopAddress.zipcode\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n            </div>\n            <Label for=\"billing-contact\" className=\"form-label\">\n              Billing Contact\n            </Label>\n            <div className=\"billing-contact-name\">\n              <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={handleBillingContactChange}\n                  value={\n                    editedCustomer.billingContact\n                      ? editedCustomer.billingContact.firstname\n                      : null\n                  }\n                  invalid={\n                    errors.billingContact\n                      ? errors.billingContact.firstName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.billingContact\n                    ? errors.billingContact.firstName\n                      ? errors.billingContact.firstName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  onChange={handleBillingContactChange}\n                  value={\n                    editedCustomer.billingContact\n                      ? editedCustomer.billingContact.lastName\n                      : null\n                  }\n                  invalid={\n                    errors.billingContact\n                      ? errors.billingContact.lastName\n                        ? true\n                        : false\n                      : false\n                  }\n                />\n                <FormFeedback>\n                  {errors.billingContact\n                    ? errors.billingContact.lastName\n                      ? errors.billingContact.lastName\n                      : null\n                    : null}\n                </FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"billing-phone-div\">\n              <div className=\"billing-office-phone-div\">\n                <FormGroup className=\"billing-number\">\n                  <Label for=\"billingOfficeNumber\">Office Phone Number</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"billingOfficeNumber\"\n                    placeholder=\"XXX-XXX-XXXX\"\n                    onChange={handleChange}\n                    value={editedCustomer.billingOfficeNumber}\n                    invalid={errors.billingOfficeNumber ? true : false}\n                  />\n                  <FormFeedback>{errors.billingOfficeNumber}</FormFeedback>\n                </FormGroup>\n                <FormGroup className=\"billing-ext\">\n                  <Label for=\"billingExt\">ext.</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"billingExt\"\n                    onChange={handleChange}\n                    value={editedCustomer.billingExt}\n                  />\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"billingCellNumber\">Cell Phone Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"billingCellNumber\"\n                  placeholder=\"XXX-XXX-XXXX\"\n                  onChange={handleChange}\n                  value={editedCustomer.billingCellNumber}\n                  invalid={errors.billingCellNumber ? true : false}\n                />\n                <FormFeedback>{errors.billingCellNumber}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"billing-email-jobTitle-div\">\n              <FormGroup>\n                <Label for=\"billingEmail\">Email</Label>\n                <Input\n                  type=\"text\"\n                  name=\"billingEmail\"\n                  placeholder=\"example@example.com\"\n                  onChange={handleChange}\n                  value={editedCustomer.billingEmail}\n                  invalid={errors.billingEmail ? true : false}\n                />\n                <FormFeedback>{errors.billingEmail}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"billingJobTitle\">Job Title</Label>\n                <Input\n                  type=\"text\"\n                  name=\"billingJobTitle\"\n                  onChange={handleChange}\n                  value={editedCustomer.billingJobTitle}\n                  invalid={errors.billingJobTitle ? true : false}\n                />\n                <FormFeedback>{errors.billingJobTitle}</FormFeedback>\n              </FormGroup>\n            </div>\n            <Label for=\"billing-address\" className=\"form-label\">\n              Billing Address\n            </Label>\n            <div className=\"billing-address\">\n              <div className=\"billing-address-city-div\">\n                <FormGroup>\n                  <Label for=\"address\">Address</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"address\"\n                    onChange={handleBillingAddressChange}\n                    value={\n                      editedCustomer.billingAddress\n                        ? editedCustomer.billingAddress.address\n                        : null\n                    }\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.address\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.address\n                        ? errors.billingAddress.address\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    onChange={handleBillingAddressChange}\n                    value={\n                      editedCustomer.billingAddress\n                        ? editedCustomer.billingAddress.city\n                        : null\n                    }\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.city\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.city\n                        ? errors.billingAddress.city\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n              <div className=\"billing-state-zipcode-div\">\n                <FormGroup>\n                  <Label for=\"state\">State</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"state\"\n                    onChange={handleBillingAddressChange}\n                    value={\n                      editedCustomer.billingAddress\n                        ? editedCustomer.billingAddress.state\n                        : null\n                    }\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.state\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.state\n                        ? errors.billingAddress.state\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"zipcode\">Zip Code</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"zipcode\"\n                    onChange={handleBillingAddressChange}\n                    value={\n                      editedCustomer.billingAddress\n                        ? editedCustomer.billingAddress.zipcode\n                        : null\n                    }\n                    invalid={\n                      errors.billingAddress\n                        ? errors.billingAddress.zipcode\n                          ? true\n                          : false\n                        : false\n                    }\n                  />\n                  <FormFeedback>\n                    {errors.billingAddress\n                      ? errors.billingAddress.zipcode\n                        ? errors.billingAddress.zipcode\n                        : null\n                      : null}\n                  </FormFeedback>\n                </FormGroup>\n              </div>\n            </div>\n            <FormGroup className=\"checkbox-div\">\n              <Label check>\n                <Input\n                  type=\"checkbox\"\n                  value={editedCustomer.noBillingContact}\n                  onClick={toggleBillingContact}\n                />{\" \"}\n                No Billing Contact\n              </Label>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default InfoTab;\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const EDIT_CUSTOMER_START = \"EDIT_CUSTOMER_START\";\nexport const EDIT_CUSTOMER_SUCCESS = \"EDIT_CUSTOMER_SUCCESS\";\nexport const EDIT_CUSTOMER_FAILURE = \"EDIT_CUSTOMER_FAILURE\";\n\nexport const editCustomer = (data) => async (dispatch) => {\n  dispatch({ type: EDIT_CUSTOMER_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .put(`${dbUrl}/customer`, data)\n    .then(() => {\n      dispatch({\n        type: EDIT_CUSTOMER_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: EDIT_CUSTOMER_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Table,\n  Card,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { getUsers } from \"../../actions/getUsers\";\nimport { getCustomerTasks } from \"../../actions/getCustomerTasks\";\nimport { addTask } from \"../../actions/addTask\";\nimport { editTask } from \"../../actions/editTask\";\nimport { deleteTask } from \"../../actions/deleteTask\";\n\nimport \"../../styles/customer.scss\";\n\nconst TaskTab = () => {\n  const [tasks, setTasks] = useState([]);\n  const getTasksFromState = useSelector(\n    (state) => state.getCustomerTasksReducer.tasks\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [task, setTask] = useState({\n    taskDate: \"\",\n    taskTime: \"\",\n    taskDescription: \"\",\n    customerId: \"\",\n    employeeId: \"\",\n  });\n  const [isOpenEdit, setIsOpenEdit] = useState(false);\n  const [currentTask, setCurrentTask] = useState()\n  const success = useSelector((state) => state.addTaskReducer.success);\n  const [errors, setErrors] = useState({});\n  const getErrors = useSelector((state) => state.addTaskReducer.errors);\n  const [employees, setEmployees] = useState([]);\n  const employeeArray = [];\n  const getUsersFromState = useSelector((state) => state.getUsersReducer.users);\n  const editSuccess = useSelector(state => state.editTaskReducer.success);\n  const deleteSuccess = useSelector(state => state.deleteTaskReducer.success);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomerTasks(customerId));\n    dispatch(getUsers());\n    setTask({\n      ...task,\n      customerId: customerId\n    })\n  }, []);\n\n  useEffect(() => {\n    if (getTasksFromState) {\n      setTasks(getTasksFromState);\n    }\n  }, [getTasksFromState]);\n\n  useEffect(() => {\n    if (getUsersFromState.users) {\n      getUsersFromState.users.map((user) => {\n        if (user.userType === \"employee\" && user.active === true) {\n          employeeArray.push({\n            label: `${user.firstName} ${user.lastName}`,\n            value: user.userId,\n            name: \"employeeId\",\n            jobTitle: user.jobTitle,\n          });\n        }\n      });\n\n      setEmployees(employeeArray);\n    }\n  }, [getUsersFromState]);\n\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n  }, [success]);\n\n  useEffect(() => {\n    if (editSuccess || deleteSuccess) {\n      toggleEdit();\n    };\n  }, [editSuccess, deleteSuccess]);\n\n  useEffect(() => {\n    if (getErrors) {\n      setErrors(getErrors);\n    }\n  }, [getErrors]);\n\n  const dateConverter = (date) => {\n    const dateArray = date.split(\"-\");\n    return `${dateArray[1]}/${dateArray[2]}/${dateArray[0]}`;\n  };\n\n  const timeConverter = (time) => {\n    const timeArray = time.split(\":\");\n    const hour = parseInt(timeArray[0]);\n    let m;\n\n    if (hour <= 11) {\n      m = \"AM\";\n    } else {\n      m = \"PM\";\n    }\n\n    if (hour === 0) {\n      const newHour = \"12\";\n      timeArray[0] = newHour;\n    } else if (hour <= 12) {\n      const newHour = hour.toString();\n      timeArray[0] = newHour;\n    } else {\n      const newHour = (hour - 12).toString();\n      timeArray[0] = newHour;\n    }\n\n    return `${timeArray[0]}:${timeArray[1]} ${m}`;\n  };\n\n  const toggle = () => {\n    if (isOpen) {\n      setTask({\n        ...task,\n        taskDate: \"\",\n        taskTime: \"\",\n        taskDescription: \"\",\n        employeeId: \"\",\n      });\n      setErrors({});\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const toggleEdit = (e, task) => {\n    setCurrentTask(task);\n    setIsOpenEdit(!isOpenEdit);\n  };\n\n  const handleChange = (e) => {\n    setTask({\n      ...task,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditChange = (e) => {\n    setCurrentTask({\n      ...currentTask,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setTask({\n      ...task,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleEditSelectChange = (e) => {\n    setCurrentTask({\n      ...currentTask,\n      [e.name]: e.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTask(task));\n  };\n\n  const handleSubmitEdit = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(editTask(currentTask));\n  };\n\n  const handleDeleteTask = (e, currentTask) => {\n    e.preventDefault();\n    dispatch(deleteTask(currentTask.taskId))\n  };\n\n  return (\n    <div className=\"customer-page-task-tab\">\n      <Table borderless className=\"task-table-header\">\n        <thead>\n          <tr className=\"table-headers\">\n            <th>Task</th>\n            <th>Date</th>\n            <th>Time</th>\n          </tr>\n        </thead>\n      </Table>\n      {tasks\n        ? tasks.tasks\n          ? tasks.tasks.map((task) => (\n              <Card className=\"task-card\" onClick={(e) => toggleEdit(e, task)}>\n                <Table borderless className=\"task-card-table\">\n                  <tbody>\n                    <tr className=\"table-data\">\n                      <td>{task.taskDescription}</td>\n                      <td>{dateConverter(task.taskDate)}</td>\n                      <td>{timeConverter(task.taskTime)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            ))\n          : null\n        : null}\n      <Button outline color=\"success\" onClick={toggle}>\n        Add Task\n      </Button>\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <div className=\"add-task-date-div\">\n              <FormGroup>\n                <Label for=\"taskDate\">Date</Label>\n                <Input\n                  type=\"date\"\n                  name=\"taskDate\"\n                  placeholder=\"date placeholder\"\n                  onChange={handleChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"taskTime\">Time</Label>\n                <Input\n                  type=\"time\"\n                  name=\"taskTime\"\n                  placeholder=\"time placeholder\"\n                  onChange={handleChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"taskDescription\">Task Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                onChange={handleChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"employeeId\">Assigned To</Label>\n              <Select\n                name=\"employeeId\"\n                options={employees}\n                onChange={handleSelectChange}\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenEdit} toggle={toggleEdit}>\n        <ModalHeader toggle={toggleEdit}>Edit Task</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitEdit}>\n            <div className=\"add-task-date-div\">\n              <FormGroup>\n                <Label for=\"taskDate\">Date</Label>\n                <Input\n                  type=\"date\"\n                  name=\"taskDate\"\n                  placeholder=\"date placeholder\"\n                  value={currentTask ? currentTask.taskDate : null}\n                  onChange={handleEditChange}\n                  invalid={errors.taskDate ? true : false}\n                />\n                <FormFeedback>{errors.taskDate}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"taskTime\">Time</Label>\n                <Input\n                  type=\"time\"\n                  name=\"taskTime\"\n                  placeholder=\"time placeholder\"\n                  value={currentTask ? currentTask.taskTime : null}\n                  onChange={handleEditChange}\n                  invalid={errors.taskTime ? true : false}\n                />\n                <FormFeedback>{errors.taskTime}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"taskDescription\">Task Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"taskDescription\"\n                value={currentTask ? currentTask.taskDescription : null}\n                onChange={handleEditChange}\n                invalid={errors.taskDescription ? true : false}\n              />\n              <FormFeedback>{errors.taskDescription}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"employeeId\">Assigned To</Label>\n              <Select\n                name=\"employeeId\"\n                options={employees}\n                onChange={handleEditSelectChange}\n                defaultValue={\n                  currentTask ? { value: currentTask.employeeId } : null\n                }\n                className={errors.employeeId ? \"invalid\" : \"\"}\n              />\n              <Input\n                type=\"hidden\"\n                disabled\n                invalid={errors.employeeId ? true : false}\n              />\n              <FormFeedback>{errors.employeeId}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={(e) => handleSubmitEdit(e, currentTask)}>\n            Edit\n          </Button>\n          <Button color=\"success\" onClick={(e) => handleDeleteTask(e, currentTask)}>\n            Complete\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TaskTab;\n","import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_CUSTOMER_TASKS_START = \"GET_CUSTOMER_TASKS_START\";\nexport const GET_CUSTOMER_TASKS_SUCCESS = \"GET_CUSTOMER_TASKS_SUCCESS\";\nexport const GET_CUSTOMER_TASKS_FAILURE = \"GET_CUSTOMER_TASKS_FAILURE\";\n\nexport const getCustomerTasks = (customerId) => async (dispatch) => {\n  dispatch({ type: GET_CUSTOMER_TASKS_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .get(`${dbUrl}/customer_tasks/${customerId}`)\n    .then((res) => {\n      dispatch({\n        type: GET_CUSTOMER_TASKS_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_CUSTOMER_TASKS_FAILURE,\n        payload: err,\n      });\n    });\n};\n","import React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\n\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"../../styles/task.scss\";\n\nconst AppointmentTab = () => {\n  return (\n    <div className=\"calendar-page customer-calendar-page\">\n      <FullCalendar\n        plugins={[\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin,\n          bootstrapPlugin,\n        ]}\n        initialView=\"dayGridMonth\"\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        }}\n        themeSystem=\"bootstrap\"\n        height=\"auto\"\n      />\n    </div>\n  );\n};\n\nexport default AppointmentTab;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Card,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { addNote } from \"../../actions/addNote\";\nimport { getCustomerNotes } from \"../../actions/getCustomerNotes\";\n\nconst NoteTab = () => {\n  const [notes, setNotes] = useState([]);\n  const getNotesFromState = useSelector(\n    (state) => state.getCustomerNotesReducer.notes\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [note, setNote] = useState({\n    note: \"\",\n    createdBy: \"\",\n    createdOnDate: \"\",\n    createdAtTime: \"\",\n    customerId: \"\",\n  });\n  const success = useSelector((state) => state.addNoteReducer.success);\n  const { currentUser } = useAuth();\n  const [flag, setFlag] = useState(false);\n  const [employees, setEmployees] = useState();\n  const fetchUsers = useSelector((state) => state.getUsersReducer.users);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    setNote({\n      ...note,\n      customerId: customerId,\n    });\n    dispatch(getCustomerNotes(customerId));\n  }, []);\n\n  useEffect(() => {\n    if (getNotesFromState) {\n      setNotes(getNotesFromState);\n    }\n  }, [getNotesFromState]);\n\n  useEffect(() => {\n    if (flag) {\n      dispatch(addNote(note));\n    }\n  }, [flag]);\n\n  useEffect(() => {\n    if (success) {\n      toggle();\n    }\n  }, [success]);\n\n  useEffect(() => {\n    const array = [];\n\n    if (fetchUsers.users) {\n      fetchUsers.users.forEach((user) => {\n        if (user.userType === \"employee\" && user.active === true) {\n          array.push(user);\n        }\n      });\n    }\n    setEmployees(array);\n  }, [fetchUsers]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setNote({\n        note: \"\",\n        createdOnDate: \"\",\n        createdAtTime: \"\",\n        createdBy: \"\",\n      });\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const employeeFinder = (createdBy) => {\n    var name;\n\n    employees.forEach((employee) => {\n      if (employee.userId === createdBy) {\n        name = `${employee.firstName} ${employee.lastName}`\n      }\n    });\n    return name;\n  };\n\n  const handleChange = (e) => {\n    setNote({\n      ...note,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setNote({\n      ...note,\n      createdOnDate: new Date().toLocaleDateString(),\n      createdAtTime: new Date().toLocaleTimeString(),\n      createdBy: currentUser.uid,\n    });\n    setFlag(true);\n  };\n\n  return (\n    <div className=\"customer-page-note-tab\">\n      {notes\n        ? notes.notes\n          ? notes.notes.map((note) => (\n              <Card className=\"note-card\">\n                <p>{note.note}</p>\n                <div>\n                  <p>\n                    Created By: <span>{employeeFinder(note.createdBy)}</span>\n                  </p>\n                  <p>\n                    Created: {note.createdOnDate} @ {note.createdAtTime}\n                  </p>{\" \"}\n                  {/* Fix time format */}\n                </div>\n              </Card>\n            ))\n          : null\n        : null}\n      <Button outline color=\"success\" onClick={toggle}>\n        Add Note\n      </Button>\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Note</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"note\">Note</Label>\n              <Input type=\"textarea\" name=\"note\" onChange={handleChange} />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NoteTab;\n","import { dbUrl } from \"./index\";\nimport axiosWithAuth from \"../contexts/withAuth\";\n\nexport const GET_CUSTOMER_NOTES_START = \"GET_CUSTOMER_NOTES_START\";\nexport const GET_CUSTOMER_NOTES_SUCCESS = \"GET_CUSTOMER_NOTES_SUCCESS\";\nexport const GET_CUSTOMER_NOTES_FAILURE = \"GET_CUSTOMER_NOTES_FAILURE\";\n\nexport const getCustomerNotes = (customerId) => async (dispatch) => {\n  dispatch({ type: GET_CUSTOMER_NOTES_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .get(`${dbUrl}/notes/${customerId}`)\n    .then((res) => {\n      dispatch({\n        type: GET_CUSTOMER_NOTES_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_CUSTOMER_NOTES_FAILURE,\n        payload: err,\n      });\n    });\n};\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const ADD_NOTE_START = \"ADD_NOTE_START\";\nexport const ADD_NOTE_SUCCESS = \"ADD_NOTE_SUCCESS\";\nexport const ADD_NOTE_FAILURE = \"ADD_NOTE_FAILURE\";\n\nexport const addNote = (note) => async (dispatch) => {\n  dispatch({ type: ADD_NOTE_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .post(`${dbUrl}/notes`, note)\n    .then(() => {\n      dispatch({\n        type: ADD_NOTE_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ADD_NOTE_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Table,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport { getCustomer } from \"../../actions/getCustomer\";\nimport { addEmployeeToCustomer } from \"../../actions/addEmployeeToCustomer\";\n\nimport \"../../styles/customer.scss\";\n\nconst EmployeeTab = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(\n    (state) => state.getCustomerReducer.customer\n  );\n  const [isOpen, setIsOpen] = useState(false);\n  const [employee, setEmployee] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    jobTitle: \"\",\n    officeNumber: \"\",\n    officeExt: \"\",\n    cellNumber: \"\",\n    email: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [flag, setFlag] = useState(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomer(customerId));\n  }, []);\n\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n    }\n  }, [getCustomerFromState]);\n\n  useEffect(() => {\n    if (flag) {\n      setFlag(false);\n      dispatch(addEmployeeToCustomer(customer));\n      toggle();\n    }\n  }, [flag]);\n\n  const toggle = () => {\n    if (isOpen) {\n      setEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        officeNumber: \"\",\n        officeExt: \"\",\n        cellNumber: \"\",\n        email: \"\",\n      });\n      setErrors({});\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const handleChange = (e) => {\n    setEmployee({\n      ...employee,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let errorsObject = {};\n\n    if (employee.firstName === \"\") {\n      errorsObject.firstName = \"Must not be empty\";\n    }\n    if (employee.lastName === \"\") {\n      errorsObject.lastName = \"Must not be empty\";\n    }\n    if (employee.jobTitle === \"\") {\n      errorsObject.jobTitle = \"Must not be empty\";\n    }\n    if (employee.officeNumber === \"\" && employee.cellNumber === \"\") {\n      errorsObject.officeNumber = \"Must not be empty\";\n      errorsObject.cellNumber = \"Must not be empty\";\n    } else if (\n      employee.officeNumber !== \"\" &&\n      !employee.officeNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)\n    ) {\n      errorsObject.officeNumber = \"Must be a valid phone number\";\n    } else if (\n      employee.cellNumber !== \"\" &&\n      !employee.cellNumber.match(/^[0-9]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}$/)\n    ) {\n      errorsObject.cellNumber = \"Must be a valid phone number\";\n    }\n    if (employee.email === \"\") {\n      errorsObject.email = \"Must not be empty\";\n    } else if (\n      !employee.email.match(\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      )\n    ) {\n      errorsObject.email = \"Must be a valid email address\";\n    }\n\n    setErrors(errorsObject);\n\n    if (Object.keys(errorsObject).length === 0) {\n      if (customer.employees.length === 0) {\n        setFlag(true);\n        setCustomer({\n          ...customer,\n          employees: [employee],\n        });\n      } else {\n        setFlag(true);\n        setCustomer({\n          ...customer,\n          employees: [...customer.employees, employee],\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"employees-tab\">\n      <Table size=\"sm\" hover className=\"customer-page-employees-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Job Title</th>\n            <th>Office Number</th>\n            <th>Cell Number</th>\n            <th>Email</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              {customer.primaryContact\n                ? customer.primaryContact.firstName\n                : null}{\" \"}\n              {customer.primaryContact\n                ? customer.primaryContact.lastName\n                : null}\n            </td>\n            <td>{customer.primaryJobTitle}</td>\n            <td>\n              <a\n                href={\n                  customer.primaryExt\n                    ? `tel:+1-${customer.primaryOfficeNumber},${customer.primaryExt}`\n                    : `tel:+1-${customer.primaryOfficeNumber}`\n                }\n              >\n                {customer.primaryExt\n                  ? `${customer.primaryOfficeNumber} ext. ${customer.primaryExt}`\n                  : `${customer.primaryOfficeNumber}`}\n              </a>\n            </td>\n            <td>\n              <a href={`tel:+1-${customer.primaryCellNumber}`}>\n                {customer.primaryCellNumber}\n              </a>\n            </td>\n            <td>\n              <a href={`mailto:${customer.primaryEmail}`}>\n                {customer.primaryEmail}\n              </a>\n            </td>\n          </tr>\n          {customer.billingJobTitle !== \"\" ? (\n            <tr>\n              <td>\n                {customer.billingContact\n                  ? customer.billingContact.firstName\n                  : null}{\" \"}\n                {customer.billingContact\n                  ? customer.billingContact.lastName\n                  : null}\n              </td>\n              <td>{customer.billingJobTitle}</td>\n              <td>\n                <a\n                  href={\n                    customer.billingExt\n                      ? `tel:+1-${customer.billingOfficeNumber},${customer.billingExt}`\n                      : `tel:+1-${customer.billingOfficeNumber}`\n                  }\n                >\n                  {customer.billingExt\n                    ? `${customer.billingOfficeNumber} ext. ${customer.billingExt}`\n                    : `${customer.billingOfficeNumber}`}\n                </a>\n              </td>\n              <td>\n                <a href={`tel:+1-${customer.billingCellNumber}`}>\n                  {customer.billingCellNumber}\n                </a>\n              </td>\n              <td>\n                <a href={`mailto:${customer.billingEmail}`}>\n                  {customer.billingEmail}\n                </a>\n              </td>\n            </tr>\n          ) : null}\n          {customer.employees\n            ? customer.employees.map((employee) => (\n                <tr>\n                  <td>\n                    {employee.firstName} {employee.lastName}\n                  </td>\n                  <td>{employee.jobTitle}</td>\n                  <td>\n                    <a\n                      href={\n                        employee.officeExt\n                          ? `tel:+1-${employee.officeNumber},${employee.officeExt}`\n                          : `tel:+1-${employee.officeNumber}`\n                      }\n                    >\n                      {employee.officeExt\n                        ? `${employee.officeNumber} ext. ${employee.officeExt}`\n                        : `${employee.officeNumber}`}\n                    </a>\n                  </td>\n                  <td>\n                    <a href={`tel:+1-${employee.cellNumber}`}>\n                      {employee.cellNumber}\n                    </a>\n                  </td>\n                  <td>\n                    <a href={`mailto:${employee.email}`}>{employee.email}</a>\n                  </td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n      <div className=\"add-employee-div\">\n        <Button outline color=\"success\" onClick={toggle}>\n          Add Employee\n        </Button>\n      </div>\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add Employee</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <div className=\"add-employee-name-div\">\n              <FormGroup>\n                <Label for=\"employeeFirstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={handleChange}\n                  invalid={errors.firstName ? true : false}\n                />\n                <FormFeedback>{errors.firstName}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"employeeLastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  onChange={handleChange}\n                  invalid={errors.lastName ? true : false}\n                />\n                <FormFeedback>{errors.lastName}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"employeeJobTitle\">Job Title</Label>\n              <Input\n                type=\"text\"\n                name=\"jobTitle\"\n                onChange={handleChange}\n                invalid={errors.jobTitle ? true : false}\n              />\n              <FormFeedback>{errors.jobTitle}</FormFeedback>\n            </FormGroup>\n            <div className=\"employee-phone-div\">\n              <FormGroup className=\"employee-office-number\">\n                <Label for=\"employeeOfficeNumber\">Office Phone Number</Label>\n                <Input\n                  type=\"text\"\n                  name=\"officeNumber\"\n                  placeholder=\"XXX-XXX-XXXX\"\n                  onChange={handleChange}\n                  invalid={errors.officeNumber ? true : false}\n                />\n                <FormFeedback>{errors.officeNumber}</FormFeedback>\n              </FormGroup>\n              <FormGroup className=\"employee-office-ext\">\n                <Label for=\"employeeOfficeExt\">ext.</Label>\n                <Input type=\"text\" name=\"officeExt\" onChange={handleChange} />\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"employeeCellNumber\">Cell Phone Number</Label>\n              <Input\n                type=\"text\"\n                name=\"cellNumber\"\n                placeholder=\"XXX-XXX-XXXX\"\n                onChange={handleChange}\n                invalid={errors.cellNumber ? true : false}\n              />\n              <FormFeedback>{errors.cellNumber}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"employeeEmail\">Email</Label>\n              <Input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"example@example.com\"\n                onChange={handleChange}\n                invalid={errors.email ? true : false}\n              />\n              <FormFeedback>{errors.email}</FormFeedback>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EmployeeTab;\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const ADD_EMPLOYEE_START = \"ADD_EMPLOYEE_START\";\nexport const ADD_EMPLOYEE_SUCCESS = \"ADD_EMPLOYEE_SUCCESS\";\nexport const ADD_EMPLOYEE_FAILURE = \"ADD_EMPLOYEE_FAILURE\";\n\nexport const addEmployeeToCustomer = (updatedCustomer) => async (dispatch) => {\n  dispatch({ type: ADD_EMPLOYEE_START });\n\n  const axiosAuth = await axiosWithAuth();\n\n  return axiosAuth\n    .put(`${dbUrl}/customer`, updatedCustomer)\n    .then(() => {\n      dispatch({\n        type: ADD_EMPLOYEE_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ADD_EMPLOYEE_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};\n","import React from \"react\";\n\nconst LiftTab = () => {\n  return <span>Lifts</span>;\n};\n\nexport default LiftTab;\n","import React from \"react\";\n\nconst DocumentTab = () => {\n  return <span>Coming Soon!!!</span>;\n};\n\nexport default DocumentTab;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport InfoTab from \"../customer-page-components/InfoTab\";\nimport TaskTab from \"../customer-page-components/TaskTab\";\nimport AppointmentTab from \"../customer-page-components/AppointmentTab\";\nimport NoteTab from \"../customer-page-components/NoteTab\";\nimport EmployeeTab from \"../customer-page-components/EmployeeTab\";\nimport LiftTab from \"../customer-page-components/LiftTab\";\nimport DocumentTab from \"../customer-page-components/DocumentTab\";\nimport { getCustomer } from \"../../actions/getCustomer\";\n\nimport \"../../styles/customer.scss\";\nimport classnames from \"classnames\";\n\nconst CustomerPage = () => {\n  const [customer, setCustomer] = useState({});\n  const getCustomerFromState = useSelector(\n    (state) => state.getCustomerReducer.customer\n  );\n  const [activeTab, setActiveTab] = useState(\"1\");\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const pathArray = location.pathname.split(\"/\");\n    const customerId = pathArray[pathArray.length - 1];\n    dispatch(getCustomer(customerId));\n  }, []);\n\n  useEffect(() => {\n    if (getCustomerFromState) {\n      setCustomer(getCustomerFromState);\n    }\n  }, [getCustomerFromState]);\n\n  const toggleTab = (tab) => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n  };\n\n  return (\n    <div className=\"customer-page customer-page-content\">\n      <h1>{customer.businessName}</h1>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"1\" })}\n            onClick={() => {\n              toggleTab(\"1\");\n            }}\n          >\n            Info\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"2\" })}\n            onClick={() => {\n              toggleTab(\"2\");\n            }}\n          >\n            Tasks\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"3\" })}\n            onClick={() => {\n              toggleTab(\"3\");\n            }}\n          >\n            Appointments\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"4\" })}\n            onClick={() => {\n              toggleTab(\"4\");\n            }}\n          >\n            Notes\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"5\" })}\n            onClick={() => {\n              toggleTab(\"5\");\n            }}\n          >\n            Employees\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"6\" })}\n            onClick={() => {\n              toggleTab(\"6\");\n            }}\n          >\n            Lifts\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"7\" })}\n            onClick={() => {\n              toggleTab(\"7\");\n            }}\n          >\n            Documents\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <InfoTab />\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <TaskTab />\n        </TabPane>\n        <TabPane tabId=\"3\">\n          <AppointmentTab />\n        </TabPane>\n        <TabPane tabId=\"4\">\n          <NoteTab />\n        </TabPane>\n        <TabPane tabId=\"5\">\n          <EmployeeTab />\n        </TabPane>\n        <TabPane tabId=\"6\">\n          <LiftTab />\n        </TabPane>\n        <TabPane tabId=\"7\">\n          <DocumentTab />\n        </TabPane>\n      </TabContent>\n    </div>\n  );\n};\n\nexport default CustomerPage;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport { editEmployee } from \"../../actions/editEmployee\";\nimport { changeEmployeeStatus } from \"../../actions/changeEmployeeStatus\";\n\nimport \"../../styles/employee.scss\";\n\nconst EmployeesTable = (props) => {\n  const [curEmployee, setCurEmployee] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    jobTitle: \"\",\n    tierLevel: undefined,\n    phoneNumber: \"\",\n    email: \"\",\n    userId: \"\",\n    active: undefined,\n  });\n  const [errorsOne, setErrorsOne] = useState({});\n  const [successOne, setSuccessOne] = useState(false);\n  const getErrorsOne = useSelector((state) => state.editEmployeeReducer.errors);\n  const getSuccessOne = useSelector(\n    (state) => state.editEmployeeReducer.success\n  );\n  const [isOpenModalOne, setIsOpenModalOne] = useState(false);\n  const [successTwo, setSuccessTwo] = useState(false);\n  const getSuccessTwo = useSelector(\n    (state) => state.changeEmployeeStatusReducer.success\n  );\n  const [isOpenModalTwo, setIsOpenModalTwo] = useState(false);\n  const dispatch = useDispatch();\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    setErrorsOne(getErrorsOne);\n  }, [getErrorsOne]);\n\n  useEffect(() => {\n    if (getSuccessOne === true) {\n      setSuccessOne(true);\n    }\n    if (getSuccessTwo === true) {\n      setSuccessTwo(true);\n    }\n  }, [getSuccessOne, getSuccessTwo]);\n\n  useEffect(() => {\n    if (successOne === true) {\n      setIsOpenModalOne(false);\n      setErrorsOne({});\n      setSuccessOne(false);\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: undefined,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n    if (successTwo === true) {\n      setIsOpenModalTwo(false);\n      setSuccessTwo(false);\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: undefined,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n  }, [successOne, successTwo]);\n\n  const toggleOne = (e, employee) => {\n    if (!isOpenModalOne) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email,\n        userId: employee.userId,\n        active: employee.active,\n      });\n    } else if (isOpenModalOne) {\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: null,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n    setIsOpenModalOne(!isOpenModalOne);\n    setErrorsOne({});\n  };\n\n  const toggleTwo = (e, employee) => {\n    if (!isOpenModalTwo) {\n      setCurEmployee({\n        firstName: employee.firstName,\n        lastName: employee.lastName,\n        jobTitle: employee.jobTitle,\n        tierLevel: employee.tierLevel,\n        phoneNumber: employee.phoneNumber,\n        email: employee.email,\n        userId: employee.userId,\n        active: employee.active,\n      });\n    } else if (isOpenModalTwo) {\n      setCurEmployee({\n        firstName: \"\",\n        lastName: \"\",\n        jobTitle: \"\",\n        tierLevel: null,\n        phoneNumber: \"\",\n        email: \"\",\n        userId: \"\",\n        active: undefined,\n      });\n    }\n    setIsOpenModalTwo(!isOpenModalTwo);\n  };\n\n  const handleChange = (e) => {\n    setCurEmployee({\n      ...curEmployee,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmitOne = (e) => {\n    e.preventDefault();\n    dispatch(editEmployee(curEmployee));\n  };\n\n  const handleSubmitTwo = (e) => {\n    e.preventDefault();\n    dispatch(changeEmployeeStatus(curEmployee));\n  };\n\n  return (\n    <div>\n      <Table hover>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Job Title</th>\n            <th>Tier Level</th>\n            <th>Phone Number</th>\n            <th>Email</th>\n            <th></th> {/*This empty header is for the edit button*/}\n            <th></th> {/*This empty header is for the change status button*/}\n          </tr>\n        </thead>\n        <tbody>\n          {props\n            ? props.props.map((employee) => (\n                <tr>\n                  <th\n                    scope=\"row\"\n                    className={employee.active ? \"\" : \"text-muted\"}\n                  >\n                    {employee.firstName} {employee.lastName}\n                  </th>\n                  <td className={employee.active ? \"\" : \"text-muted\"}>\n                    {employee.jobTitle}\n                  </td>\n                  <td\n                    className={`tier-level-col ${\n                      employee.active ? \"\" : \"text-muted\"\n                    }`}\n                  >\n                    {employee.tierLevel}\n                  </td>\n                  <td>\n                    <a\n                      className={employee.active ? \"\" : \"text-muted\"}\n                      href={`tel:+1-${employee.phoneNumber}`}\n                    >\n                      {employee.phoneNumber}\n                    </a>\n                  </td>\n                  <td className={employee.active ? \"\" : \"text-muted\"}>\n                    {employee.email}\n                  </td>\n                  <td\n                    className={employee.active ? \"\" : \"text-muted\"}\n                    onClick={(e) => toggleOne(e, employee)}\n                  >\n                    <i className=\"fad fa-pen\" />\n                  </td>\n                  <td\n                    className={employee.active ? \"\" : \"text-muted\"}\n                    onClick={(e) => toggleTwo(e, employee)}\n                  >\n                    <i className=\"fad fa-trash\" />\n                  </td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n      <Modal isOpen={isOpenModalOne} toggle={toggleOne}>\n        <ModalHeader toggle={toggleOne}>Edit Employee</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmitOne}>\n            <div className=\"name-div\">\n              <FormGroup>\n                <Label for=\"firstName\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  onChange={handleChange}\n                  value={curEmployee.firstName}\n                  invalid={errorsOne.firstName ? true : false}\n                />\n                <FormFeedback>{errorsOne.firstName}</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"lastName\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  onChange={handleChange}\n                  value={curEmployee.lastName}\n                  invalid={errorsOne.lastName ? true : false}\n                />\n                <FormFeedback>{errorsOne.lastName}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className=\"job-info-div\">\n              <FormGroup className=\"job-title-form-group\">\n                <Label for=\"jobTitle\">Job Title</Label>\n                <Input\n                  type=\"select\"\n                  name=\"jobTitle\"\n                  id=\"jobTitle\"\n                  onChange={handleChange}\n                  value={curEmployee.jobTitle}\n                  invalid={errorsOne.jobTitle ? true : false}\n                >\n                  <option>Select</option>\n                  <option>Service Technician</option>\n                  <option>Outside Sales</option>\n                  <option>Service Manager</option>\n                  <option>Dispatch</option>\n                  <option>Office Manager</option>\n                  <option>Owner</option>\n                </Input>\n                <FormFeedback>{errorsOne.jobTitle}</FormFeedback>\n              </FormGroup>\n              <FormGroup className=\"tier-level-form-group\">\n                <Label for=\"tierLevel\">Tier Level</Label>\n                <Input\n                  type=\"select\"\n                  name=\"tierLevel\"\n                  id=\"tierLevel\"\n                  onChange={handleChange}\n                  value={curEmployee.tierLevel}\n                  invalid={errorsOne.tierLevel}\n                >\n                  <option>Select</option>\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                </Input>\n                <FormFeedback>{errorsOne.tierLevel}</FormFeedback>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"phoneNumber\">Phone Number</Label>\n              <Input\n                type=\"text\"\n                name=\"phoneNumber\"\n                id=\"phoneNumber\"\n                placeholder=\"XXX-XXX-XXXX\"\n                onChange={handleChange}\n                value={curEmployee.phoneNumber}\n                invalid={errorsOne.phoneNumber}\n              />\n              <FormFeedback>{errorsOne.phoneNumber}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                onChange={handleChange}\n                disabled\n                value={curEmployee.email}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" type=\"submit\" onClick={handleSubmitOne}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={isOpenModalTwo} toggle={toggleTwo}>\n        <ModalHeader toggle={toggleTwo}>\n          {curEmployee.active\n            ? \"Set Employee as Inactive\"\n            : \"Set Employee as Active\"}\n        </ModalHeader>\n        <ModalBody>\n          {curEmployee.active\n            ? `Would you like to set ${curEmployee.firstName}'s status as inactive?`\n            : `Would you like to set ${curEmployee.firstName}'s status as active?`}\n        </ModalBody>\n        <ModalFooter className=\"modal-two-footer\">\n          <Button\n            color=\"success\"\n            type=\"submit\"\n            className=\"modal-two-btn\"\n            onClick={handleSubmitTwo}\n          >\n            YES\n          </Button>\n          <Button color=\"danger\" className=\"modal-two-btn\" onClick={toggleTwo}>\n            NO\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EmployeesTable;\n","import axiosWithAuth from \"../contexts/withAuth\";\nimport { dbUrl } from \"./index\";\n\nexport const EDIT_EMPLOYEE_START = \"EDIT_EMPLOYEE_START\";\nexport const EDIT_EMPLOYEE_SUCCESS = \"EDIT_EMPLOYEE_SUCCESS\";\nexport const EDIT_EMPLOYEE_FAILURE = \"EDIT_EMPLOYEE_FAILURE\";\n\nexport const editEmployee = (data) => async (dispatch) => {\n  dispatch({ type: EDIT_EMPLOYEE_START });\n\n  return await axiosWithAuth()\n    .put(`${dbUrl}/employee`, data)\n    .then(() => {\n      dispatch({\n        type: EDIT_EMPLOYEE_SUCCESS,\n        payload: \"SUCCESS\",\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: EDIT_EMPLOYEE_FAILURE,\n        payload: err.response.data,\n      });\n    });\n};\n","import axiosWithAuth from '../contexts/withAuth';\nimport { dbUrl } from './index';\n\nexport const CHANGE_EMPLOYEE_STATUS_START = 'CHANGE_EMPLOYEE_STATUS_START';\nexport const CHANGE_EMPLOYEE_STATUS_SUCCESS = 'CHANGE_EMPLOYEE_STATUS_SUCCESS';\nexport const CHANGE_EMPLOYEE_STATUS_FAILURE = 'CHANGE_EMPLOYEE_STATUS_FAILURE';\n\nexport const changeEmployeeStatus = data => async dispatch => {\n    dispatch({ type: CHANGE_EMPLOYEE_STATUS_START });\n\n    return await axiosWithAuth()\n        .put(`${dbUrl}/employee/status`, data)\n        .then(() => {\n            dispatch({ \n                type: CHANGE_EMPLOYEE_STATUS_SUCCESS,\n                payload: 'SUCCESS'\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: CHANGE_EMPLOYEE_STATUS_FAILURE,\n                payload: err.response.data\n            });\n        });\n};","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport EmployeesTable from \"./EmployeesTable\";\nimport { getEmployees } from \"../../actions/getEmployees\";\n\nimport '../../styles/employee.scss';\n\nconst CurrentEmployees = () => {\n  const [employees, setEmployees] = useState([]);\n  const [currentEmployees, setCurrentEmployees] = useState([]);\n  const fetchEmployees = useSelector(\n    (state) => state.getEmployeesReducer.employees\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getEmployees());\n  }, []);\n\n  useEffect(() => {\n    setEmployees(fetchEmployees.employees);\n  }, [fetchEmployees]);\n\n  useEffect(() => {\n    const activeEmployees = [];\n\n    if (employees) {\n      employees.filter((employee) => {\n        if (employee.active === true) {\n          activeEmployees.push(employee);\n        }\n      });\n    }\n\n    setCurrentEmployees(activeEmployees);\n  }, [employees]);\n\n  return (\n    <div className=\"employees-page\">\n      <h1>Current Employees</h1>\n      <EmployeesTable props={currentEmployees} />\n    </div>\n  );\n};\n\nexport default CurrentEmployees;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport EmployeesTable from \"./EmployeesTable\";\n\nimport \"../../styles/employee.scss\";\n\nconst AllEmployees = () => {\n  const [employees, setEmployees] = useState([]);\n  const getEmployees = useSelector(\n    (state) => state.getEmployeesReducer.employees\n  );\n\n  useEffect(() => {\n    setEmployees(getEmployees.employees);\n  }, [getEmployees]);\n\n  return (\n    <div className=\"employees-page\">\n      <h1>All Employees</h1>\n      <EmployeesTable props={employees} />\n    </div>\n  );\n};\n\nexport default AllEmployees;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Task from \"../content-components/Task\";\nimport Calendar from \"../content-components/Calendar\";\nimport OpenWorkOrders from \"../content-components/OpenWorkOrders\";\nimport ClosedWorkOrders from \"../content-components/ClosedWorkOrders\";\nimport WorkOrder from \"../content-components/WorkOrder\";\nimport Customers from \"../content-components/Customers\";\nimport Customer from \"../content-components/Customer\";\nimport CurrentEmployees from \"../content-components/CurrentEmployees\";\nimport AllEmployees from \"../content-components/AllEmployees\";\n\nimport \"../../styles/content.scss\";\n\nconst Content = () => {\n  const taskView = useSelector((state) => state.taskToggleReducer.calendarView);\n  const openWorkOrders = useSelector(\n    (state) => state.workOrderToggleReducer.open\n  );\n  const allEmployees = useSelector((state) => state.employeesToggleReducer.all);\n\n  return (\n    <div className=\"content\">\n      <Switch>\n        <Route exact path=\"/dashboard\">\n          {!taskView ? <Task /> : <Calendar />}\n        </Route>\n        <Route exact path=\"/dashboard/workorders\">\n          {openWorkOrders ? <OpenWorkOrders /> : <ClosedWorkOrders />}\n        </Route>\n        <Route exact path=\"/dashboard/workorders/:id\">\n          <WorkOrder />\n        </Route>\n        <Route exact path=\"/dashboard/customers\">\n          <Customers />\n        </Route>\n        <Route exact path=\"/dashboard/customers/:id\">\n          <Customer />\n        </Route>\n        <Route exact path=\"/dashboard/employees\">\n          {!allEmployees ? <CurrentEmployees /> : <AllEmployees />}\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\n\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport Content from \"./Content\";\nimport Footer from \"./Footer\";\n\nimport \"../../styles/dashboard.scss\";\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <Header />\n      <div className=\"content-sidebar-div\">\n        <Sidebar />\n        <Content />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { AuthProvider } from \"../src/contexts/AuthContext\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport PrivateRoute from \"./components/login-components/PrivateRoute\";\nimport Login from \"./components/login-components/Login\";\nimport ForgotPassword from \"./components/login-components/ForgotPassword\";\nimport Dashboard from \"./components/dashboard-components/Dashboard\";\n\nfunction App() {\n  return (\n    <Router>\n      <AuthProvider>\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/forgot-password\" component={ForgotPassword} />\n          <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n        </Switch>\n      </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import {\n  GET_CURRENT_USER_START,\n  GET_CURRENT_USER_SUCCESS,\n  GET_CURRENT_USER_FAILED,\n} from \"../actions\";\n\nconst initialState = {\n  currentUser: null,\n  gettingCurrentUser: false,\n  error: null,\n};\n\nexport const getCurrentUserReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CURRENT_USER_START:\n      return {\n        ...state,\n        gettingCurrentUser: true,\n      };\n    case GET_CURRENT_USER_SUCCESS:\n      return {\n        ...state,\n        gettingCurrentUser: false,\n        currentUser: action.payload,\n      };\n    case GET_CURRENT_USER_FAILED:\n      return {\n        ...state,\n        gettingCurrentUser: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_USERS_START,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  users: [],\n  gettingUsers: false,\n  error: null,\n};\n\nexport const getUsersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USERS_START:\n      return {\n        ...state,\n        gettingUsers: true,\n      };\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        gettingUsers: false,\n        users: action.payload,\n      };\n    case GET_USERS_FAILURE:\n      return {\n        ...state,\n        gettingUsers: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { CALENDAR_VIEW, LIST_VIEW } from \"../actions\";\n\nconst initialState = {\n  calendarView: false,\n};\n\nexport const taskToggleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CALENDAR_VIEW:\n      return {\n        ...state,\n        calendarView: true,\n      };\n    case LIST_VIEW:\n      return {\n        ...state,\n        calendarView: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { ADD_TASK_START, ADD_TASK_SUCCESS, ADD_TASK_FAILURE } from \"../actions\";\n\nconst initialState = {\n  adding: false,\n  success: false,\n  errors: null,\n};\n\nexport const addTaskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK_START:\n      return {\n        ...state,\n        adding: true,\n      };\n    case ADD_TASK_SUCCESS:\n      return {\n        ...state,\n        adding: false,\n        success: true,\n      };\n    case ADD_TASK_FAILURE:\n      return {\n        ...state,\n        adding: false,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_TASKS_START,\n  GET_TASKS_SUCCESS,\n  GET_TASKS_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  tasks: [],\n  gettingTasks: false,\n  error: null,\n};\n\nexport const getTasksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TASKS_START:\n      return {\n        ...state,\n        gettingTasks: true,\n      };\n    case GET_TASKS_SUCCESS:\n      return {\n        ...state,\n        gettingTasks: false,\n        tasks: action.payload,\n      };\n    case GET_TASKS_FAILURE:\n      return {\n        ...state,\n        gettingTasks: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n    EDIT_TASK_START,\n    EDIT_TASK_SUCCESS,\n    EDIT_TASK_FAILURE,\n  } from \"../actions\";\n  \n  const initialState = {\n    editing: false,\n    success: false,\n    errors: null,\n  };\n  \n  export const editTaskReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case EDIT_TASK_START:\n        return {\n          ...state,\n          editing: true,\n        };\n      case EDIT_TASK_SUCCESS:\n        return {\n          ...state,\n          editing: false,\n          success: true,\n        };\n      case EDIT_TASK_FAILURE:\n        return {\n          ...state,\n          editing: false,\n          errors: action.payload,\n        };\n      default:\n        return state;\n    }\n  };","import {\n    DELETE_TASK_START,\n    DELETE_TASK_SUCCESS,\n    DELETE_TASK_FAILURE,\n  } from \"../actions\";\n  \n  const initialState = {\n    deleting: false,\n    success: false,\n    errors: null,\n  };\n  \n  export const deleteTaskReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case DELETE_TASK_START:\n        return {\n          ...state,\n          deleting: true,\n        };\n      case DELETE_TASK_SUCCESS:\n        return {\n          ...state,\n          deleting: false,\n          success: true,\n        };\n      case DELETE_TASK_FAILURE:\n        return {\n          ...state,\n          deleting: false,\n          errors: action.payload,\n        };\n      default:\n        return state;\n    }\n  };","import { ADD_EVENT_START, ADD_EVENT_SUCCESS, ADD_EVENT_FAILURE } from \"../actions\";\n\nconst initialState = {\n  adding: false,\n  success: false,\n  errors: null,\n};\n\nexport const addEventReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_EVENT_START:\n      return {\n        ...state,\n        adding: true,\n      };\n    case ADD_EVENT_SUCCESS:\n      return {\n        ...state,\n        adding: false,\n        success: true,\n      };\n    case ADD_EVENT_FAILURE:\n      return {\n        ...state,\n        adding: false,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};","import {\n    GET_EVENTS_START,\n    GET_EVENTS_SUCCESS,\n    GET_EVENTS_FAILURE,\n  } from \"../actions\";\n  \n  const initialState = {\n    events: [],\n    gettingEvents: false,\n    error: null,\n  };\n  \n  export const getEventsReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case GET_EVENTS_START:\n        return {\n          ...state,\n          gettingEvents: true,\n        };\n      case GET_EVENTS_SUCCESS:\n        return {\n          ...state,\n          gettingEvents: false,\n          events: action.payload,\n        };\n      case GET_EVENTS_FAILURE:\n        return {\n          ...state,\n          gettingEvents: false,\n          error: action.payload,\n        };\n      default:\n        return state;\n    }\n  };","import {\n    DELETE_EVENT_START,\n    DELETE_EVENT_SUCCESS,\n    DELETE_EVENT_FAILURE,\n  } from \"../actions\";\n  \n  const initialState = {\n    deleting: false,\n    success: false,\n    errors: null,\n  };\n  \n  export const deleteEventReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case DELETE_EVENT_START:\n        return {\n          ...state,\n          deleting: true,\n        };\n      case DELETE_EVENT_SUCCESS:\n        return {\n          ...state,\n          deleting: false,\n          success: true,\n        };\n      case DELETE_EVENT_FAILURE:\n        return {\n          ...state,\n          deleting: false,\n          errors: action.payload,\n        };\n      default:\n        return state;\n    }\n  };","import { OPEN_WORK_ORDERS, CLOSE_WORK_ORDERS } from \"../actions\";\n\nconst initialState = {\n  open: true,\n};\n\nexport const workOrderToggleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case OPEN_WORK_ORDERS:\n      return {\n        ...state,\n        open: true,\n      };\n    case CLOSE_WORK_ORDERS:\n      return {\n        ...state,\n        open: false,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_WORK_ORDER_START,\n  ADD_WORK_ORDER_SUCCESS,\n  ADD_WORK_ORDER_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  adding: false,\n  success: false,\n  errors: null,\n};\n\nexport const addWorkOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_WORK_ORDER_START:\n      return {\n        ...state,\n        adding: true,\n      };\n    case ADD_WORK_ORDER_SUCCESS:\n      return {\n        ...state,\n        adding: false,\n        success: true,\n      };\n    case ADD_WORK_ORDER_FAILURE:\n      return {\n        ...state,\n        adding: false,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_WORK_ORDERS_START,\n  GET_WORK_ORDERS_SUCCESS,\n  GET_WORK_ORDERS_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  workOrders: [],\n  gettingWorkOrders: false,\n  error: null,\n};\n\nexport const getWorkOrdersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_WORK_ORDERS_START:\n      return {\n        ...state,\n        gettingWorkOrders: true,\n      };\n    case GET_WORK_ORDERS_SUCCESS:\n      return {\n        ...state,\n        gettingWorkOrders: false,\n        workOrders: action.payload,\n      };\n    case GET_WORK_ORDERS_FAILURE:\n      return {\n        ...state,\n        gettingWorkOrders: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_WORK_ORDER_START,\n  GET_WORK_ORDER_SUCCESS,\n  GET_WORK_ORDER_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  workOrder: null,\n  users: [],\n  gettingWorkOrder: false,\n  error: null,\n};\n\nexport const getWorkOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_WORK_ORDER_START:\n      return {\n        ...state,\n        gettingWorkOrder: true,\n      };\n    case GET_WORK_ORDER_SUCCESS:\n      return {\n        ...state,\n        gettingWorkOrder: false,\n        workOrder: action.payload.workOrder,\n        users: action.payload.responseArray,\n      };\n    case GET_WORK_ORDER_FAILURE:\n      return {\n        ...state,\n        gettingWorkOrder: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n    EDIT_WORK_ORDER_START,\n    EDIT_WORK_ORDER_SUCCESS,\n    EDIT_WORK_ORDER_FAILURE,\n  } from \"../actions\";\n  \n  const initialState = {\n    editing: false,\n    success: false,\n    errors: null,\n  };\n  \n  export const editWorkOrderReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case EDIT_WORK_ORDER_START:\n        return {\n          ...state,\n          editing: true,\n        };\n      case EDIT_WORK_ORDER_SUCCESS:\n        return {\n          ...state,\n          editing: false,\n          success: true,\n        };\n      case EDIT_WORK_ORDER_FAILURE:\n        return {\n          ...state,\n          editing: false,\n          errors: action.payload,\n        };\n      default:\n        return state;\n    }\n  };","import { OPEN_JOBS, CLOSE_JOBS } from \"../actions\";\n\nconst initialState = {\n  open: true,\n};\n\nexport const jobToggleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case OPEN_JOBS:\n      return {\n        ...state,\n        open: true,\n      };\n    case CLOSE_JOBS:\n      return {\n        ...state,\n        open: false,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  REGISTER_CUSTOMER_START,\n  REGISTER_CUSTOMER_SUCCESS,\n  REGISTER_CUSTOMER_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  registering: false,\n  success: false,\n  errors: null,\n};\n\nexport const registerCustomerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_CUSTOMER_START:\n      return {\n        ...state,\n        registering: true,\n      };\n    case REGISTER_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        registering: false,\n        success: true,\n      };\n    case REGISTER_CUSTOMER_FAILURE:\n      return {\n        ...state,\n        registering: false,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_CUSTOMERS_START,\n  GET_CUSTOMERS_SUCCESS,\n  GET_CUSTOMERS_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  customers: [],\n  gettingCustomers: false,\n  error: null,\n};\n\nexport const getCustomersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CUSTOMERS_START:\n      return {\n        ...state,\n        gettingCustomers: true,\n      };\n    case GET_CUSTOMERS_SUCCESS:\n      return {\n        ...state,\n        gettingCustomers: false,\n        customers: action.payload,\n      };\n    case GET_CUSTOMERS_FAILURE:\n      return {\n        ...state,\n        gettingCustomers: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_CUSTOMER_START,\n  GET_CUSTOMER_SUCCESS,\n  GET_CUSTOMER_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  customer: null,\n  gettingCustomer: false,\n  error: null,\n};\n\nexport const getCustomerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CUSTOMER_START:\n      return {\n        ...state,\n        gettingCustomer: true,\n      };\n    case GET_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        gettingCustomer: false,\n        customer: action.payload,\n      };\n    case GET_CUSTOMER_FAILURE:\n      return {\n        ...state,\n        gettingCustomer: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  EDIT_CUSTOMER_START,\n  EDIT_CUSTOMER_SUCCESS,\n  EDIT_CUSTOMER_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  editing: false,\n  success: false,\n  errors: null,\n};\n\nexport const editCustomerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case EDIT_CUSTOMER_START:\n      return {\n        ...state,\n        editing: true,\n      };\n    case EDIT_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        editing: false,\n        success: true,\n      };\n    case EDIT_CUSTOMER_FAILURE:\n      return {\n        ...state,\n        editing: false,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_CUSTOMER_TASKS_START,\n  GET_CUSTOMER_TASKS_SUCCESS,\n  GET_CUSTOMER_TASKS_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  tasks: [],\n  gettingTasks: false,\n  error: null,\n};\n\nexport const getCustomerTasksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CUSTOMER_TASKS_START:\n      return {\n        ...state,\n        gettingTasks: true,\n      };\n    case GET_CUSTOMER_TASKS_SUCCESS:\n      return {\n        ...state,\n        gettingTasks: false,\n        tasks: action.payload,\n      };\n    case GET_CUSTOMER_TASKS_FAILURE:\n      return {\n        ...state,\n        gettingTasks: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_CUSTOMER_NOTES_START,\n  GET_CUSTOMER_NOTES_SUCCESS,\n  GET_CUSTOMER_NOTES_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  notes: [],\n  gettingNotes: false,\n  error: null,\n};\n\nexport const getCustomerNotesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CUSTOMER_NOTES_START:\n      return {\n        ...state,\n        gettingNotes: true,\n      };\n    case GET_CUSTOMER_NOTES_SUCCESS:\n      return {\n        ...state,\n        gettingNotes: false,\n        notes: action.payload,\n      };\n    case GET_CUSTOMER_NOTES_FAILURE:\n      return {\n        ...state,\n        gettingNotes: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_EMPLOYEE_START,\n  ADD_EMPLOYEE_SUCCESS,\n  ADD_EMPLOYEE_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  editing: false,\n  success: false,\n  errors: null,\n};\n\nexport const addEmployeeToCustomerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_EMPLOYEE_START:\n      return {\n        ...state,\n        editing: true,\n      };\n    case ADD_EMPLOYEE_SUCCESS:\n      return {\n        ...state,\n        editing: false,\n        success: true,\n      };\n    case ADD_EMPLOYEE_FAILURE:\n      return {\n        ...state,\n        editing: false,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { ADD_NOTE_START, ADD_NOTE_SUCCESS, ADD_NOTE_FAILURE } from \"../actions\";\n\nconst initialState = {\n  adding: false,\n  success: false,\n  errors: null,\n};\n\nexport const addNoteReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_NOTE_START:\n      return {\n        ...state,\n        adding: true,\n      };\n    case ADD_NOTE_SUCCESS:\n      return {\n        ...state,\n        adding: false,\n        success: true,\n      };\n    case ADD_NOTE_FAILURE:\n      return {\n        ...state,\n        adding: false,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};","import { CURRENT_EMPLOYEES, ALL_EMPLOYEES } from \"../actions\";\n\nconst initialState = {\n  all: false,\n};\n\nexport const employeesToggleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CURRENT_EMPLOYEES:\n      return {\n        ...state,\n        all: false,\n      };\n    case ALL_EMPLOYEES:\n      return {\n        ...state,\n        all: true,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  REGISTER_EMPLOYEE_START,\n  REGISTER_EMPLOYEE_SUCCESS,\n  REGISTER_EMPLOYEE_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  registering: false,\n  success: false,\n  errors: null,\n};\n\nexport const registerEmployeeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_EMPLOYEE_START:\n      return {\n        ...state,\n        registering: true,\n      };\n    case REGISTER_EMPLOYEE_SUCCESS:\n      return {\n        ...state,\n        registering: false,\n        success: true,\n      };\n    case REGISTER_EMPLOYEE_FAILURE:\n      return {\n        ...state,\n        registering: false,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_EMPLOYEES_START,\n  GET_EMPLOYEES_SUCCESS,\n  GET_EMPLOYEES_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  employees: [],\n  gettingEmployees: false,\n  error: null,\n};\n\nexport const getEmployeesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_EMPLOYEES_START:\n      return {\n        ...state,\n        gettingEmployees: true,\n      };\n    case GET_EMPLOYEES_SUCCESS:\n      return {\n        ...state,\n        gettingEmployees: false,\n        employees: action.payload,\n      };\n    case GET_EMPLOYEES_FAILURE:\n      return {\n        ...state,\n        gettingEmployees: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  EDIT_EMPLOYEE_START,\n  EDIT_EMPLOYEE_SUCCESS,\n  EDIT_EMPLOYEE_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  editing: false,\n  success: false,\n  errors: null,\n};\n\nexport const editEmployeeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case EDIT_EMPLOYEE_START:\n      return {\n        ...state,\n        editing: true,\n      };\n    case EDIT_EMPLOYEE_SUCCESS:\n      return {\n        ...state,\n        editing: false,\n        success: true,\n      };\n    case EDIT_EMPLOYEE_FAILURE:\n      return {\n        ...state,\n        editing: false,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  CHANGE_EMPLOYEE_STATUS_START,\n  CHANGE_EMPLOYEE_STATUS_SUCCESS,\n  CHANGE_EMPLOYEE_STATUS_FAILURE,\n} from \"../actions\";\n\nconst initialState = {\n  changingStatus: false,\n  success: false,\n  errors: null,\n};\n\nexport const changeEmployeeStatusReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_EMPLOYEE_STATUS_START:\n      return {\n        ...state,\n        changingStatus: true,\n      };\n    case CHANGE_EMPLOYEE_STATUS_SUCCESS:\n      return {\n        ...state,\n        changingStatus: false,\n        success: true,\n      };\n    case CHANGE_EMPLOYEE_STATUS_FAILURE:\n      return {\n        ...state,\n        changingStatus: false,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\n// USER REDUCERS\nimport { getCurrentUserReducer } from \"./getCurrentUserReducer\";\nimport { getUsersReducer } from \"./getUsersReducer\";\n\n// TASK REDUCERS\nimport { taskToggleReducer } from \"./taskToggleReducer\";\nimport { addTaskReducer } from \"./addTaskReducer\";\nimport { getTasksReducer } from \"./getTasksReducer\";\nimport { editTaskReducer } from \"./editTaskReducer\";\nimport { deleteTaskReducer } from \"./deleteTaskReducer\";\n\n// EVENT REDUCERS\nimport { addEventReducer } from \"./addEventReducer\";\nimport { getEventsReducer } from \"./getEventsReducer\";\nimport { deleteEventReducer } from \"./deleteEventReducer\";\n\n// WORK ORDER REDUCERS\nimport { workOrderToggleReducer } from \"./workOrderToggleReducer\";\nimport { addWorkOrderReducer } from \"./addWorkOrderReducer\";\nimport { getWorkOrdersReducer } from \"./getWorkOrdersReducer\";\nimport { getWorkOrderReducer } from \"./getWorkOrderReducer\";\nimport { editWorkOrderReducer } from \"./editWorkOrderReducer\";\n\n// JOB REDUCERS\nimport { jobToggleReducer } from \"./jobToggleReducer\";\n\n// CUSTOMER REDUCERS\nimport { registerCustomerReducer } from \"./registerCustomerReducer\";\nimport { getCustomersReducer } from \"./getCustomersReducer\";\nimport { getCustomerReducer } from \"./getCustomerReducer\";\nimport { editCustomerReducer } from \"./editCustomerReducer\";\nimport { getCustomerTasksReducer } from \"./getCustomerTasksReducer\";\nimport { getCustomerNotesReducer } from \"./getCustomerNotesReducer\";\nimport { addEmployeeToCustomerReducer } from \"./addEmployeeToCustomerReducer\";\n\n// NOTE REDUCERS\nimport { addNoteReducer } from \"./addNoteReducer\";\n\n// EMPLOYEE REDUCERS\nimport { employeesToggleReducer } from \"./employeesToggleReducer\";\nimport { registerEmployeeReducer } from \"./registerEmployeeReducer\";\nimport { getEmployeesReducer } from \"./getEmployeesReducer\";\nimport { editEmployeeReducer } from \"./editEmployeeReducer\";\nimport { changeEmployeeStatusReducer } from \"./changeEmployeeStatusReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"getCurrentUserReducer\"],\n};\n\nconst rootReducer = combineReducers({\n  getCurrentUserReducer,\n  getUsersReducer,\n  taskToggleReducer,\n  addTaskReducer,\n  getTasksReducer,\n  editTaskReducer,\n  deleteTaskReducer,\n  addEventReducer,\n  getEventsReducer,\n  deleteEventReducer,\n  workOrderToggleReducer,\n  addWorkOrderReducer,\n  getWorkOrdersReducer,\n  getWorkOrderReducer,\n  editWorkOrderReducer,\n  jobToggleReducer,\n  registerCustomerReducer,\n  getCustomersReducer,\n  getCustomerReducer,\n  editCustomerReducer,\n  getCustomerTasksReducer,\n  getCustomerNotesReducer,\n  addEmployeeToCustomerReducer,\n  addNoteReducer,\n  employeesToggleReducer,\n  registerEmployeeReducer,\n  getEmployeesReducer,\n  editEmployeeReducer,\n  changeEmployeeStatusReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nexport const store = createStore(rootReducer, applyMiddleware(logger, thunk));\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from './configureStore'\nimport { Provider } from \"react-redux\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.c943cf04.png\";"],"sourceRoot":""}